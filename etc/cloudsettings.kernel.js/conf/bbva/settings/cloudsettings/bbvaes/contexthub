// /*
//  jQuery JavaScript Library v3.4.1
//  https://jquery.com/

//  Includes Sizzle.js
//  https://sizzlejs.com/

//  Copyright JS Foundation and other contributors
//  Released under the MIT license
//  https://jquery.org/license

//  Date: 2019-05-01T21:04Z
//  Sizzle CSS Selector Engine v2.3.4
//  https://sizzlejs.com/

//  Copyright JS Foundation and other contributors
//  Released under the MIT license
//  https://js.foundation/

//  Date: 2019-04-08
// */
// window.ContextHubKernelConfig = {
//     debug: !1,
//     initializationTimeout: 2E3,
//     stores: {
//         segmentation: {
//             type: "aem.segmentation",
//             required: !0
//         },
//         emulators: {
//             type: "granite.emulators",
//             required: !0
//         },
//         surferinfo: {
//             type: "contexthub.surferinfo",
//             required: !0
//         },
//         pagedata: {
//             type: "aem.pagedata",
//             required: !0
//         },
//         eventdata: {
//             type: "aem.analyticsdata",
//             required: !0
//         },
//         "bbvaes-store": {
//             type: "bbva.personalisationstore",
//             required: !0,
//             config: {
//                 segmentType: "globalSegment",
//                 products: "tipoProductos",
//                 campaignsCode: "campaignsCode",
//                 occupation: "tipoOcupacion",
//                 collectivecodes: "collectiveCodes",
//                 isclientmobile: "isClient",
//                 isclienteempresa: "clienteEmpresa",
//                 liquidityAccountHolder: "liquidityAccountHolder",
//                 productsmobile: "ProductsMobile",
//                 isCustomer: {
//                     evalFunction: "existsCookie",
//                     parameter: "tipoSegmentoCLI"
//                 },
//                 windowItems: {
//                     selectors: "channel"
//                 }
//             }
//         }
//     }
// };
// (function(d, k) {
//     "object" === typeof module && "object" === typeof module.exports ? module.exports = d.document ? k(d, !0) : function(d) {
//         if (!d.document)
//             throw Error("jQuery requires a window with a document");
//         return k(d)
//     }
//     : k(d)
// }
// )("undefined" !== typeof window ? window : this, function(d, k) {
//     function f(b, e, l) {
//         l = l || C;
//         var a, h = l.createElement("script");
//         h.text = b;
//         if (e)
//             for (a in Fb)
//                 (b = e[a] || e.getAttribute && e.getAttribute(a)) && h.setAttribute(a, b);
//         l.head.appendChild(h).parentNode.removeChild(h)
//     }
//     function a(b) {
//         return null == b ? b + "" : "object" === typeof b || "function" === typeof b ? Ia[db.call(b)] || "object" : typeof b
//     }
//     function c(b) {
//         var e = !!b && "length"in b && b.length
//           , l = a(b);
//         return x(b) || ha(b) ? !1 : "array" === l || 0 === e || "number" === typeof e && 0 < e && e - 1 in b
//     }
//     function g(b, e) {
//         return b.nodeName && b.nodeName.toLowerCase() === e.toLowerCase()
//     }
//     function p(b, e, l) {
//         return x(e) ? h.grep(b, function(b, a) {
//             return !!e.call(b, a, b) !== l
//         }) : e.nodeType ? h.grep(b, function(b) {
//             return b === e !== l
//         }) : "string" !== typeof e ? h.grep(b, function(b) {
//             return -1 < Ja.call(e, b) !== l
//         }) : h.filter(e, b, l)
//     }
//     function n(b, e) {
//         for (; (b = b[e]) && 1 !== b.nodeType; )
//             ;
//         return b
//     }
//     function m(b) {
//         var e = {};
//         h.each(b.match(Z) || [], function(b, a) {
//             e[a] = !0
//         });
//         return e
//     }
//     function t(b) {
//         return b
//     }
//     function r(b) {
//         throw b;
//     }
//     function u(b, e, l, a) {
//         var q;
//         try {
//             b && x(q = b.promise) ? q.call(b).done(e).fail(l) : b && x(q = b.then) ? q.call(b, e, l) : e.apply(void 0, [b].slice(a))
//         } catch (Q) {
//             l.apply(void 0, [Q])
//         }
//     }
//     function z() {
//         C.removeEventListener("DOMContentLoaded", z);
//         d.removeEventListener("load", z);
//         h.ready()
//     }
//     function I(b, e) {
//         return e.toUpperCase()
//     }
//     function y(b) {
//         return b.replace(Gb, "ms-").replace(Hb, I)
//     }
//     function F() {
//         this.expando = h.expando + F.uid++
//     }
//     function T(b, e, l) {
//         if (void 0 === l && 1 === b.nodeType)
//             if (l = "data-" + e.replace(Ib, "-$\x26").toLowerCase(),
//             l = b.getAttribute(l),
//             "string" === typeof l) {
//                 try {
//                     var a = l;
//                     l = "true" === a ? !0 : "false" === a ? !1 : "null" === a ? null : a === +a + "" ? +a : Jb.test(a) ? JSON.parse(a) : a
//                 } catch (w) {}
//                 O.set(b, e, l)
//             } else
//                 l = void 0;
//         return l
//     }
//     function ia(b, e, l, a) {
//         var q, c = 20, d = a ? function() {
//             return a.cur()
//         }
//         : function() {
//             return h.css(b, e, "")
//         }
//         , f = d(), g = l && l[3] || (h.cssNumber[e] ? "" : "px"), k = b.nodeType && (h.cssNumber[e] || "px" !== g && +f) && wa.exec(h.css(b, e));
//         if (k && k[3] !== g) {
//             f /= 2;
//             g = g || k[3];
//             for (k = +f || 1; c--; )
//                 h.style(b, e, k + g),
//                 0 >= (1 - q) * (1 - (q = d() / f || .5)) && (c = 0),
//                 k /= q;
//             k *= 2;
//             h.style(b, e, k + g);
//             l = l || []
//         }
//         if (l) {
//             k = +k || +f || 0;
//             var p = l[1] ? k + (l[1] + 1) * l[2] : +l[2];
//             a && (a.unit = g,
//             a.start = k,
//             a.end = p)
//         }
//         return p
//     }
//     function G(b, e) {
//         for (var l, a, c = [], d = 0, g = b.length; d < g; d++)
//             if (a = b[d],
//             a.style)
//                 if (l = a.style.display,
//                 e) {
//                     if ("none" === l && (c[d] = v.get(a, "display") || null,
//                     c[d] || (a.style.display = "")),
//                     "" === a.style.display && Ka(a)) {
//                         l = d;
//                         var f = a.ownerDocument;
//                         a = a.nodeName;
//                         var k = eb[a];
//                         k || (f = f.body.appendChild(f.createElement(a)),
//                         k = h.css(f, "display"),
//                         f.parentNode.removeChild(f),
//                         "none" === k && (k = "block"),
//                         eb[a] = k);
//                         f = k;
//                         c[l] = f
//                     }
//                 } else
//                     "none" !== l && (c[d] = "none",
//                     v.set(a, "display", l));
//         for (d = 0; d < g; d++)
//             null != c[d] && (b[d].style.display = c[d]);
//         return b
//     }
//     function D(b, e) {
//         var l = "undefined" !== typeof b.getElementsByTagName ? b.getElementsByTagName(e || "*") : "undefined" !== typeof b.querySelectorAll ? b.querySelectorAll(e || "*") : [];
//         return void 0 === e || e && g(b, e) ? h.merge([b], l) : l
//     }
//     function ba(b, e) {
//         for (var l = 0, a = b.length; l < a; l++)
//             v.set(b[l], "globalEval", !e || v.get(e[l], "globalEval"))
//     }
//     function M(b, e, l, c, d) {
//         for (var q, w, f, g = e.createDocumentFragment(), k = [], p = 0, m = b.length; p < m; p++)
//             if ((q = b[p]) || 0 === q)
//                 if ("object" === a(q))
//                     h.merge(k, q.nodeType ? [q] : q);
//                 else if (Lb.test(q)) {
//                     w = w || g.appendChild(e.createElement("div"));
//                     f = (fb.exec(q) || ["", ""])[1].toLowerCase();
//                     f = R[f] || R._default;
//                     w.innerHTML = f[1] + h.htmlPrefilter(q) + f[2];
//                     for (f = f[0]; f--; )
//                         w = w.lastChild;
//                     h.merge(k, w.childNodes);
//                     w = g.firstChild;
//                     w.textContent = ""
//                 } else
//                     k.push(e.createTextNode(q));
//         g.textContent = "";
//         for (p = 0; q = k[p++]; )
//             if (c && -1 < h.inArray(q, c))
//                 d && d.push(q);
//             else if (b = ka(q),
//             w = D(g.appendChild(q), "script"),
//             b && ba(w),
//             l)
//                 for (f = 0; q = w[f++]; )
//                     gb.test(q.type || "") && l.push(q);
//         return g
//     }
//     function A() {
//         return !0
//     }
//     function L() {
//         return !1
//     }
//     function Sa(b, e) {
//         a: {
//             try {
//                 var l = C.activeElement;
//                 break a
//             } catch (q) {}
//             l = void 0
//         }
//         return b === l === ("focus" === e)
//     }
//     function V(b, e, l, a, c, d) {
//         var q;
//         if ("object" === typeof e) {
//             "string" !== typeof l && (a = a || l,
//             l = void 0);
//             for (q in e)
//                 V(b, q, l, a, e[q], d);
//             return b
//         }
//         null == a && null == c ? (c = l,
//         a = l = void 0) : null == c && ("string" === typeof l ? (c = a,
//         a = void 0) : (c = a,
//         a = l,
//         l = void 0));
//         if (!1 === c)
//             c = L;
//         else if (!c)
//             return b;
//         if (1 === d) {
//             var f = c;
//             c = function(b) {
//                 h().off(b);
//                 return f.apply(this, arguments)
//             }
//             ;
//             c.guid = f.guid || (f.guid = h.guid++)
//         }
//         return b.each(function() {
//             h.event.add(this, e, c, a, l)
//         })
//     }
//     function B(b, e, a) {
//         a ? (v.set(b, e, !1),
//         h.event.add(b, e, {
//             namespace: !1,
//             handler: function(b) {
//                 var l = v.get(this, e);
//                 if (b.isTrigger & 1 && this[e])
//                     if (l.length)
//                         (h.event.special[e] || {}).delegateType && b.stopPropagation();
//                     else {
//                         l = W.call(arguments);
//                         v.set(this, e, l);
//                         var c = a(this, e);
//                         this[e]();
//                         var q = v.get(this, e);
//                         l !== q || c ? v.set(this, e, !1) : q = {};
//                         if (l !== q)
//                             return b.stopImmediatePropagation(),
//                             b.preventDefault(),
//                             q.value
//                     }
//                 else
//                     l.length && (v.set(this, e, {
//                         value: h.event.trigger(h.extend(l[0], h.Event.prototype), l.slice(1), this)
//                     }),
//                     b.stopImmediatePropagation())
//             }
//         })) : void 0 === v.get(b, e) && h.event.add(b, e, A)
//     }
//     function ca(b, e) {
//         return g(b, "table") && g(11 !== e.nodeType ? e : e.firstChild, "tr") ? h(b).children("tbody")[0] || b : b
//     }
//     function La(b) {
//         b.type = (null !== b.getAttribute("type")) + "/" + b.type;
//         return b
//     }
//     function K(b) {
//         "true/" === (b.type || "").slice(0, 5) ? b.type = b.type.slice(5) : b.removeAttribute("type");
//         return b
//     }
//     function xa(b, e) {
//         var a, c;
//         if (1 === e.nodeType) {
//             if (v.hasData(b)) {
//                 var d = v.access(b);
//                 var f = v.set(e, d);
//                 if (d = d.events)
//                     for (c in delete f.handle,
//                     f.events = {},
//                     d)
//                         for (f = 0,
//                         a = d[c].length; f < a; f++)
//                             h.event.add(e, c, d[c][f])
//             }
//             O.hasData(b) && (b = O.access(b),
//             b = h.extend({}, b),
//             O.set(e, b))
//         }
//     }
//     function la(b, e, a, c) {
//         e = hb.apply([], e);
//         var l, q = 0, d = b.length, g = d - 1, k = e[0], p = x(k);
//         if (p || 1 < d && "string" === typeof k && !E.checkClone && Mb.test(k))
//             return b.each(function(l) {
//                 var h = b.eq(l);
//                 p && (e[0] = k.call(this, l, h.html()));
//                 la(h, e, a, c)
//             });
//         if (d) {
//             var m = M(e, b[0].ownerDocument, !1, b, c);
//             var r = m.firstChild;
//             1 === m.childNodes.length && (m = r);
//             if (r || c) {
//                 r = h.map(D(m, "script"), La);
//                 for (l = r.length; q < d; q++) {
//                     var n = m;
//                     q !== g && (n = h.clone(n, !0, !0),
//                     l && h.merge(r, D(n, "script")));
//                     a.call(b[q], n, q)
//                 }
//                 if (l)
//                     for (m = r[r.length - 1].ownerDocument,
//                     h.map(r, K),
//                     q = 0; q < l; q++)
//                         n = r[q],
//                         gb.test(n.type || "") && !v.access(n, "globalEval") && h.contains(m, n) && (n.src && "module" !== (n.type || "").toLowerCase() ? h._evalUrl && !n.noModule && h._evalUrl(n.src, {
//                             nonce: n.nonce || n.getAttribute("nonce")
//                         }) : f(n.textContent.replace(Ob, ""), n, m))
//             }
//         }
//         return b
//     }
//     function Ba(b, e, a) {
//         for (var l = e ? h.filter(e, b) : b, c = 0; null != (e = l[c]); c++)
//             a || 1 !== e.nodeType || h.cleanData(D(e)),
//             e.parentNode && (a && ka(e) && ba(D(e, "script")),
//             e.parentNode.removeChild(e));
//         return b
//     }
//     function ta(b, e, a) {
//         var l = b.style;
//         if (a = a || Ma(b)) {
//             var c = a.getPropertyValue(e) || a[e];
//             "" !== c || ka(b) || (c = h.style(b, e));
//             if (!E.pixelBoxStyles() && Ta.test(c) && Pb.test(e)) {
//                 b = l.width;
//                 e = l.minWidth;
//                 var d = l.maxWidth;
//                 l.minWidth = l.maxWidth = l.width = c;
//                 c = a.width;
//                 l.width = b;
//                 l.minWidth = e;
//                 l.maxWidth = d
//             }
//         }
//         return void 0 !== c ? c + "" : c
//     }
//     function Na(b, e) {
//         return {
//             get: function() {
//                 if (b())
//                     delete this.get;
//                 else
//                     return (this.get = e).apply(this, arguments)
//             }
//         }
//     }
//     function da(b) {
//         var e = h.cssProps[b] || ib[b];
//         if (e)
//             return e;
//         if (b in jb)
//             return b;
//         a: {
//             e = b;
//             for (var a = e[0].toUpperCase() + e.slice(1), c = kb.length; c--; )
//                 if (e = kb[c] + a,
//                 e in jb)
//                     break a;
//             e = void 0
//         }
//         return ib[b] = e || b
//     }
//     function ma(b, e, a) {
//         return (b = wa.exec(e)) ? Math.max(0, b[2] - (a || 0)) + (b[3] || "px") : e
//     }
//     function Da(b, e, a, c, d, f) {
//         var l = "width" === e ? 1 : 0
//           , q = 0
//           , g = 0;
//         if (a === (c ? "border" : "content"))
//             return 0;
//         for (; 4 > l; l += 2)
//             "margin" === a && (g += h.css(b, a + ea[l], !0, d)),
//             c ? ("content" === a && (g -= h.css(b, "padding" + ea[l], !0, d)),
//             "margin" !== a && (g -= h.css(b, "border" + ea[l] + "Width", !0, d))) : (g += h.css(b, "padding" + ea[l], !0, d),
//             "padding" !== a ? g += h.css(b, "border" + ea[l] + "Width", !0, d) : q += h.css(b, "border" + ea[l] + "Width", !0, d));
//         !c && 0 <= f && (g += Math.max(0, Math.ceil(b["offset" + e[0].toUpperCase() + e.slice(1)] - f - g - q - .5)) || 0);
//         return g
//     }
//     function Oa(b, e, a) {
//         var l = Ma(b)
//           , c = (!E.boxSizingReliable() || a) && "border-box" === h.css(b, "boxSizing", !1, l)
//           , d = c
//           , f = ta(b, e, l)
//           , g = "offset" + e[0].toUpperCase() + e.slice(1);
//         if (Ta.test(f)) {
//             if (!a)
//                 return f;
//             f = "auto"
//         }
//         (!E.boxSizingReliable() && c || "auto" === f || !parseFloat(f) && "inline" === h.css(b, "display", !1, l)) && b.getClientRects().length && (c = "border-box" === h.css(b, "boxSizing", !1, l),
//         (d = g in b) && (f = b[g]));
//         f = parseFloat(f) || 0;
//         return f + Da(b, e, a || (c ? "border" : "content"), d, l, f) + "px"
//     }
//     function U(b, e, a, c, h) {
//         return new U.prototype.init(b,e,a,c,h)
//     }
//     function Ea() {
//         Pa && (!1 === C.hidden && d.requestAnimationFrame ? d.requestAnimationFrame(Ea) : d.setTimeout(Ea, h.fx.interval),
//         h.fx.tick())
//     }
//     function Ca() {
//         d.setTimeout(function() {
//             na = void 0
//         });
//         return na = Date.now()
//     }
//     function ya(b, e) {
//         var a = 0
//           , c = {
//             height: b
//         };
//         for (e = e ? 1 : 0; 4 > a; a += 2 - e) {
//             var h = ea[a];
//             c["margin" + h] = c["padding" + h] = b
//         }
//         e && (c.opacity = c.width = b);
//         return c
//     }
//     function lb(b, e, a) {
//         for (var l, c = (X.tweeners[e] || []).concat(X.tweeners["*"]), h = 0, d = c.length; h < d; h++)
//             if (l = c[h].call(a, e, b))
//                 return l
//     }
//     function Qb(b, e) {
//         var a, c;
//         for (a in b) {
//             var d = y(a);
//             var f = e[d];
//             var g = b[a];
//             Array.isArray(g) && (f = g[1],
//             g = b[a] = g[0]);
//             a !== d && (b[d] = g,
//             delete b[a]);
//             if ((c = h.cssHooks[d]) && "expand"in c)
//                 for (a in g = c.expand(g),
//                 delete b[d],
//                 g)
//                     a in b || (b[a] = g[a],
//                     e[a] = f);
//             else
//                 e[d] = f
//         }
//     }
//     function X(b, e, a) {
//         var l, c = 0, d = X.prefilters.length, f = h.Deferred().always(function() {
//             delete g.elem
//         }), g = function() {
//             if (l)
//                 return !1;
//             var e = na || Ca();
//             e = Math.max(0, k.startTime + k.duration - e);
//             for (var a = 1 - (e / k.duration || 0), c = 0, h = k.tweens.length; c < h; c++)
//                 k.tweens[c].run(a);
//             f.notifyWith(b, [k, a, e]);
//             if (1 > a && h)
//                 return e;
//             h || f.notifyWith(b, [k, 1, 0]);
//             f.resolveWith(b, [k]);
//             return !1
//         }, k = f.promise({
//             elem: b,
//             props: h.extend({}, e),
//             opts: h.extend(!0, {
//                 specialEasing: {},
//                 easing: h.easing._default
//             }, a),
//             originalProperties: e,
//             originalOptions: a,
//             startTime: na || Ca(),
//             duration: a.duration,
//             tweens: [],
//             createTween: function(e, a) {
//                 e = h.Tween(b, k.opts, e, a, k.opts.specialEasing[e] || k.opts.easing);
//                 k.tweens.push(e);
//                 return e
//             },
//             stop: function(e) {
//                 var a = 0
//                   , c = e ? k.tweens.length : 0;
//                 if (l)
//                     return this;
//                 for (l = !0; a < c; a++)
//                     k.tweens[a].run(1);
//                 e ? (f.notifyWith(b, [k, 1, 0]),
//                 f.resolveWith(b, [k, e])) : f.rejectWith(b, [k, e]);
//                 return this
//             }
//         });
//         a = k.props;
//         for (Qb(a, k.opts.specialEasing); c < d; c++)
//             if (e = X.prefilters[c].call(k, b, a, k.opts))
//                 return x(e.stop) && (h._queueHooks(k.elem, k.opts.queue).stop = e.stop.bind(e)),
//                 e;
//         h.map(a, lb, k);
//         x(k.opts.start) && k.opts.start.call(b, k);
//         k.progress(k.opts.progress).done(k.opts.done, k.opts.complete).fail(k.opts.fail).always(k.opts.always);
//         h.fx.timer(h.extend(g, {
//             elem: b,
//             anim: k,
//             queue: k.opts.queue
//         }));
//         return k
//     }
//     function oa(b) {
//         return (b.match(Z) || []).join(" ")
//     }
//     function pa(b) {
//         return b.getAttribute && b.getAttribute("class") || ""
//     }
//     function Ua(b) {
//         return Array.isArray(b) ? b : "string" === typeof b ? b.match(Z) || [] : []
//     }
//     function Va(b, e, l, c) {
//         var q;
//         if (Array.isArray(e))
//             h.each(e, function(e, a) {
//                 l || Rb.test(b) ? c(b, a) : Va(b + "[" + ("object" === typeof a && null != a ? e : "") + "]", a, l, c)
//             });
//         else if (l || "object" !== a(e))
//             c(b, e);
//         else
//             for (q in e)
//                 Va(b + "[" + q + "]", e[q], l, c)
//     }
//     function mb(b) {
//         return function(e, a) {
//             "string" !== typeof e && (a = e,
//             e = "*");
//             var l = 0
//               , c = e.toLowerCase().match(Z) || [];
//             if (x(a))
//                 for (; e = c[l++]; )
//                     "+" === e[0] ? (e = e.slice(1) || "*",
//                     (b[e] = b[e] || []).unshift(a)) : (b[e] = b[e] || []).push(a)
//         }
//     }
//     function nb(b, e, a, c) {
//         function l(f) {
//             var g;
//             q[f] = !0;
//             h.each(b[f] || [], function(b, h) {
//                 b = h(e, a, c);
//                 if ("string" === typeof b && !d && !q[b])
//                     return e.dataTypes.unshift(b),
//                     l(b),
//                     !1;
//                 if (d)
//                     return !(g = b)
//             });
//             return g
//         }
//         var q = {}
//           , d = b === Wa;
//         return l(e.dataTypes[0]) || !q["*"] && l("*")
//     }
//     function Xa(b, e) {
//         var a, c, d = h.ajaxSettings.flatOptions || {};
//         for (a in e)
//             void 0 !== e[a] && ((d[a] ? b : c || (c = {}))[a] = e[a]);
//         c && h.extend(!0, b, c);
//         return b
//     }
//     var Y = []
//       , C = d.document
//       , Sb = Object.getPrototypeOf
//       , W = Y.slice
//       , hb = Y.concat
//       , Ya = Y.push
//       , Ja = Y.indexOf
//       , Ia = {}
//       , db = Ia.toString
//       , Qa = Ia.hasOwnProperty
//       , ob = Qa.toString
//       , Tb = ob.call(Object)
//       , E = {}
//       , x = function(b) {
//         return "function" === typeof b && "number" !== typeof b.nodeType
//     }
//       , ha = function(b) {
//         return null != b && b === b.window
//     }
//       , Fb = {
//         type: !0,
//         src: !0,
//         nonce: !0,
//         noModule: !0
//     }
//       , h = function(b, e) {
//         return new h.fn.init(b,e)
//     }
//       , Ub = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
//     h.fn = h.prototype = {
//         jquery: "3.4.1",
//         constructor: h,
//         length: 0,
//         toArray: function() {
//             return W.call(this)
//         },
//         get: function(b) {
//             return null == b ? W.call(this) : 0 > b ? this[b + this.length] : this[b]
//         },
//         pushStack: function(b) {
//             b = h.merge(this.constructor(), b);
//             b.prevObject = this;
//             return b
//         },
//         each: function(b) {
//             return h.each(this, b)
//         },
//         map: function(b) {
//             return this.pushStack(h.map(this, function(e, a) {
//                 return b.call(e, a, e)
//             }))
//         },
//         slice: function() {
//             return this.pushStack(W.apply(this, arguments))
//         },
//         first: function() {
//             return this.eq(0)
//         },
//         last: function() {
//             return this.eq(-1)
//         },
//         eq: function(b) {
//             var e = this.length;
//             b = +b + (0 > b ? e : 0);
//             return this.pushStack(0 <= b && b < e ? [this[b]] : [])
//         },
//         end: function() {
//             return this.prevObject || this.constructor()
//         },
//         push: Ya,
//         sort: Y.sort,
//         splice: Y.splice
//     };
//     h.extend = h.fn.extend = function() {
//         var b, e, a, c = arguments[0] || {}, d = 1, f = arguments.length, g = !1;
//         "boolean" === typeof c && (g = c,
//         c = arguments[d] || {},
//         d++);
//         "object" === typeof c || x(c) || (c = {});
//         d === f && (c = this,
//         d--);
//         for (; d < f; d++)
//             if (null != (b = arguments[d]))
//                 for (e in b) {
//                     var k = b[e];
//                     if ("__proto__" !== e && c !== k)
//                         if (g && k && (h.isPlainObject(k) || (a = Array.isArray(k)))) {
//                             var p = c[e];
//                             p = a && !Array.isArray(p) ? [] : a || h.isPlainObject(p) ? p : {};
//                             a = !1;
//                             c[e] = h.extend(g, p, k)
//                         } else
//                             void 0 !== k && (c[e] = k)
//                 }
//         return c
//     }
//     ;
//     h.extend({
//         expando: "jQuery" + ("3.4.1" + Math.random()).replace(/\D/g, ""),
//         isReady: !0,
//         error: function(b) {
//             throw Error(b);
//         },
//         noop: function() {},
//         isPlainObject: function(b) {
//             if (!b || "[object Object]" !== db.call(b))
//                 return !1;
//             b = Sb(b);
//             if (!b)
//                 return !0;
//             b = Qa.call(b, "constructor") && b.constructor;
//             return "function" === typeof b && ob.call(b) === Tb
//         },
//         isEmptyObject: function(b) {
//             for (var e in b)
//                 return !1;
//             return !0
//         },
//         globalEval: function(b, e) {
//             f(b, {
//                 nonce: e && e.nonce
//             })
//         },
//         each: function(b, e) {
//             var a, h = 0;
//             if (c(b))
//                 for (a = b.length; h < a && !1 !== e.call(b[h], h, b[h]); h++)
//                     ;
//             else
//                 for (h in b)
//                     if (!1 === e.call(b[h], h, b[h]))
//                         break;
//             return b
//         },
//         trim: function(b) {
//             return null == b ? "" : (b + "").replace(Ub, "")
//         },
//         makeArray: function(b, e) {
//             e = e || [];
//             null != b && (c(Object(b)) ? h.merge(e, "string" === typeof b ? [b] : b) : Ya.call(e, b));
//             return e
//         },
//         inArray: function(b, e, a) {
//             return null == e ? -1 : Ja.call(e, b, a)
//         },
//         merge: function(b, e) {
//             for (var a = +e.length, c = 0, h = b.length; c < a; c++)
//                 b[h++] = e[c];
//             b.length = h;
//             return b
//         },
//         grep: function(b, e, a) {
//             for (var c = [], l = 0, h = b.length, d = !a; l < h; l++)
//                 a = !e(b[l], l),
//                 a !== d && c.push(b[l]);
//             return c
//         },
//         map: function(b, e, a) {
//             var l, h = 0, d = [];
//             if (c(b))
//                 for (l = b.length; h < l; h++) {
//                     var f = e(b[h], h, a);
//                     null != f && d.push(f)
//                 }
//             else
//                 for (h in b)
//                     f = e(b[h], h, a),
//                     null != f && d.push(f);
//             return hb.apply([], d)
//         },
//         guid: 1,
//         support: E
//     });
//     "function" === typeof Symbol && (h.fn[Symbol.iterator] = Y[Symbol.iterator]);
//     h.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(b, e) {
//         Ia["[object " + e + "]"] = e.toLowerCase()
//     });
//     var sa = function(b) {
//         function e(b, e, a, c) {
//             var l, h, d, f;
//             var g = e && e.ownerDocument;
//             var q = e ? e.nodeType : 9;
//             a = a || [];
//             if ("string" !== typeof b || !b || 1 !== q && 9 !== q && 11 !== q)
//                 return a;
//             if (!c && ((e ? e.ownerDocument || e : A) !== J && za(e),
//             e = e || J,
//             D)) {
//                 if (11 !== q && (f = sa.exec(b)))
//                     if (l = f[1])
//                         if (9 === q)
//                             if (h = e.getElementById(l)) {
//                                 if (h.id === l)
//                                     return a.push(h),
//                                     a
//                             } else
//                                 return a;
//                         else {
//                             if (g && (h = g.getElementById(l)) && T(e, h) && h.id === l)
//                                 return a.push(h),
//                                 a
//                         }
//                     else {
//                         if (f[2])
//                             return O.apply(a, e.getElementsByTagName(b)),
//                             a;
//                         if ((l = f[3]) && P.getElementsByClassName && e.getElementsByClassName)
//                             return O.apply(a, e.getElementsByClassName(l)),
//                             a
//                     }
//                 if (!(!P.qsa || L[b + " "] || K && K.test(b) || 1 === q && "object" === e.nodeName.toLowerCase())) {
//                     l = b;
//                     g = e;
//                     if (1 === q && Z.test(b)) {
//                         (d = e.getAttribute("id")) ? d = d.replace(ka, na) : e.setAttribute("id", d = N);
//                         q = ja(b);
//                         for (g = q.length; g--; )
//                             q[g] = "#" + d + " " + t(q[g]);
//                         l = q.join(",");
//                         g = ha.test(b) && n(e.parentNode) || e
//                     }
//                     try {
//                         return O.apply(a, g.querySelectorAll(l)),
//                         a
//                     } catch (zc) {
//                         L(b, !0)
//                     } finally {
//                         d === N && e.removeAttribute("id")
//                     }
//                 }
//             }
//             return Aa(b.replace(ma, "$1"), e, a, c)
//         }
//         function a() {
//             function b(a, c) {
//                 e.push(a + " ") > H.cacheLength && delete b[e.shift()];
//                 return b[a + " "] = c
//             }
//             var e = [];
//             return b
//         }
//         function c(b) {
//             b[N] = !0;
//             return b
//         }
//         function h(b) {
//             var e = J.createElement("fieldset");
//             try {
//                 return !!b(e)
//             } catch (Fa) {
//                 return !1
//             } finally {
//                 e.parentNode && e.parentNode.removeChild(e)
//             }
//         }
//         function d(b, e) {
//             b = b.split("|");
//             for (var a = b.length; a--; )
//                 H.attrHandle[b[a]] = e
//         }
//         function f(b, e) {
//             var a = e && b
//               , c = a && 1 === b.nodeType && 1 === e.nodeType && b.sourceIndex - e.sourceIndex;
//             if (c)
//                 return c;
//             if (a)
//                 for (; a = a.nextSibling; )
//                     if (a === e)
//                         return -1;
//             return b ? 1 : -1
//         }
//         function g(b) {
//             return function(e) {
//                 return "input" === e.nodeName.toLowerCase() && e.type === b
//             }
//         }
//         function k(b) {
//             return function(e) {
//                 var a = e.nodeName.toLowerCase();
//                 return ("input" === a || "button" === a) && e.type === b
//             }
//         }
//         function p(b) {
//             return function(e) {
//                 return "form"in e ? e.parentNode && !1 === e.disabled ? "label"in e ? "label"in e.parentNode ? e.parentNode.disabled === b : e.disabled === b : e.isDisabled === b || e.isDisabled !== !b && ua(e) === b : e.disabled === b : "label"in e ? e.disabled === b : !1
//             }
//         }
//         function m(b) {
//             return c(function(e) {
//                 e = +e;
//                 return c(function(a, c) {
//                     for (var l, h = b([], a.length, e), d = h.length; d--; )
//                         a[l = h[d]] && (a[l] = !(c[l] = a[l]))
//                 })
//             })
//         }
//         function n(b) {
//             return b && "undefined" !== typeof b.getElementsByTagName && b
//         }
//         function r() {}
//         function t(b) {
//             for (var e = 0, a = b.length, c = ""; e < a; e++)
//                 c += b[e].value;
//             return c
//         }
//         function u(b, e, a) {
//             var c = e.dir
//               , l = e.next
//               , h = l || c
//               , d = a && "parentNode" === h
//               , f = ia++;
//             return e.first ? function(e, a, l) {
//                 for (; e = e[c]; )
//                     if (1 === e.nodeType || d)
//                         return b(e, a, l);
//                 return !1
//             }
//             : function(e, a, q) {
//                 var g, k = [E, f];
//                 if (q)
//                     for (; e = e[c]; ) {
//                         if ((1 === e.nodeType || d) && b(e, a, q))
//                             return !0
//                     }
//                 else
//                     for (; e = e[c]; )
//                         if (1 === e.nodeType || d) {
//                             var w = e[N] || (e[N] = {});
//                             w = w[e.uniqueID] || (w[e.uniqueID] = {});
//                             if (l && l === e.nodeName.toLowerCase())
//                                 e = e[c] || e;
//                             else {
//                                 if ((g = w[h]) && g[0] === E && g[1] === f)
//                                     return k[2] = g[2];
//                                 w[h] = k;
//                                 if (k[2] = b(e, a, q))
//                                     return !0
//                             }
//                         }
//                 return !1
//             }
//         }
//         function z(b) {
//             return 1 < b.length ? function(e, a, c) {
//                 for (var l = b.length; l--; )
//                     if (!b[l](e, a, c))
//                         return !1;
//                 return !0
//             }
//             : b[0]
//         }
//         function V(b, e, a, c, l) {
//             for (var h, d = [], f = 0, q = b.length, g = null != e; f < q; f++)
//                 if (h = b[f])
//                     if (!a || a(h, c, l))
//                         d.push(h),
//                         g && e.push(f);
//             return d
//         }
//         function y(b, a, l, h, d, f) {
//             h && !h[N] && (h = y(h));
//             d && !d[N] && (d = y(d, f));
//             return c(function(c, f, q, g) {
//                 var k, w = [], p = [], m = f.length, S;
//                 if (!(S = c)) {
//                     S = a || "*";
//                     for (var n = q.nodeType ? [q] : q, r = [], Q = 0, Fa = n.length; Q < Fa; Q++)
//                         e(S, n[Q], r);
//                     S = r
//                 }
//                 S = !b || !c && a ? S : V(S, w, b, q, g);
//                 n = l ? d || (c ? b : m || h) ? [] : f : S;
//                 l && l(S, n, q, g);
//                 if (h) {
//                     var t = V(n, p);
//                     h(t, [], q, g);
//                     for (q = t.length; q--; )
//                         if (k = t[q])
//                             n[p[q]] = !(S[p[q]] = k)
//                 }
//                 if (c) {
//                     if (d || b) {
//                         if (d) {
//                             t = [];
//                             for (q = n.length; q--; )
//                                 (k = n[q]) && t.push(S[q] = k);
//                             d(null, n = [], t, g)
//                         }
//                         for (q = n.length; q--; )
//                             (k = n[q]) && -1 < (t = d ? R(c, k) : w[q]) && (c[t] = !(f[t] = k))
//                     }
//                 } else
//                     n = V(n === f ? n.splice(m, n.length) : n),
//                     d ? d(null, f, n, g) : O.apply(f, n)
//             })
//         }
//         function I(b) {
//             var e, a, c = b.length, l = H.relative[b[0].type];
//             var h = l || H.relative[" "];
//             for (var d = l ? 1 : 0, f = u(function(b) {
//                 return b === e
//             }, h, !0), q = u(function(b) {
//                 return -1 < R(e, b)
//             }, h, !0), g = [function(b, a, c) {
//                 b = !l && (c || a !== v) || ((e = a).nodeType ? f(b, a, c) : q(b, a, c));
//                 e = null;
//                 return b
//             }
//             ]; d < c; d++)
//                 if (h = H.relative[b[d].type])
//                     g = [u(z(g), h)];
//                 else {
//                     h = H.filter[b[d].type].apply(null, b[d].matches);
//                     if (h[N]) {
//                         for (a = ++d; a < c && !H.relative[b[a].type]; a++)
//                             ;
//                         return y(1 < d && z(g), 1 < d && t(b.slice(0, d - 1).concat({
//                             value: " " === b[d - 2].type ? "*" : ""
//                         })).replace(ma, "$1"), h, d < a && I(b.slice(d, a)), a < c && I(b = b.slice(a)), a < c && t(b))
//                     }
//                     g.push(h)
//                 }
//             return z(g)
//         }
//         function F(b, a) {
//             var l = 0 < a.length
//               , h = 0 < b.length
//               , d = function(c, d, f, q, g) {
//                 var k, w, p = 0, m = "0", n = c && [], S = [], r = v, Q = c || h && H.find.TAG("*", g), Fa = E += null == r ? 1 : Math.random() || .1, t = Q.length;
//                 for (g && (v = d === J || d || g); m !== t && null != (k = Q[m]); m++) {
//                     if (h && k) {
//                         var aa = 0;
//                         d || k.ownerDocument === J || (za(k),
//                         f = !D);
//                         for (; w = b[aa++]; )
//                             if (w(k, d || J, f)) {
//                                 q.push(k);
//                                 break
//                             }
//                         g && (E = Fa)
//                     }
//                     l && ((k = !w && k) && p--,
//                     c && n.push(k))
//                 }
//                 p += m;
//                 if (l && m !== p) {
//                     for (aa = 0; w = a[aa++]; )
//                         w(n, S, d, f);
//                     if (c) {
//                         if (0 < p)
//                             for (; m--; )
//                                 n[m] || S[m] || (S[m] = U.call(q));
//                         S = V(S)
//                     }
//                     O.apply(q, S);
//                     g && !c && 0 < S.length && 1 < p + a.length && e.uniqueSort(q)
//                 }
//                 g && (E = Fa,
//                 v = r);
//                 return n
//             };
//             return l ? c(d) : d
//         }
//         var B, v, x, ca, J, G, D, K, C, xa, T, N = "sizzle" + 1 * new Date, A = b.document, E = 0, ia = 0, M = a(), la = a(), La = a(), L = a(), Ba = function(b, e) {
//             b === e && (ca = !0);
//             return 0
//         }, ba = {}.hasOwnProperty, da = [], U = da.pop, Oa = da.push, O = da.push, ta = da.slice, R = function(b, e) {
//             for (var a = 0, c = b.length; a < c; a++)
//                 if (b[a] === e)
//                     return a;
//             return -1
//         }, Na = /[\x20\t\r\n\f]+/g, ma = /^[\x20\t\r\n\f]+|((?:^|[^\\])(?:\\.)*)[\x20\t\r\n\f]+$/g, Da = /^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/, X = /^[\x20\t\r\n\f]*([>+~]|[\x20\t\r\n\f])[\x20\t\r\n\f]*/, Z = /[\x20\t\r\n\f]|>/, ea = /:((?:\\.|[\w-]|[^\x00-\xa0])+)(?:\((('((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)")|((?:\\.|[^\\()[\]]|\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\])*)|.*)\)|)/, fa = /^(?:\\.|[\w-]|[^\x00-\xa0])+$/, W = {
//             ID: /^#((?:\\.|[\w-]|[^\x00-\xa0])+)/,
//             CLASS: /^\.((?:\\.|[\w-]|[^\x00-\xa0])+)/,
//             TAG: /^((?:\\.|[\w-]|[^\x00-\xa0])+|[*])/,
//             ATTR: /^\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\]/,
//             PSEUDO: /^:((?:\\.|[\w-]|[^\x00-\xa0])+)(?:\((('((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)")|((?:\\.|[^\\()[\]]|\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\])*)|.*)\)|)/,
//             CHILD: /^:(only|first|last|nth|nth-last)-(child|of-type)(?:\([\x20\t\r\n\f]*(even|odd|(([+-]|)(\d*)n|)[\x20\t\r\n\f]*(?:([+-]|)[\x20\t\r\n\f]*(\d+)|))[\x20\t\r\n\f]*\)|)/i,
//             bool: /^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$/i,
//             needsContext: /^[\x20\t\r\n\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\([\x20\t\r\n\f]*((?:-\d)?\d*)[\x20\t\r\n\f]*\)|)(?=[^-]|$)/i
//         }, Ea = /HTML$/i, oa = /^(?:input|select|textarea|button)$/i, pa = /^h\d$/i, Y = /^[^{]+\{\s*\[native \w/, sa = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ha = /[+~]/, qa = /\\([\da-f]{1,6}[\x20\t\r\n\f]?|([\x20\t\r\n\f])|.)/ig, ra = function(b, e, a) {
//             b = "0x" + e - 65536;
//             return b !== b || a ? e : 0 > b ? String.fromCharCode(b + 65536) : String.fromCharCode(b >> 10 | 55296, b & 1023 | 56320)
//         }, ka = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, na = function(b, e) {
//             return e ? "\x00" === b ? "\ufffd" : b.slice(0, -1) + "\\" + b.charCodeAt(b.length - 1).toString(16) + " " : "\\" + b
//         }, ya = function() {
//             za()
//         }, ua = u(function(b) {
//             return !0 === b.disabled && "fieldset" === b.nodeName.toLowerCase()
//         }, {
//             dir: "parentNode",
//             next: "legend"
//         });
//         try {
//             O.apply(da = ta.call(A.childNodes), A.childNodes),
//             da[A.childNodes.length].nodeType
//         } catch (S) {
//             O = {
//                 apply: da.length ? function(b, e) {
//                     Oa.apply(b, ta.call(e))
//                 }
//                 : function(b, e) {
//                     for (var a = b.length, c = 0; b[a++] = e[c++]; )
//                         ;
//                     b.length = a - 1
//                 }
//             }
//         }
//         var P = e.support = {};
//         var wa = e.isXML = function(b) {
//             var e = (b.ownerDocument || b).documentElement;
//             return !Ea.test(b.namespaceURI || e && e.nodeName || "HTML")
//         }
//         ;
//         var za = e.setDocument = function(b) {
//             var e;
//             b = b ? b.ownerDocument || b : A;
//             if (b === J || 9 !== b.nodeType || !b.documentElement)
//                 return J;
//             J = b;
//             G = J.documentElement;
//             D = !wa(J);
//             A !== J && (e = J.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", ya, !1) : e.attachEvent && e.attachEvent("onunload", ya));
//             P.attributes = h(function(b) {
//                 b.className = "i";
//                 return !b.getAttribute("className")
//             });
//             P.getElementsByTagName = h(function(b) {
//                 b.appendChild(J.createComment(""));
//                 return !b.getElementsByTagName("*").length
//             });
//             P.getElementsByClassName = Y.test(J.getElementsByClassName);
//             P.getById = h(function(b) {
//                 G.appendChild(b).id = N;
//                 return !J.getElementsByName || !J.getElementsByName(N).length
//             });
//             P.getById ? (H.filter.ID = function(b) {
//                 var e = b.replace(qa, ra);
//                 return function(b) {
//                     return b.getAttribute("id") === e
//                 }
//             }
//             ,
//             H.find.ID = function(b, e) {
//                 if ("undefined" !== typeof e.getElementById && D)
//                     return (b = e.getElementById(b)) ? [b] : []
//             }
//             ) : (H.filter.ID = function(b) {
//                 var e = b.replace(qa, ra);
//                 return function(b) {
//                     return (b = "undefined" !== typeof b.getAttributeNode && b.getAttributeNode("id")) && b.value === e
//                 }
//             }
//             ,
//             H.find.ID = function(b, e) {
//                 if ("undefined" !== typeof e.getElementById && D) {
//                     var a, c = e.getElementById(b);
//                     if (c) {
//                         if ((a = c.getAttributeNode("id")) && a.value === b)
//                             return [c];
//                         var l = e.getElementsByName(b);
//                         for (e = 0; c = l[e++]; )
//                             if ((a = c.getAttributeNode("id")) && a.value === b)
//                                 return [c]
//                     }
//                     return []
//                 }
//             }
//             );
//             H.find.TAG = P.getElementsByTagName ? function(b, e) {
//                 if ("undefined" !== typeof e.getElementsByTagName)
//                     return e.getElementsByTagName(b);
//                 if (P.qsa)
//                     return e.querySelectorAll(b)
//             }
//             : function(b, e) {
//                 var a = []
//                   , c = 0;
//                 e = e.getElementsByTagName(b);
//                 if ("*" === b) {
//                     for (; b = e[c++]; )
//                         1 === b.nodeType && a.push(b);
//                     return a
//                 }
//                 return e
//             }
//             ;
//             H.find.CLASS = P.getElementsByClassName && function(b, e) {
//                 if ("undefined" !== typeof e.getElementsByClassName && D)
//                     return e.getElementsByClassName(b)
//             }
//             ;
//             C = [];
//             K = [];
//             if (P.qsa = Y.test(J.querySelectorAll))
//                 h(function(b) {
//                     G.appendChild(b).innerHTML = "\x3ca id\x3d'" + N + "'\x3e\x3c/a\x3e\x3cselect id\x3d'" + N + "-\r\\' msallowcapture\x3d''\x3e\x3coption selected\x3d''\x3e\x3c/option\x3e\x3c/select\x3e";
//                     b.querySelectorAll("[msallowcapture^\x3d'']").length && K.push("[*^$]\x3d[\\x20\\t\\r\\n\\f]*(?:''|\"\")");
//                     b.querySelectorAll("[selected]").length || K.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)");
//                     b.querySelectorAll("[id~\x3d" + N + "-]").length || K.push("~\x3d");
//                     b.querySelectorAll(":checked").length || K.push(":checked");
//                     b.querySelectorAll("a#" + N + "+*").length || K.push(".#.+[+~]")
//                 }),
//                 h(function(b) {
//                     b.innerHTML = "\x3ca href\x3d'' disabled\x3d'disabled'\x3e\x3c/a\x3e\x3cselect disabled\x3d'disabled'\x3e\x3coption/\x3e\x3c/select\x3e";
//                     var e = J.createElement("input");
//                     e.setAttribute("type", "hidden");
//                     b.appendChild(e).setAttribute("name", "D");
//                     b.querySelectorAll("[name\x3dd]").length && K.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?\x3d");
//                     2 !== b.querySelectorAll(":enabled").length && K.push(":enabled", ":disabled");
//                     G.appendChild(b).disabled = !0;
//                     2 !== b.querySelectorAll(":disabled").length && K.push(":enabled", ":disabled");
//                     b.querySelectorAll("*,:x");
//                     K.push(",.*:")
//                 });
//             (P.matchesSelector = Y.test(xa = G.matches || G.webkitMatchesSelector || G.mozMatchesSelector || G.oMatchesSelector || G.msMatchesSelector)) && h(function(b) {
//                 P.disconnectedMatch = xa.call(b, "*");
//                 xa.call(b, "[s!\x3d'']:x");
//                 C.push("!\x3d", ":((?:\\\\.|[\\w-]|[^\x00-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\x00-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?\x3d)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\x00-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)")
//             });
//             K = K.length && new RegExp(K.join("|"));
//             C = C.length && new RegExp(C.join("|"));
//             T = (e = Y.test(G.compareDocumentPosition)) || Y.test(G.contains) ? function(b, e) {
//                 var a = 9 === b.nodeType ? b.documentElement : b;
//                 e = e && e.parentNode;
//                 return b === e || !!(e && 1 === e.nodeType && (a.contains ? a.contains(e) : b.compareDocumentPosition && b.compareDocumentPosition(e) & 16))
//             }
//             : function(b, e) {
//                 if (e)
//                     for (; e = e.parentNode; )
//                         if (e === b)
//                             return !0;
//                 return !1
//             }
//             ;
//             Ba = e ? function(b, e) {
//                 if (b === e)
//                     return ca = !0,
//                     0;
//                 var a = !b.compareDocumentPosition - !e.compareDocumentPosition;
//                 if (a)
//                     return a;
//                 a = (b.ownerDocument || b) === (e.ownerDocument || e) ? b.compareDocumentPosition(e) : 1;
//                 return a & 1 || !P.sortDetached && e.compareDocumentPosition(b) === a ? b === J || b.ownerDocument === A && T(A, b) ? -1 : e === J || e.ownerDocument === A && T(A, e) ? 1 : x ? R(x, b) - R(x, e) : 0 : a & 4 ? -1 : 1
//             }
//             : function(b, e) {
//                 if (b === e)
//                     return ca = !0,
//                     0;
//                 var a = 0
//                   , c = b.parentNode
//                   , l = e.parentNode
//                   , h = [b]
//                   , d = [e];
//                 if (!c || !l)
//                     return b === J ? -1 : e === J ? 1 : c ? -1 : l ? 1 : x ? R(x, b) - R(x, e) : 0;
//                 if (c === l)
//                     return f(b, e);
//                 for (; b = b.parentNode; )
//                     h.unshift(b);
//                 for (b = e; b = b.parentNode; )
//                     d.unshift(b);
//                 for (; h[a] === d[a]; )
//                     a++;
//                 return a ? f(h[a], d[a]) : h[a] === A ? -1 : d[a] === A ? 1 : 0
//             }
//             ;
//             return J
//         }
//         ;
//         e.matches = function(b, a) {
//             return e(b, null, null, a)
//         }
//         ;
//         e.matchesSelector = function(b, a) {
//             (b.ownerDocument || b) !== J && za(b);
//             if (!(!P.matchesSelector || !D || L[a + " "] || C && C.test(a) || K && K.test(a)))
//                 try {
//                     var c = xa.call(b, a);
//                     if (c || P.disconnectedMatch || b.document && 11 !== b.document.nodeType)
//                         return c
//                 } catch (yc) {
//                     L(a, !0)
//                 }
//             return 0 < e(a, J, null, [b]).length
//         }
//         ;
//         e.contains = function(b, e) {
//             (b.ownerDocument || b) !== J && za(b);
//             return T(b, e)
//         }
//         ;
//         e.attr = function(b, e) {
//             (b.ownerDocument || b) !== J && za(b);
//             var a = H.attrHandle[e.toLowerCase()];
//             a = a && ba.call(H.attrHandle, e.toLowerCase()) ? a(b, e, !D) : void 0;
//             return void 0 !== a ? a : P.attributes || !D ? b.getAttribute(e) : (a = b.getAttributeNode(e)) && a.specified ? a.value : null
//         }
//         ;
//         e.escape = function(b) {
//             return (b + "").replace(ka, na)
//         }
//         ;
//         e.error = function(b) {
//             throw Error("Syntax error, unrecognized expression: " + b);
//         }
//         ;
//         e.uniqueSort = function(b) {
//             var e, a = [], c = 0, l = 0;
//             ca = !P.detectDuplicates;
//             x = !P.sortStable && b.slice(0);
//             b.sort(Ba);
//             if (ca) {
//                 for (; e = b[l++]; )
//                     e === b[l] && (c = a.push(l));
//                 for (; c--; )
//                     b.splice(a[c], 1)
//             }
//             x = null;
//             return b
//         }
//         ;
//         var Ca = e.getText = function(b) {
//             var e = ""
//               , a = 0;
//             var c = b.nodeType;
//             if (!c)
//                 for (; c = b[a++]; )
//                     e += Ca(c);
//             else if (1 === c || 9 === c || 11 === c) {
//                 if ("string" === typeof b.textContent)
//                     return b.textContent;
//                 for (b = b.firstChild; b; b = b.nextSibling)
//                     e += Ca(b)
//             } else if (3 === c || 4 === c)
//                 return b.nodeValue;
//             return e
//         }
//         ;
//         var H = e.selectors = {
//             cacheLength: 50,
//             createPseudo: c,
//             match: W,
//             attrHandle: {},
//             find: {},
//             relative: {
//                 "\x3e": {
//                     dir: "parentNode",
//                     first: !0
//                 },
//                 " ": {
//                     dir: "parentNode"
//                 },
//                 "+": {
//                     dir: "previousSibling",
//                     first: !0
//                 },
//                 "~": {
//                     dir: "previousSibling"
//                 }
//             },
//             preFilter: {
//                 ATTR: function(b) {
//                     b[1] = b[1].replace(qa, ra);
//                     b[3] = (b[3] || b[4] || b[5] || "").replace(qa, ra);
//                     "~\x3d" === b[2] && (b[3] = " " + b[3] + " ");
//                     return b.slice(0, 4)
//                 },
//                 CHILD: function(b) {
//                     b[1] = b[1].toLowerCase();
//                     "nth" === b[1].slice(0, 3) ? (b[3] || e.error(b[0]),
//                     b[4] = +(b[4] ? b[5] + (b[6] || 1) : 2 * ("even" === b[3] || "odd" === b[3])),
//                     b[5] = +(b[7] + b[8] || "odd" === b[3])) : b[3] && e.error(b[0]);
//                     return b
//                 },
//                 PSEUDO: function(b) {
//                     var e, a = !b[6] && b[2];
//                     if (W.CHILD.test(b[0]))
//                         return null;
//                     b[3] ? b[2] = b[4] || b[5] || "" : a && ea.test(a) && (e = ja(a, !0)) && (e = a.indexOf(")", a.length - e) - a.length) && (b[0] = b[0].slice(0, e),
//                     b[2] = a.slice(0, e));
//                     return b.slice(0, 3)
//                 }
//             },
//             filter: {
//                 TAG: function(b) {
//                     var e = b.replace(qa, ra).toLowerCase();
//                     return "*" === b ? function() {
//                         return !0
//                     }
//                     : function(b) {
//                         return b.nodeName && b.nodeName.toLowerCase() === e
//                     }
//                 },
//                 CLASS: function(b) {
//                     var e = M[b + " "];
//                     return e || (e = new RegExp("(^|[\\x20\\t\\r\\n\\f])" + b + "([\\x20\\t\\r\\n\\f]|$)"),
//                     M(b, function(b) {
//                         return e.test("string" === typeof b.className && b.className || "undefined" !== typeof b.getAttribute && b.getAttribute("class") || "")
//                     }))
//                 },
//                 ATTR: function(b, a, c) {
//                     return function(l) {
//                         l = e.attr(l, b);
//                         if (null == l)
//                             return "!\x3d" === a;
//                         if (!a)
//                             return !0;
//                         l += "";
//                         return "\x3d" === a ? l === c : "!\x3d" === a ? l !== c : "^\x3d" === a ? c && 0 === l.indexOf(c) : "*\x3d" === a ? c && -1 < l.indexOf(c) : "$\x3d" === a ? c && l.slice(-c.length) === c : "~\x3d" === a ? -1 < (" " + l.replace(Na, " ") + " ").indexOf(c) : "|\x3d" === a ? l === c || l.slice(0, c.length + 1) === c + "-" : !1
//                     }
//                 },
//                 CHILD: function(b, e, a, c, l) {
//                     var h = "nth" !== b.slice(0, 3)
//                       , d = "last" !== b.slice(-4)
//                       , f = "of-type" === e;
//                     return 1 === c && 0 === l ? function(b) {
//                         return !!b.parentNode
//                     }
//                     : function(e, a, q) {
//                         var g, k;
//                         a = h !== d ? "nextSibling" : "previousSibling";
//                         var w = e.parentNode
//                           , p = f && e.nodeName.toLowerCase();
//                         q = !q && !f;
//                         var m = !1;
//                         if (w) {
//                             if (h) {
//                                 for (; a; ) {
//                                     for (g = e; g = g[a]; )
//                                         if (f ? g.nodeName.toLowerCase() === p : 1 === g.nodeType)
//                                             return !1;
//                                     var n = a = "only" === b && !n && "nextSibling"
//                                 }
//                                 return !0
//                             }
//                             n = [d ? w.firstChild : w.lastChild];
//                             if (d && q) {
//                                 g = w;
//                                 var r = g[N] || (g[N] = {});
//                                 r = r[g.uniqueID] || (r[g.uniqueID] = {});
//                                 m = r[b] || [];
//                                 m = (k = m[0] === E && m[1]) && m[2];
//                                 for (g = k && w.childNodes[k]; g = ++k && g && g[a] || (m = k = 0) || n.pop(); )
//                                     if (1 === g.nodeType && ++m && g === e) {
//                                         r[b] = [E, k, m];
//                                         break
//                                     }
//                             } else if (q && (g = e,
//                             r = g[N] || (g[N] = {}),
//                             r = r[g.uniqueID] || (r[g.uniqueID] = {}),
//                             m = r[b] || [],
//                             m = k = m[0] === E && m[1]),
//                             !1 === m)
//                                 for (; (g = ++k && g && g[a] || (m = k = 0) || n.pop()) && ((f ? g.nodeName.toLowerCase() !== p : 1 !== g.nodeType) || !++m || (q && (r = g[N] || (g[N] = {}),
//                                 r = r[g.uniqueID] || (r[g.uniqueID] = {}),
//                                 r[b] = [E, m]),
//                                 g !== e)); )
//                                     ;
//                             m -= l;
//                             return m === c || 0 === m % c && 0 <= m / c
//                         }
//                     }
//                 },
//                 PSEUDO: function(b, a) {
//                     var l = H.pseudos[b] || H.setFilters[b.toLowerCase()] || e.error("unsupported pseudo: " + b);
//                     if (l[N])
//                         return l(a);
//                     if (1 < l.length) {
//                         var h = [b, b, "", a];
//                         return H.setFilters.hasOwnProperty(b.toLowerCase()) ? c(function(b, e) {
//                             for (var c, h = l(b, a), d = h.length; d--; )
//                                 c = R(b, h[d]),
//                                 b[c] = !(e[c] = h[d])
//                         }) : function(b) {
//                             return l(b, 0, h)
//                         }
//                     }
//                     return l
//                 }
//             },
//             pseudos: {
//                 not: c(function(b) {
//                     var e = []
//                       , a = []
//                       , l = va(b.replace(ma, "$1"));
//                     return l[N] ? c(function(b, e, a, c) {
//                         c = l(b, null, c, []);
//                         for (var h = b.length; h--; )
//                             if (a = c[h])
//                                 b[h] = !(e[h] = a)
//                     }) : function(b, c, h) {
//                         e[0] = b;
//                         l(e, null, h, a);
//                         e[0] = null;
//                         return !a.pop()
//                     }
//                 }),
//                 has: c(function(b) {
//                     return function(a) {
//                         return 0 < e(b, a).length
//                     }
//                 }),
//                 contains: c(function(b) {
//                     b = b.replace(qa, ra);
//                     return function(e) {
//                         return -1 < (e.textContent || Ca(e)).indexOf(b)
//                     }
//                 }),
//                 lang: c(function(b) {
//                     fa.test(b || "") || e.error("unsupported lang: " + b);
//                     b = b.replace(qa, ra).toLowerCase();
//                     return function(e) {
//                         var a;
//                         do
//                             if (a = D ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))
//                                 return a = a.toLowerCase(),
//                                 a === b || 0 === a.indexOf(b + "-");
//                         while ((e = e.parentNode) && 1 === e.nodeType);
//                         return !1
//                     }
//                 }),
//                 target: function(e) {
//                     var a = b.location && b.location.hash;
//                     return a && a.slice(1) === e.id
//                 },
//                 root: function(b) {
//                     return b === G
//                 },
//                 focus: function(b) {
//                     return b === J.activeElement && (!J.hasFocus || J.hasFocus()) && !!(b.type || b.href || ~b.tabIndex)
//                 },
//                 enabled: p(!1),
//                 disabled: p(!0),
//                 checked: function(b) {
//                     var e = b.nodeName.toLowerCase();
//                     return "input" === e && !!b.checked || "option" === e && !!b.selected
//                 },
//                 selected: function(b) {
//                     b.parentNode && b.parentNode.selectedIndex;
//                     return !0 === b.selected
//                 },
//                 empty: function(b) {
//                     for (b = b.firstChild; b; b = b.nextSibling)
//                         if (6 > b.nodeType)
//                             return !1;
//                     return !0
//                 },
//                 parent: function(b) {
//                     return !H.pseudos.empty(b)
//                 },
//                 header: function(b) {
//                     return pa.test(b.nodeName)
//                 },
//                 input: function(b) {
//                     return oa.test(b.nodeName)
//                 },
//                 button: function(b) {
//                     var e = b.nodeName.toLowerCase();
//                     return "input" === e && "button" === b.type || "button" === e
//                 },
//                 text: function(b) {
//                     var e;
//                     return "input" === b.nodeName.toLowerCase() && "text" === b.type && (null == (e = b.getAttribute("type")) || "text" === e.toLowerCase())
//                 },
//                 first: m(function() {
//                     return [0]
//                 }),
//                 last: m(function(b, e) {
//                     return [e - 1]
//                 }),
//                 eq: m(function(b, e, a) {
//                     return [0 > a ? a + e : a]
//                 }),
//                 even: m(function(b, e) {
//                     for (var a = 0; a < e; a += 2)
//                         b.push(a);
//                     return b
//                 }),
//                 odd: m(function(b, e) {
//                     for (var a = 1; a < e; a += 2)
//                         b.push(a);
//                     return b
//                 }),
//                 lt: m(function(b, e, a) {
//                     for (e = 0 > a ? a + e : a > e ? e : a; 0 <= --e; )
//                         b.push(e);
//                     return b
//                 }),
//                 gt: m(function(b, e, a) {
//                     for (a = 0 > a ? a + e : a; ++a < e; )
//                         b.push(a);
//                     return b
//                 })
//             }
//         };
//         H.pseudos.nth = H.pseudos.eq;
//         for (B in {
//             radio: !0,
//             checkbox: !0,
//             file: !0,
//             password: !0,
//             image: !0
//         })
//             H.pseudos[B] = g(B);
//         for (B in {
//             submit: !0,
//             reset: !0
//         })
//             H.pseudos[B] = k(B);
//         r.prototype = H.filters = H.pseudos;
//         H.setFilters = new r;
//         var ja = e.tokenize = function(b, a) {
//             var c, l, h, d, g;
//             if (d = la[b + " "])
//                 return a ? 0 : d.slice(0);
//             d = b;
//             var f = [];
//             for (g = H.preFilter; d; ) {
//                 if (!q || (c = Da.exec(d)))
//                     c && (d = d.slice(c[0].length) || d),
//                     f.push(l = []);
//                 var q = !1;
//                 if (c = X.exec(d))
//                     q = c.shift(),
//                     l.push({
//                         value: q,
//                         type: c[0].replace(ma, " ")
//                     }),
//                     d = d.slice(q.length);
//                 for (h in H.filter)
//                     !(c = W[h].exec(d)) || g[h] && !(c = g[h](c)) || (q = c.shift(),
//                     l.push({
//                         value: q,
//                         type: h,
//                         matches: c
//                     }),
//                     d = d.slice(q.length));
//                 if (!q)
//                     break
//             }
//             return a ? d.length : d ? e.error(b) : la(b, f).slice(0)
//         }
//         ;
//         var va = e.compile = function(b, e) {
//             var a, c = [], l = [], h = La[b + " "];
//             if (!h) {
//                 e || (e = ja(b));
//                 for (a = e.length; a--; )
//                     h = I(e[a]),
//                     h[N] ? c.push(h) : l.push(h);
//                 h = La(b, F(l, c));
//                 h.selector = b
//             }
//             return h
//         }
//         ;
//         var Aa = e.select = function(b, e, a, c) {
//             var l, h, d, g = "function" === typeof b && b, f = !c && ja(b = g.selector || b);
//             a = a || [];
//             if (1 === f.length) {
//                 var q = f[0] = f[0].slice(0);
//                 if (2 < q.length && "ID" === (h = q[0]).type && 9 === e.nodeType && D && H.relative[q[1].type]) {
//                     e = (H.find.ID(h.matches[0].replace(qa, ra), e) || [])[0];
//                     if (!e)
//                         return a;
//                     g && (e = e.parentNode);
//                     b = b.slice(q.shift().value.length)
//                 }
//                 for (l = W.needsContext.test(b) ? 0 : q.length; l--; ) {
//                     h = q[l];
//                     if (H.relative[d = h.type])
//                         break;
//                     if (d = H.find[d])
//                         if (c = d(h.matches[0].replace(qa, ra), ha.test(q[0].type) && n(e.parentNode) || e)) {
//                             q.splice(l, 1);
//                             b = c.length && t(q);
//                             if (!b)
//                                 return O.apply(a, c),
//                                 a;
//                             break
//                         }
//                 }
//             }
//             (g || va(b, f))(c, e, !D, a, !e || ha.test(b) && n(e.parentNode) || e);
//             return a
//         }
//         ;
//         P.sortStable = N.split("").sort(Ba).join("") === N;
//         P.detectDuplicates = !!ca;
//         za();
//         P.sortDetached = h(function(b) {
//             return b.compareDocumentPosition(J.createElement("fieldset")) & 1
//         });
//         h(function(b) {
//             b.innerHTML = "\x3ca href\x3d'#'\x3e\x3c/a\x3e";
//             return "#" === b.firstChild.getAttribute("href")
//         }) || d("type|href|height|width", function(b, e, a) {
//             if (!a)
//                 return b.getAttribute(e, "type" === e.toLowerCase() ? 1 : 2)
//         });
//         P.attributes && h(function(b) {
//             b.innerHTML = "\x3cinput/\x3e";
//             b.firstChild.setAttribute("value", "");
//             return "" === b.firstChild.getAttribute("value")
//         }) || d("value", function(b, e, a) {
//             if (!a && "input" === b.nodeName.toLowerCase())
//                 return b.defaultValue
//         });
//         h(function(b) {
//             return null == b.getAttribute("disabled")
//         }) || d("checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", function(b, e, a) {
//             var c;
//             if (!a)
//                 return !0 === b[e] ? e.toLowerCase() : (c = b.getAttributeNode(e)) && c.specified ? c.value : null
//         });
//         return e
//     }(d);
//     h.find = sa;
//     h.expr = sa.selectors;
//     h.expr[":"] = h.expr.pseudos;
//     h.uniqueSort = h.unique = sa.uniqueSort;
//     h.text = sa.getText;
//     h.isXMLDoc = sa.isXML;
//     h.contains = sa.contains;
//     h.escapeSelector = sa.escape;
//     var ua = function(b, e, a) {
//         for (var c = [], l = void 0 !== a; (b = b[e]) && 9 !== b.nodeType; )
//             if (1 === b.nodeType) {
//                 if (l && h(b).is(a))
//                     break;
//                 c.push(b)
//             }
//         return c
//     }
//       , qb = function(b, e) {
//         for (var a = []; b; b = b.nextSibling)
//             1 === b.nodeType && b !== e && a.push(b);
//         return a
//     }
//       , rb = h.expr.match.needsContext
//       , sb = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
//     h.filter = function(b, e, a) {
//         var c = e[0];
//         a && (b = ":not(" + b + ")");
//         return 1 === e.length && 1 === c.nodeType ? h.find.matchesSelector(c, b) ? [c] : [] : h.find.matches(b, h.grep(e, function(b) {
//             return 1 === b.nodeType
//         }))
//     }
//     ;
//     h.fn.extend({
//         find: function(b) {
//             var e, a = this.length, c = this;
//             if ("string" !== typeof b)
//                 return this.pushStack(h(b).filter(function() {
//                     for (e = 0; e < a; e++)
//                         if (h.contains(c[e], this))
//                             return !0
//                 }));
//             var d = this.pushStack([]);
//             for (e = 0; e < a; e++)
//                 h.find(b, c[e], d);
//             return 1 < a ? h.uniqueSort(d) : d
//         },
//         filter: function(b) {
//             return this.pushStack(p(this, b || [], !1))
//         },
//         not: function(b) {
//             return this.pushStack(p(this, b || [], !0))
//         },
//         is: function(b) {
//             return !!p(this, "string" === typeof b && rb.test(b) ? h(b) : b || [], !1).length
//         }
//     });
//     var Wb = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
//     (h.fn.init = function(b, e, a) {
//         if (!b)
//             return this;
//         a = a || Xb;
//         if ("string" === typeof b) {
//             var c = "\x3c" === b[0] && "\x3e" === b[b.length - 1] && 3 <= b.length ? [null, b, null] : Wb.exec(b);
//             if (!c || !c[1] && e)
//                 return !e || e.jquery ? (e || a).find(b) : this.constructor(e).find(b);
//             if (c[1]) {
//                 if (e = e instanceof h ? e[0] : e,
//                 h.merge(this, h.parseHTML(c[1], e && e.nodeType ? e.ownerDocument || e : C, !0)),
//                 sb.test(c[1]) && h.isPlainObject(e))
//                     for (c in e)
//                         if (x(this[c]))
//                             this[c](e[c]);
//                         else
//                             this.attr(c, e[c])
//             } else if (b = C.getElementById(c[2]))
//                 this[0] = b,
//                 this.length = 1;
//             return this
//         }
//         return b.nodeType ? (this[0] = b,
//         this.length = 1,
//         this) : x(b) ? void 0 !== a.ready ? a.ready(b) : b(h) : h.makeArray(b, this)
//     }
//     ).prototype = h.fn;
//     var Xb = h(C);
//     var Yb = /^(?:parents|prev(?:Until|All))/
//       , Zb = {
//         children: !0,
//         contents: !0,
//         next: !0,
//         prev: !0
//     };
//     h.fn.extend({
//         has: function(b) {
//             var e = h(b, this)
//               , a = e.length;
//             return this.filter(function() {
//                 for (var b = 0; b < a; b++)
//                     if (h.contains(this, e[b]))
//                         return !0
//             })
//         },
//         closest: function(b, e) {
//             var a, c = 0, d = this.length, g = [], f = "string" !== typeof b && h(b);
//             if (!rb.test(b))
//                 for (; c < d; c++)
//                     for (a = this[c]; a && a !== e; a = a.parentNode)
//                         if (11 > a.nodeType && (f ? -1 < f.index(a) : 1 === a.nodeType && h.find.matchesSelector(a, b))) {
//                             g.push(a);
//                             break
//                         }
//             return this.pushStack(1 < g.length ? h.uniqueSort(g) : g)
//         },
//         index: function(b) {
//             return b ? "string" === typeof b ? Ja.call(h(b), this[0]) : Ja.call(this, b.jquery ? b[0] : b) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
//         },
//         add: function(b, e) {
//             return this.pushStack(h.uniqueSort(h.merge(this.get(), h(b, e))))
//         },
//         addBack: function(b) {
//             return this.add(null == b ? this.prevObject : this.prevObject.filter(b))
//         }
//     });
//     h.each({
//         parent: function(b) {
//             return (b = b.parentNode) && 11 !== b.nodeType ? b : null
//         },
//         parents: function(b) {
//             return ua(b, "parentNode")
//         },
//         parentsUntil: function(b, e, a) {
//             return ua(b, "parentNode", a)
//         },
//         next: function(b) {
//             return n(b, "nextSibling")
//         },
//         prev: function(b) {
//             return n(b, "previousSibling")
//         },
//         nextAll: function(b) {
//             return ua(b, "nextSibling")
//         },
//         prevAll: function(b) {
//             return ua(b, "previousSibling")
//         },
//         nextUntil: function(b, e, a) {
//             return ua(b, "nextSibling", a)
//         },
//         prevUntil: function(b, e, a) {
//             return ua(b, "previousSibling", a)
//         },
//         siblings: function(b) {
//             return qb((b.parentNode || {}).firstChild, b)
//         },
//         children: function(b) {
//             return qb(b.firstChild)
//         },
//         contents: function(b) {
//             if ("undefined" !== typeof b.contentDocument)
//                 return b.contentDocument;
//             g(b, "template") && (b = b.content || b);
//             return h.merge([], b.childNodes)
//         }
//     }, function(b, e) {
//         h.fn[b] = function(a, c) {
//             var l = h.map(this, e, a);
//             "Until" !== b.slice(-5) && (c = a);
//             c && "string" === typeof c && (l = h.filter(c, l));
//             1 < this.length && (Zb[b] || h.uniqueSort(l),
//             Yb.test(b) && l.reverse());
//             return this.pushStack(l)
//         }
//     });
//     var Z = /[^\x20\t\r\n\f]+/g;
//     h.Callbacks = function(b) {
//         b = "string" === typeof b ? m(b) : h.extend({}, b);
//         var e, c, d, g, f = [], k = [], p = -1, n = function() {
//             g = g || b.once;
//             for (d = e = !0; k.length; p = -1)
//                 for (c = k.shift(); ++p < f.length; )
//                     !1 === f[p].apply(c[0], c[1]) && b.stopOnFalse && (p = f.length,
//                     c = !1);
//             b.memory || (c = !1);
//             e = !1;
//             g && (f = c ? [] : "")
//         }, r = {
//             add: function() {
//                 f && (c && !e && (p = f.length - 1,
//                 k.push(c)),
//                 function Nb(e) {
//                     h.each(e, function(e, c) {
//                         x(c) ? b.unique && r.has(c) || f.push(c) : c && c.length && "string" !== a(c) && Nb(c)
//                     })
//                 }(arguments),
//                 c && !e && n());
//                 return this
//             },
//             remove: function() {
//                 h.each(arguments, function(b, e) {
//                     for (var a; -1 < (a = h.inArray(e, f, a)); )
//                         f.splice(a, 1),
//                         a <= p && p--
//                 });
//                 return this
//             },
//             has: function(b) {
//                 return b ? -1 < h.inArray(b, f) : 0 < f.length
//             },
//             empty: function() {
//                 f && (f = []);
//                 return this
//             },
//             disable: function() {
//                 g = k = [];
//                 f = c = "";
//                 return this
//             },
//             disabled: function() {
//                 return !f
//             },
//             lock: function() {
//                 g = k = [];
//                 c || e || (f = c = "");
//                 return this
//             },
//             locked: function() {
//                 return !!g
//             },
//             fireWith: function(b, a) {
//                 g || (a = a || [],
//                 a = [b, a.slice ? a.slice() : a],
//                 k.push(a),
//                 e || n());
//                 return this
//             },
//             fire: function() {
//                 r.fireWith(this, arguments);
//                 return this
//             },
//             fired: function() {
//                 return !!d
//             }
//         };
//         return r
//     }
//     ;
//     h.extend({
//         Deferred: function(b) {
//             var e = [["notify", "progress", h.Callbacks("memory"), h.Callbacks("memory"), 2], ["resolve", "done", h.Callbacks("once memory"), h.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", h.Callbacks("once memory"), h.Callbacks("once memory"), 1, "rejected"]]
//               , a = "pending"
//               , c = {
//                 state: function() {
//                     return a
//                 },
//                 always: function() {
//                     g.done(arguments).fail(arguments);
//                     return this
//                 },
//                 "catch": function(b) {
//                     return c.then(null, b)
//                 },
//                 pipe: function() {
//                     var b = arguments;
//                     return h.Deferred(function(a) {
//                         h.each(e, function(e, c) {
//                             var h = x(b[c[4]]) && b[c[4]];
//                             g[c[1]](function() {
//                                 var b = h && h.apply(this, arguments);
//                                 if (b && x(b.promise))
//                                     b.promise().progress(a.notify).done(a.resolve).fail(a.reject);
//                                 else
//                                     a[c[0] + "With"](this, h ? [b] : arguments)
//                             })
//                         });
//                         b = null
//                     }).promise()
//                 },
//                 then: function(b, a, c) {
//                     function l(b, e, a, c) {
//                         return function() {
//                             var f = this
//                               , q = arguments
//                               , k = function() {
//                                 if (!(b < g)) {
//                                     var h = a.apply(f, q);
//                                     if (h === e.promise())
//                                         throw new TypeError("Thenable self-resolution");
//                                     var d = h && ("object" === typeof h || "function" === typeof h) && h.then;
//                                     x(d) ? c ? d.call(h, l(g, e, t, c), l(g, e, r, c)) : (g++,
//                                     d.call(h, l(g, e, t, c), l(g, e, r, c), l(g, e, t, e.notifyWith))) : (a !== t && (f = void 0,
//                                     q = [h]),
//                                     (c || e.resolveWith)(f, q))
//                                 }
//                             }
//                               , m = c ? k : function() {
//                                 try {
//                                     k()
//                                 } catch (pb) {
//                                     h.Deferred.exceptionHook && h.Deferred.exceptionHook(pb, m.stackTrace),
//                                     b + 1 >= g && (a !== r && (f = void 0,
//                                     q = [pb]),
//                                     e.rejectWith(f, q))
//                                 }
//                             }
//                             ;
//                             b ? m() : (h.Deferred.getStackHook && (m.stackTrace = h.Deferred.getStackHook()),
//                             d.setTimeout(m))
//                         }
//                     }
//                     var g = 0;
//                     return h.Deferred(function(h) {
//                         e[0][3].add(l(0, h, x(c) ? c : t, h.notifyWith));
//                         e[1][3].add(l(0, h, x(b) ? b : t));
//                         e[2][3].add(l(0, h, x(a) ? a : r))
//                     }).promise()
//                 },
//                 promise: function(b) {
//                     return null != b ? h.extend(b, c) : c
//                 }
//             }
//               , g = {};
//             h.each(e, function(b, h) {
//                 var l = h[2]
//                   , d = h[5];
//                 c[h[1]] = l.add;
//                 d && l.add(function() {
//                     a = d
//                 }, e[3 - b][2].disable, e[3 - b][3].disable, e[0][2].lock, e[0][3].lock);
//                 l.add(h[3].fire);
//                 g[h[0]] = function() {
//                     g[h[0] + "With"](this === g ? void 0 : this, arguments);
//                     return this
//                 }
//                 ;
//                 g[h[0] + "With"] = l.fireWith
//             });
//             c.promise(g);
//             b && b.call(g, g);
//             return g
//         },
//         when: function(b) {
//             var e = arguments.length
//               , a = e
//               , c = Array(a)
//               , d = W.call(arguments)
//               , g = h.Deferred()
//               , f = function(b) {
//                 return function(a) {
//                     c[b] = this;
//                     d[b] = 1 < arguments.length ? W.call(arguments) : a;
//                     --e || g.resolveWith(c, d)
//                 }
//             };
//             if (1 >= e && (u(b, g.done(f(a)).resolve, g.reject, !e),
//             "pending" === g.state() || x(d[a] && d[a].then)))
//                 return g.then();
//             for (; a--; )
//                 u(d[a], f(a), g.reject);
//             return g.promise()
//         }
//     });
//     var $b = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
//     h.Deferred.exceptionHook = function(b, e) {
//         d.console && d.console.warn && b && $b.test(b.name) && d.console.warn("jQuery.Deferred exception: " + b.message, b.stack, e)
//     }
//     ;
//     h.readyException = function(b) {
//         d.setTimeout(function() {
//             throw b;
//         })
//     }
//     ;
//     var $a = h.Deferred();
//     h.fn.ready = function(b) {
//         $a.then(b).catch(function(b) {
//             h.readyException(b)
//         });
//         return this
//     }
//     ;
//     h.extend({
//         isReady: !1,
//         readyWait: 1,
//         ready: function(b) {
//             (!0 === b ? --h.readyWait : h.isReady) || (h.isReady = !0,
//             !0 !== b && 0 < --h.readyWait || $a.resolveWith(C, [h]))
//         }
//     });
//     h.ready.then = $a.then;
//     "complete" === C.readyState || "loading" !== C.readyState && !C.documentElement.doScroll ? d.setTimeout(h.ready) : (C.addEventListener("DOMContentLoaded", z),
//     d.addEventListener("load", z));
//     var fa = function(b, e, c, d, g, f, k) {
//         var l = 0
//           , q = b.length
//           , m = null == c;
//         if ("object" === a(c))
//             for (l in g = !0,
//             c)
//                 fa(b, e, l, c[l], !0, f, k);
//         else if (void 0 !== d && (g = !0,
//         x(d) || (k = !0),
//         m && (k ? (e.call(b, d),
//         e = null) : (m = e,
//         e = function(b, e, a) {
//             return m.call(h(b), a)
//         }
//         )),
//         e))
//             for (; l < q; l++)
//                 e(b[l], c, k ? d : d.call(b[l], l, e(b[l], c)));
//         return g ? b : m ? e.call(b) : q ? e(b[0], c) : f
//     }
//       , Gb = /^-ms-/
//       , Hb = /-([a-z])/g
//       , Ra = function(b) {
//         return 1 === b.nodeType || 9 === b.nodeType || !+b.nodeType
//     };
//     F.uid = 1;
//     F.prototype = {
//         cache: function(b) {
//             var e = b[this.expando];
//             e || (e = {},
//             Ra(b) && (b.nodeType ? b[this.expando] = e : Object.defineProperty(b, this.expando, {
//                 value: e,
//                 configurable: !0
//             })));
//             return e
//         },
//         set: function(b, e, a) {
//             var c;
//             b = this.cache(b);
//             if ("string" === typeof e)
//                 b[y(e)] = a;
//             else
//                 for (c in e)
//                     b[y(c)] = e[c];
//             return b
//         },
//         get: function(b, e) {
//             return void 0 === e ? this.cache(b) : b[this.expando] && b[this.expando][y(e)]
//         },
//         access: function(b, e, a) {
//             if (void 0 === e || e && "string" === typeof e && void 0 === a)
//                 return this.get(b, e);
//             this.set(b, e, a);
//             return void 0 !== a ? a : e
//         },
//         remove: function(b, e) {
//             var a, c = b[this.expando];
//             if (void 0 !== c) {
//                 if (void 0 !== e)
//                     for (Array.isArray(e) ? e = e.map(y) : (e = y(e),
//                     e = e in c ? [e] : e.match(Z) || []),
//                     a = e.length; a--; )
//                         delete c[e[a]];
//                 if (void 0 === e || h.isEmptyObject(c))
//                     b.nodeType ? b[this.expando] = void 0 : delete b[this.expando]
//             }
//         },
//         hasData: function(b) {
//             b = b[this.expando];
//             return void 0 !== b && !h.isEmptyObject(b)
//         }
//     };
//     var v = new F
//       , O = new F
//       , Jb = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
//       , Ib = /[A-Z]/g;
//     h.extend({
//         hasData: function(b) {
//             return O.hasData(b) || v.hasData(b)
//         },
//         data: function(b, e, a) {
//             return O.access(b, e, a)
//         },
//         removeData: function(b, e) {
//             O.remove(b, e)
//         },
//         _data: function(b, e, a) {
//             return v.access(b, e, a)
//         },
//         _removeData: function(b, e) {
//             v.remove(b, e)
//         }
//     });
//     h.fn.extend({
//         data: function(b, e) {
//             var a, c = this[0], h = c && c.attributes;
//             if (void 0 === b) {
//                 if (this.length) {
//                     var d = O.get(c);
//                     if (1 === c.nodeType && !v.get(c, "hasDataAttrs")) {
//                         for (a = h.length; a--; )
//                             if (h[a]) {
//                                 var g = h[a].name;
//                                 0 === g.indexOf("data-") && (g = y(g.slice(5)),
//                                 T(c, g, d[g]))
//                             }
//                         v.set(c, "hasDataAttrs", !0)
//                     }
//                 }
//                 return d
//             }
//             return "object" === typeof b ? this.each(function() {
//                 O.set(this, b)
//             }) : fa(this, function(e) {
//                 if (c && void 0 === e) {
//                     var a = O.get(c, b);
//                     if (void 0 !== a)
//                         return a;
//                     a = T(c, b);
//                     if (void 0 !== a)
//                         return a
//                 } else
//                     this.each(function() {
//                         O.set(this, b, e)
//                     })
//             }, null, e, 1 < arguments.length, null, !0)
//         },
//         removeData: function(b) {
//             return this.each(function() {
//                 O.remove(this, b)
//             })
//         }
//     });
//     h.extend({
//         queue: function(b, e, a) {
//             if (b) {
//                 e = (e || "fx") + "queue";
//                 var c = v.get(b, e);
//                 a && (!c || Array.isArray(a) ? c = v.access(b, e, h.makeArray(a)) : c.push(a));
//                 return c || []
//             }
//         },
//         dequeue: function(b, e) {
//             e = e || "fx";
//             var a = h.queue(b, e)
//               , c = a.length
//               , d = a.shift()
//               , g = h._queueHooks(b, e)
//               , f = function() {
//                 h.dequeue(b, e)
//             };
//             "inprogress" === d && (d = a.shift(),
//             c--);
//             d && ("fx" === e && a.unshift("inprogress"),
//             delete g.stop,
//             d.call(b, f, g));
//             !c && g && g.empty.fire()
//         },
//         _queueHooks: function(b, e) {
//             var a = e + "queueHooks";
//             return v.get(b, a) || v.access(b, a, {
//                 empty: h.Callbacks("once memory").add(function() {
//                     v.remove(b, [e + "queue", a])
//                 })
//             })
//         }
//     });
//     h.fn.extend({
//         queue: function(b, e) {
//             var a = 2;
//             "string" !== typeof b && (e = b,
//             b = "fx",
//             a--);
//             return arguments.length < a ? h.queue(this[0], b) : void 0 === e ? this : this.each(function() {
//                 var a = h.queue(this, b, e);
//                 h._queueHooks(this, b);
//                 "fx" === b && "inprogress" !== a[0] && h.dequeue(this, b)
//             })
//         },
//         dequeue: function(b) {
//             return this.each(function() {
//                 h.dequeue(this, b)
//             })
//         },
//         clearQueue: function(b) {
//             return this.queue(b || "fx", [])
//         },
//         promise: function(b, e) {
//             var a, c = 1, d = h.Deferred(), g = this, f = this.length, k = function() {
//                 --c || d.resolveWith(g, [g])
//             };
//             "string" !== typeof b && (e = b,
//             b = void 0);
//             for (b = b || "fx"; f--; )
//                 (a = v.get(g[f], b + "queueHooks")) && a.empty && (c++,
//                 a.empty.add(k));
//             k();
//             return d.promise(e)
//         }
//     });
//     var tb = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
//       , wa = new RegExp("^(?:([+-])\x3d|)(" + tb + ")([a-z%]*)$","i")
//       , ea = ["Top", "Right", "Bottom", "Left"]
//       , ja = C.documentElement
//       , ka = function(b) {
//         return h.contains(b.ownerDocument, b)
//     }
//       , ac = {
//         composed: !0
//     };
//     ja.getRootNode && (ka = function(b) {
//         return h.contains(b.ownerDocument, b) || b.getRootNode(ac) === b.ownerDocument
//     }
//     );
//     var Ka = function(b, e) {
//         b = e || b;
//         return "none" === b.style.display || "" === b.style.display && ka(b) && "none" === h.css(b, "display")
//     }
//       , ub = function(b, e, a, c) {
//         var h, l = {};
//         for (h in e)
//             l[h] = b.style[h],
//             b.style[h] = e[h];
//         a = a.apply(b, c || []);
//         for (h in e)
//             b.style[h] = l[h];
//         return a
//     }
//       , eb = {};
//     h.fn.extend({
//         show: function() {
//             return G(this, !0)
//         },
//         hide: function() {
//             return G(this)
//         },
//         toggle: function(b) {
//             return "boolean" === typeof b ? b ? this.show() : this.hide() : this.each(function() {
//                 Ka(this) ? h(this).show() : h(this).hide()
//             })
//         }
//     });
//     var va = /^(?:checkbox|radio)$/i
//       , fb = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i
//       , gb = /^$|^module$|\/(?:java|ecma)script/i
//       , R = {
//         option: [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"],
//         thead: [1, "\x3ctable\x3e", "\x3c/table\x3e"],
//         col: [2, "\x3ctable\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"],
//         tr: [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"],
//         td: [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"],
//         _default: [0, "", ""]
//     };
//     R.optgroup = R.option;
//     R.tbody = R.tfoot = R.colgroup = R.caption = R.thead;
//     R.th = R.td;
//     var Lb = /<|&#?\w+;/;
//     (function() {
//         var b = C.createDocumentFragment().appendChild(C.createElement("div"))
//           , e = C.createElement("input");
//         e.setAttribute("type", "radio");
//         e.setAttribute("checked", "checked");
//         e.setAttribute("name", "t");
//         b.appendChild(e);
//         E.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked;
//         b.innerHTML = "\x3ctextarea\x3ex\x3c/textarea\x3e";
//         E.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue
//     }
//     )();
//     var bc = /^key/
//       , cc = /^(?:mouse|pointer|contextmenu|drag|drop)|click/
//       , vb = /^([^.]*)(?:\.(.+)|)/;
//     h.event = {
//         global: {},
//         add: function(b, e, a, c, d) {
//             var l, g, f, q, k;
//             if (f = v.get(b)) {
//                 if (a.handler) {
//                     var m = a;
//                     a = m.handler;
//                     d = m.selector
//                 }
//                 d && h.find.matchesSelector(ja, d);
//                 a.guid || (a.guid = h.guid++);
//                 (g = f.events) || (g = f.events = {});
//                 (l = f.handle) || (l = f.handle = function(e) {
//                     return "undefined" !== typeof h && h.event.triggered !== e.type ? h.event.dispatch.apply(b, arguments) : void 0
//                 }
//                 );
//                 e = (e || "").match(Z) || [""];
//                 for (f = e.length; f--; ) {
//                     var p = vb.exec(e[f]) || [];
//                     var n = q = p[1];
//                     var r = (p[2] || "").split(".").sort();
//                     n && (p = h.event.special[n] || {},
//                     n = (d ? p.delegateType : p.bindType) || n,
//                     p = h.event.special[n] || {},
//                     q = h.extend({
//                         type: n,
//                         origType: q,
//                         data: c,
//                         handler: a,
//                         guid: a.guid,
//                         selector: d,
//                         needsContext: d && h.expr.match.needsContext.test(d),
//                         namespace: r.join(".")
//                     }, m),
//                     (k = g[n]) || (k = g[n] = [],
//                     k.delegateCount = 0,
//                     p.setup && !1 !== p.setup.call(b, c, r, l) || b.addEventListener && b.addEventListener(n, l)),
//                     p.add && (p.add.call(b, q),
//                     q.handler.guid || (q.handler.guid = a.guid)),
//                     d ? k.splice(k.delegateCount++, 0, q) : k.push(q),
//                     h.event.global[n] = !0)
//                 }
//             }
//         },
//         remove: function(b, e, a, c, d) {
//             var l, g, f, q, k, m = v.hasData(b) && v.get(b);
//             if (m && (f = m.events)) {
//                 e = (e || "").match(Z) || [""];
//                 for (q = e.length; q--; ) {
//                     var p = vb.exec(e[q]) || [];
//                     var n = k = p[1];
//                     var r = (p[2] || "").split(".").sort();
//                     if (n) {
//                         var w = h.event.special[n] || {};
//                         n = (c ? w.delegateType : w.bindType) || n;
//                         var t = f[n] || [];
//                         p = p[2] && new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)");
//                         for (g = l = t.length; l--; ) {
//                             var u = t[l];
//                             !d && k !== u.origType || a && a.guid !== u.guid || p && !p.test(u.namespace) || c && c !== u.selector && ("**" !== c || !u.selector) || (t.splice(l, 1),
//                             u.selector && t.delegateCount--,
//                             w.remove && w.remove.call(b, u))
//                         }
//                         g && !t.length && (w.teardown && !1 !== w.teardown.call(b, r, m.handle) || h.removeEvent(b, n, m.handle),
//                         delete f[n])
//                     } else
//                         for (n in f)
//                             h.event.remove(b, n + e[q], a, c, !0)
//                 }
//                 h.isEmptyObject(f) && v.remove(b, "handle events")
//             }
//         },
//         dispatch: function(b) {
//             var e = h.event.fix(b), a, c, d, g = Array(arguments.length);
//             var f = (v.get(this, "events") || {})[e.type] || [];
//             var k = h.event.special[e.type] || {};
//             g[0] = e;
//             for (a = 1; a < arguments.length; a++)
//                 g[a] = arguments[a];
//             e.delegateTarget = this;
//             if (!k.preDispatch || !1 !== k.preDispatch.call(this, e)) {
//                 var m = h.event.handlers.call(this, e, f);
//                 for (a = 0; (d = m[a++]) && !e.isPropagationStopped(); )
//                     for (e.currentTarget = d.elem,
//                     f = 0; (c = d.handlers[f++]) && !e.isImmediatePropagationStopped(); )
//                         if (!e.rnamespace || !1 === c.namespace || e.rnamespace.test(c.namespace))
//                             e.handleObj = c,
//                             e.data = c.data,
//                             c = ((h.event.special[c.origType] || {}).handle || c.handler).apply(d.elem, g),
//                             void 0 !== c && !1 === (e.result = c) && (e.preventDefault(),
//                             e.stopPropagation());
//                 k.postDispatch && k.postDispatch.call(this, e);
//                 return e.result
//             }
//         },
//         handlers: function(b, e) {
//             var a, c = [], d = e.delegateCount, g = b.target;
//             if (d && g.nodeType && !("click" === b.type && 1 <= b.button))
//                 for (; g !== this; g = g.parentNode || this)
//                     if (1 === g.nodeType && ("click" !== b.type || !0 !== g.disabled)) {
//                         var f = [];
//                         var k = {};
//                         for (a = 0; a < d; a++) {
//                             var m = e[a];
//                             var p = m.selector + " ";
//                             void 0 === k[p] && (k[p] = m.needsContext ? -1 < h(p, this).index(g) : h.find(p, this, null, [g]).length);
//                             k[p] && f.push(m)
//                         }
//                         f.length && c.push({
//                             elem: g,
//                             handlers: f
//                         })
//                     }
//             d < e.length && c.push({
//                 elem: this,
//                 handlers: e.slice(d)
//             });
//             return c
//         },
//         addProp: function(b, e) {
//             Object.defineProperty(h.Event.prototype, b, {
//                 enumerable: !0,
//                 configurable: !0,
//                 get: x(e) ? function() {
//                     if (this.originalEvent)
//                         return e(this.originalEvent)
//                 }
//                 : function() {
//                     if (this.originalEvent)
//                         return this.originalEvent[b]
//                 }
//                 ,
//                 set: function(e) {
//                     Object.defineProperty(this, b, {
//                         enumerable: !0,
//                         configurable: !0,
//                         writable: !0,
//                         value: e
//                     })
//                 }
//             })
//         },
//         fix: function(b) {
//             return b[h.expando] ? b : new h.Event(b)
//         },
//         special: {
//             load: {
//                 noBubble: !0
//             },
//             click: {
//                 setup: function(b) {
//                     b = this || b;
//                     va.test(b.type) && b.click && g(b, "input") && B(b, "click", A);
//                     return !1
//                 },
//                 trigger: function(b) {
//                     b = this || b;
//                     va.test(b.type) && b.click && g(b, "input") && B(b, "click");
//                     return !0
//                 },
//                 _default: function(b) {
//                     b = b.target;
//                     return va.test(b.type) && b.click && g(b, "input") && v.get(b, "click") || g(b, "a")
//                 }
//             },
//             beforeunload: {
//                 postDispatch: function(b) {
//                     void 0 !== b.result && b.originalEvent && (b.originalEvent.returnValue = b.result)
//                 }
//             }
//         }
//     };
//     h.removeEvent = function(b, e, a) {
//         b.removeEventListener && b.removeEventListener(e, a)
//     }
//     ;
//     h.Event = function(b, e) {
//         if (!(this instanceof h.Event))
//             return new h.Event(b,e);
//         b && b.type ? (this.originalEvent = b,
//         this.type = b.type,
//         this.isDefaultPrevented = b.defaultPrevented || void 0 === b.defaultPrevented && !1 === b.returnValue ? A : L,
//         this.target = b.target && 3 === b.target.nodeType ? b.target.parentNode : b.target,
//         this.currentTarget = b.currentTarget,
//         this.relatedTarget = b.relatedTarget) : this.type = b;
//         e && h.extend(this, e);
//         this.timeStamp = b && b.timeStamp || Date.now();
//         this[h.expando] = !0
//     }
//     ;
//     h.Event.prototype = {
//         constructor: h.Event,
//         isDefaultPrevented: L,
//         isPropagationStopped: L,
//         isImmediatePropagationStopped: L,
//         isSimulated: !1,
//         preventDefault: function() {
//             var b = this.originalEvent;
//             this.isDefaultPrevented = A;
//             b && !this.isSimulated && b.preventDefault()
//         },
//         stopPropagation: function() {
//             var b = this.originalEvent;
//             this.isPropagationStopped = A;
//             b && !this.isSimulated && b.stopPropagation()
//         },
//         stopImmediatePropagation: function() {
//             var b = this.originalEvent;
//             this.isImmediatePropagationStopped = A;
//             b && !this.isSimulated && b.stopImmediatePropagation();
//             this.stopPropagation()
//         }
//     };
//     h.each({
//         altKey: !0,
//         bubbles: !0,
//         cancelable: !0,
//         changedTouches: !0,
//         ctrlKey: !0,
//         detail: !0,
//         eventPhase: !0,
//         metaKey: !0,
//         pageX: !0,
//         pageY: !0,
//         shiftKey: !0,
//         view: !0,
//         "char": !0,
//         code: !0,
//         charCode: !0,
//         key: !0,
//         keyCode: !0,
//         button: !0,
//         buttons: !0,
//         clientX: !0,
//         clientY: !0,
//         offsetX: !0,
//         offsetY: !0,
//         pointerId: !0,
//         pointerType: !0,
//         screenX: !0,
//         screenY: !0,
//         targetTouches: !0,
//         toElement: !0,
//         touches: !0,
//         which: function(b) {
//             var e = b.button;
//             return null == b.which && bc.test(b.type) ? null != b.charCode ? b.charCode : b.keyCode : !b.which && void 0 !== e && cc.test(b.type) ? e & 1 ? 1 : e & 2 ? 3 : e & 4 ? 2 : 0 : b.which
//         }
//     }, h.event.addProp);
//     h.each({
//         focus: "focusin",
//         blur: "focusout"
//     }, function(b, e) {
//         h.event.special[b] = {
//             setup: function() {
//                 B(this, b, Sa);
//                 return !1
//             },
//             trigger: function() {
//                 B(this, b);
//                 return !0
//             },
//             delegateType: e
//         }
//     });
//     h.each({
//         mouseenter: "mouseover",
//         mouseleave: "mouseout",
//         pointerenter: "pointerover",
//         pointerleave: "pointerout"
//     }, function(b, e) {
//         h.event.special[b] = {
//             delegateType: e,
//             bindType: e,
//             handle: function(b) {
//                 var a = b.relatedTarget
//                   , c = b.handleObj;
//                 if (!a || a !== this && !h.contains(this, a)) {
//                     b.type = c.origType;
//                     var d = c.handler.apply(this, arguments);
//                     b.type = e
//                 }
//                 return d
//             }
//         }
//     });
//     h.fn.extend({
//         on: function(b, e, a, c) {
//             return V(this, b, e, a, c)
//         },
//         one: function(b, e, a, c) {
//             return V(this, b, e, a, c, 1)
//         },
//         off: function(b, e, a) {
//             if (b && b.preventDefault && b.handleObj) {
//                 var c = b.handleObj;
//                 h(b.delegateTarget).off(c.namespace ? c.origType + "." + c.namespace : c.origType, c.selector, c.handler);
//                 return this
//             }
//             if ("object" === typeof b) {
//                 for (c in b)
//                     this.off(c, e, b[c]);
//                 return this
//             }
//             if (!1 === e || "function" === typeof e)
//                 a = e,
//                 e = void 0;
//             !1 === a && (a = L);
//             return this.each(function() {
//                 h.event.remove(this, b, a, e)
//             })
//         }
//     });
//     var dc = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi
//       , ec = /<script|<style|<link/i
//       , Mb = /checked\s*(?:[^=]|=\s*.checked.)/i
//       , Ob = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
//     h.extend({
//         htmlPrefilter: function(b) {
//             return b.replace(dc, "\x3c$1\x3e\x3c/$2\x3e")
//         },
//         clone: function(b, e, a) {
//             var c, d = b.cloneNode(!0), g = ka(b);
//             if (!(E.noCloneChecked || 1 !== b.nodeType && 11 !== b.nodeType || h.isXMLDoc(b))) {
//                 var l = D(d);
//                 var f = D(b);
//                 var k = 0;
//                 for (c = f.length; k < c; k++) {
//                     var m = f[k]
//                       , p = l[k]
//                       , n = p.nodeName.toLowerCase();
//                     if ("input" === n && va.test(m.type))
//                         p.checked = m.checked;
//                     else if ("input" === n || "textarea" === n)
//                         p.defaultValue = m.defaultValue
//                 }
//             }
//             if (e)
//                 if (a)
//                     for (f = f || D(b),
//                     l = l || D(d),
//                     k = 0,
//                     c = f.length; k < c; k++)
//                         xa(f[k], l[k]);
//                 else
//                     xa(b, d);
//             l = D(d, "script");
//             0 < l.length && ba(l, !g && D(b, "script"));
//             return d
//         },
//         cleanData: function(b) {
//             for (var e, a, c, d = h.event.special, g = 0; void 0 !== (a = b[g]); g++)
//                 if (Ra(a)) {
//                     if (e = a[v.expando]) {
//                         if (e.events)
//                             for (c in e.events)
//                                 d[c] ? h.event.remove(a, c) : h.removeEvent(a, c, e.handle);
//                         a[v.expando] = void 0
//                     }
//                     a[O.expando] && (a[O.expando] = void 0)
//                 }
//         }
//     });
//     h.fn.extend({
//         detach: function(b) {
//             return Ba(this, b, !0)
//         },
//         remove: function(b) {
//             return Ba(this, b)
//         },
//         text: function(b) {
//             return fa(this, function(b) {
//                 return void 0 === b ? h.text(this) : this.empty().each(function() {
//                     if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType)
//                         this.textContent = b
//                 })
//             }, null, b, arguments.length)
//         },
//         append: function() {
//             return la(this, arguments, function(b) {
//                 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || ca(this, b).appendChild(b)
//             })
//         },
//         prepend: function() {
//             return la(this, arguments, function(b) {
//                 if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
//                     var e = ca(this, b);
//                     e.insertBefore(b, e.firstChild)
//                 }
//             })
//         },
//         before: function() {
//             return la(this, arguments, function(b) {
//                 this.parentNode && this.parentNode.insertBefore(b, this)
//             })
//         },
//         after: function() {
//             return la(this, arguments, function(b) {
//                 this.parentNode && this.parentNode.insertBefore(b, this.nextSibling)
//             })
//         },
//         empty: function() {
//             for (var b, e = 0; null != (b = this[e]); e++)
//                 1 === b.nodeType && (h.cleanData(D(b, !1)),
//                 b.textContent = "");
//             return this
//         },
//         clone: function(b, e) {
//             b = null == b ? !1 : b;
//             e = null == e ? b : e;
//             return this.map(function() {
//                 return h.clone(this, b, e)
//             })
//         },
//         html: function(b) {
//             return fa(this, function(b) {
//                 var e = this[0] || {}
//                   , a = 0
//                   , c = this.length;
//                 if (void 0 === b && 1 === e.nodeType)
//                     return e.innerHTML;
//                 if ("string" === typeof b && !ec.test(b) && !R[(fb.exec(b) || ["", ""])[1].toLowerCase()]) {
//                     b = h.htmlPrefilter(b);
//                     try {
//                         for (; a < c; a++)
//                             e = this[a] || {},
//                             1 === e.nodeType && (h.cleanData(D(e, !1)),
//                             e.innerHTML = b);
//                         e = 0
//                     } catch (Q) {}
//                 }
//                 e && this.empty().append(b)
//             }, null, b, arguments.length)
//         },
//         replaceWith: function() {
//             var b = [];
//             return la(this, arguments, function(e) {
//                 var a = this.parentNode;
//                 0 > h.inArray(this, b) && (h.cleanData(D(this)),
//                 a && a.replaceChild(e, this))
//             }, b)
//         }
//     });
//     h.each({
//         appendTo: "append",
//         prependTo: "prepend",
//         insertBefore: "before",
//         insertAfter: "after",
//         replaceAll: "replaceWith"
//     }, function(b, e) {
//         h.fn[b] = function(b) {
//             for (var a = [], c = h(b), d = c.length - 1, g = 0; g <= d; g++)
//                 b = g === d ? this : this.clone(!0),
//                 h(c[g])[e](b),
//                 Ya.apply(a, b.get());
//             return this.pushStack(a)
//         }
//     });
//     var Ta = new RegExp("^(" + tb + ")(?!px)[a-z%]+$","i")
//       , Ma = function(b) {
//         var e = b.ownerDocument.defaultView;
//         e && e.opener || (e = d);
//         return e.getComputedStyle(b)
//     }
//       , Pb = new RegExp(ea.join("|"),"i");
//     (function() {
//         function b() {
//             if (m) {
//                 k.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
//                 m.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
//                 ja.appendChild(k).appendChild(m);
//                 var b = d.getComputedStyle(m);
//                 e = "1%" !== b.top;
//                 f = 12 === Math.round(parseFloat(b.marginLeft));
//                 m.style.right = "60%";
//                 g = 36 === Math.round(parseFloat(b.right));
//                 a = 36 === Math.round(parseFloat(b.width));
//                 m.style.position = "absolute";
//                 c = 12 === Math.round(parseFloat(m.offsetWidth / 3));
//                 ja.removeChild(k);
//                 m = null
//             }
//         }
//         var e, a, c, g, f, k = C.createElement("div"), m = C.createElement("div");
//         m.style && (m.style.backgroundClip = "content-box",
//         m.cloneNode(!0).style.backgroundClip = "",
//         E.clearCloneStyle = "content-box" === m.style.backgroundClip,
//         h.extend(E, {
//             boxSizingReliable: function() {
//                 b();
//                 return a
//             },
//             pixelBoxStyles: function() {
//                 b();
//                 return g
//             },
//             pixelPosition: function() {
//                 b();
//                 return e
//             },
//             reliableMarginLeft: function() {
//                 b();
//                 return f
//             },
//             scrollboxSize: function() {
//                 b();
//                 return c
//             }
//         }))
//     }
//     )();
//     var kb = ["Webkit", "Moz", "ms"]
//       , jb = C.createElement("div").style
//       , ib = {}
//       , fc = /^(none|table(?!-c[ea]).+)/
//       , wb = /^--/
//       , gc = {
//         position: "absolute",
//         visibility: "hidden",
//         display: "block"
//     }
//       , xb = {
//         letterSpacing: "0",
//         fontWeight: "400"
//     };
//     h.extend({
//         cssHooks: {
//             opacity: {
//                 get: function(b, e) {
//                     if (e)
//                         return b = ta(b, "opacity"),
//                         "" === b ? "1" : b
//                 }
//             }
//         },
//         cssNumber: {
//             animationIterationCount: !0,
//             columnCount: !0,
//             fillOpacity: !0,
//             flexGrow: !0,
//             flexShrink: !0,
//             fontWeight: !0,
//             gridArea: !0,
//             gridColumn: !0,
//             gridColumnEnd: !0,
//             gridColumnStart: !0,
//             gridRow: !0,
//             gridRowEnd: !0,
//             gridRowStart: !0,
//             lineHeight: !0,
//             opacity: !0,
//             order: !0,
//             orphans: !0,
//             widows: !0,
//             zIndex: !0,
//             zoom: !0
//         },
//         cssProps: {},
//         style: function(b, e, a, c) {
//             if (b && 3 !== b.nodeType && 8 !== b.nodeType && b.style) {
//                 var d, g = y(e), f = wb.test(e), l = b.style;
//                 f || (e = da(g));
//                 var k = h.cssHooks[e] || h.cssHooks[g];
//                 if (void 0 !== a) {
//                     var q = typeof a;
//                     "string" === q && (d = wa.exec(a)) && d[1] && (a = ia(b, e, d),
//                     q = "number");
//                     null != a && a === a && ("number" !== q || f || (a += d && d[3] || (h.cssNumber[g] ? "" : "px")),
//                     E.clearCloneStyle || "" !== a || 0 !== e.indexOf("background") || (l[e] = "inherit"),
//                     k && "set"in k && void 0 === (a = k.set(b, a, c)) || (f ? l.setProperty(e, a) : l[e] = a))
//                 } else
//                     return k && "get"in k && void 0 !== (d = k.get(b, !1, c)) ? d : l[e]
//             }
//         },
//         css: function(b, e, a, c) {
//             var d;
//             var g = y(e);
//             wb.test(e) || (e = da(g));
//             (g = h.cssHooks[e] || h.cssHooks[g]) && "get"in g && (d = g.get(b, !0, a));
//             void 0 === d && (d = ta(b, e, c));
//             "normal" === d && e in xb && (d = xb[e]);
//             return "" === a || a ? (b = parseFloat(d),
//             !0 === a || isFinite(b) ? b || 0 : d) : d
//         }
//     });
//     h.each(["height", "width"], function(b, e) {
//         h.cssHooks[e] = {
//             get: function(b, a, c) {
//                 if (a)
//                     return !fc.test(h.css(b, "display")) || b.getClientRects().length && b.getBoundingClientRect().width ? Oa(b, e, c) : ub(b, gc, function() {
//                         return Oa(b, e, c)
//                     })
//             },
//             set: function(b, a, c) {
//                 var d, g = Ma(b), f = !E.scrollboxSize() && "absolute" === g.position, l = (f || c) && "border-box" === h.css(b, "boxSizing", !1, g);
//                 c = c ? Da(b, e, c, l, g) : 0;
//                 l && f && (c -= Math.ceil(b["offset" + e[0].toUpperCase() + e.slice(1)] - parseFloat(g[e]) - Da(b, e, "border", !1, g) - .5));
//                 c && (d = wa.exec(a)) && "px" !== (d[3] || "px") && (b.style[e] = a,
//                 a = h.css(b, e));
//                 return ma(b, a, c)
//             }
//         }
//     });
//     h.cssHooks.marginLeft = Na(E.reliableMarginLeft, function(b, e) {
//         if (e)
//             return (parseFloat(ta(b, "marginLeft")) || b.getBoundingClientRect().left - ub(b, {
//                 marginLeft: 0
//             }, function() {
//                 return b.getBoundingClientRect().left
//             })) + "px"
//     });
//     h.each({
//         margin: "",
//         padding: "",
//         border: "Width"
//     }, function(b, e) {
//         h.cssHooks[b + e] = {
//             expand: function(a) {
//                 var c = 0
//                   , h = {};
//                 for (a = "string" === typeof a ? a.split(" ") : [a]; 4 > c; c++)
//                     h[b + ea[c] + e] = a[c] || a[c - 2] || a[0];
//                 return h
//             }
//         };
//         "margin" !== b && (h.cssHooks[b + e].set = ma)
//     });
//     h.fn.extend({
//         css: function(b, e) {
//             return fa(this, function(b, e, a) {
//                 var c, d = {}, g = 0;
//                 if (Array.isArray(e)) {
//                     a = Ma(b);
//                     for (c = e.length; g < c; g++)
//                         d[e[g]] = h.css(b, e[g], !1, a);
//                     return d
//                 }
//                 return void 0 !== a ? h.style(b, e, a) : h.css(b, e)
//             }, b, e, 1 < arguments.length)
//         }
//     });
//     h.Tween = U;
//     U.prototype = {
//         constructor: U,
//         init: function(b, e, a, c, d, g) {
//             this.elem = b;
//             this.prop = a;
//             this.easing = d || h.easing._default;
//             this.options = e;
//             this.start = this.now = this.cur();
//             this.end = c;
//             this.unit = g || (h.cssNumber[a] ? "" : "px")
//         },
//         cur: function() {
//             var b = U.propHooks[this.prop];
//             return b && b.get ? b.get(this) : U.propHooks._default.get(this)
//         },
//         run: function(b) {
//             var e, a = U.propHooks[this.prop];
//             this.pos = this.options.duration ? e = h.easing[this.easing](b, this.options.duration * b, 0, 1, this.options.duration) : e = b;
//             this.now = (this.end - this.start) * e + this.start;
//             this.options.step && this.options.step.call(this.elem, this.now, this);
//             a && a.set ? a.set(this) : U.propHooks._default.set(this);
//             return this
//         }
//     };
//     U.prototype.init.prototype = U.prototype;
//     U.propHooks = {
//         _default: {
//             get: function(b) {
//                 return 1 !== b.elem.nodeType || null != b.elem[b.prop] && null == b.elem.style[b.prop] ? b.elem[b.prop] : (b = h.css(b.elem, b.prop, "")) && "auto" !== b ? b : 0
//             },
//             set: function(b) {
//                 if (h.fx.step[b.prop])
//                     h.fx.step[b.prop](b);
//                 else
//                     1 !== b.elem.nodeType || !h.cssHooks[b.prop] && null == b.elem.style[da(b.prop)] ? b.elem[b.prop] = b.now : h.style(b.elem, b.prop, b.now + b.unit)
//             }
//         }
//     };
//     U.propHooks.scrollTop = U.propHooks.scrollLeft = {
//         set: function(b) {
//             b.elem.nodeType && b.elem.parentNode && (b.elem[b.prop] = b.now)
//         }
//     };
//     h.easing = {
//         linear: function(b) {
//             return b
//         },
//         swing: function(b) {
//             return .5 - Math.cos(b * Math.PI) / 2
//         },
//         _default: "swing"
//     };
//     h.fx = U.prototype.init;
//     h.fx.step = {};
//     var na, Pa, hc = /^(?:toggle|show|hide)$/, ic = /queueHooks$/;
//     h.Animation = h.extend(X, {
//         tweeners: {
//             "*": [function(b, e) {
//                 var a = this.createTween(b, e);
//                 ia(a.elem, b, wa.exec(e), a);
//                 return a
//             }
//             ]
//         },
//         tweener: function(b, a) {
//             x(b) ? (a = b,
//             b = ["*"]) : b = b.match(Z);
//             for (var e, c = 0, h = b.length; c < h; c++)
//                 e = b[c],
//                 X.tweeners[e] = X.tweeners[e] || [],
//                 X.tweeners[e].unshift(a)
//         },
//         prefilters: [function(b, a, c) {
//             var e;
//             var d = "width"in a || "height"in a;
//             var g = this
//               , f = {}
//               , l = b.style
//               , k = b.nodeType && Ka(b)
//               , m = v.get(b, "fxshow");
//             if (!c.queue) {
//                 var p = h._queueHooks(b, "fx");
//                 if (null == p.unqueued) {
//                     p.unqueued = 0;
//                     var n = p.empty.fire;
//                     p.empty.fire = function() {
//                         p.unqueued || n()
//                     }
//                 }
//                 p.unqueued++;
//                 g.always(function() {
//                     g.always(function() {
//                         p.unqueued--;
//                         h.queue(b, "fx").length || p.empty.fire()
//                     })
//                 })
//             }
//             for (e in a) {
//                 var r = a[e];
//                 if (hc.test(r)) {
//                     delete a[e];
//                     var t = t || "toggle" === r;
//                     if (r === (k ? "hide" : "show"))
//                         if ("show" === r && m && void 0 !== m[e])
//                             k = !0;
//                         else
//                             continue;
//                     f[e] = m && m[e] || h.style(b, e)
//                 }
//             }
//             if ((a = !h.isEmptyObject(a)) || !h.isEmptyObject(f)) {
//                 if (d && 1 === b.nodeType) {
//                     c.overflow = [l.overflow, l.overflowX, l.overflowY];
//                     var u = m && m.display;
//                     null == u && (u = v.get(b, "display"));
//                     d = h.css(b, "display");
//                     "none" === d && (u ? d = u : (G([b], !0),
//                     u = b.style.display || u,
//                     d = h.css(b, "display"),
//                     G([b])));
//                     ("inline" === d || "inline-block" === d && null != u) && "none" === h.css(b, "float") && (a || (g.done(function() {
//                         l.display = u
//                     }),
//                     null == u && (d = l.display,
//                     u = "none" === d ? "" : d)),
//                     l.display = "inline-block")
//                 }
//                 c.overflow && (l.overflow = "hidden",
//                 g.always(function() {
//                     l.overflow = c.overflow[0];
//                     l.overflowX = c.overflow[1];
//                     l.overflowY = c.overflow[2]
//                 }));
//                 a = !1;
//                 for (e in f)
//                     a || (m ? "hidden"in m && (k = m.hidden) : m = v.access(b, "fxshow", {
//                         display: u
//                     }),
//                     t && (m.hidden = !k),
//                     k && G([b], !0),
//                     g.done(function() {
//                         k || G([b]);
//                         v.remove(b, "fxshow");
//                         for (e in f)
//                             h.style(b, e, f[e])
//                     })),
//                     a = lb(k ? m[e] : 0, e, g),
//                     e in m || (m[e] = a.start,
//                     k && (a.end = a.start,
//                     a.start = 0))
//             }
//         }
//         ],
//         prefilter: function(b, a) {
//             a ? X.prefilters.unshift(b) : X.prefilters.push(b)
//         }
//     });
//     h.speed = function(b, a, c) {
//         var e = b && "object" === typeof b ? h.extend({}, b) : {
//             complete: c || !c && a || x(b) && b,
//             duration: b,
//             easing: c && a || a && !x(a) && a
//         };
//         h.fx.off ? e.duration = 0 : "number" !== typeof e.duration && (e.duration = e.duration in h.fx.speeds ? h.fx.speeds[e.duration] : h.fx.speeds._default);
//         if (null == e.queue || !0 === e.queue)
//             e.queue = "fx";
//         e.old = e.complete;
//         e.complete = function() {
//             x(e.old) && e.old.call(this);
//             e.queue && h.dequeue(this, e.queue)
//         }
//         ;
//         return e
//     }
//     ;
//     h.fn.extend({
//         fadeTo: function(b, a, c, h) {
//             return this.filter(Ka).css("opacity", 0).show().end().animate({
//                 opacity: a
//             }, b, c, h)
//         },
//         animate: function(b, a, c, d) {
//             var e = h.isEmptyObject(b)
//               , g = h.speed(a, c, d);
//             a = function() {
//                 var a = X(this, h.extend({}, b), g);
//                 (e || v.get(this, "finish")) && a.stop(!0)
//             }
//             ;
//             a.finish = a;
//             return e || !1 === g.queue ? this.each(a) : this.queue(g.queue, a)
//         },
//         stop: function(b, a, c) {
//             var e = function(b) {
//                 var a = b.stop;
//                 delete b.stop;
//                 a(c)
//             };
//             "string" !== typeof b && (c = a,
//             a = b,
//             b = void 0);
//             a && !1 !== b && this.queue(b || "fx", []);
//             return this.each(function() {
//                 var a = !0
//                   , d = null != b && b + "queueHooks"
//                   , g = h.timers
//                   , f = v.get(this);
//                 if (d)
//                     f[d] && f[d].stop && e(f[d]);
//                 else
//                     for (d in f)
//                         f[d] && f[d].stop && ic.test(d) && e(f[d]);
//                 for (d = g.length; d--; )
//                     g[d].elem !== this || null != b && g[d].queue !== b || (g[d].anim.stop(c),
//                     a = !1,
//                     g.splice(d, 1));
//                 !a && c || h.dequeue(this, b)
//             })
//         },
//         finish: function(b) {
//             !1 !== b && (b = b || "fx");
//             return this.each(function() {
//                 var a = v.get(this)
//                   , c = a[b + "queue"];
//                 var d = a[b + "queueHooks"];
//                 var g = h.timers
//                   , f = c ? c.length : 0;
//                 a.finish = !0;
//                 h.queue(this, b, []);
//                 d && d.stop && d.stop.call(this, !0);
//                 for (d = g.length; d--; )
//                     g[d].elem === this && g[d].queue === b && (g[d].anim.stop(!0),
//                     g.splice(d, 1));
//                 for (d = 0; d < f; d++)
//                     c[d] && c[d].finish && c[d].finish.call(this);
//                 delete a.finish
//             })
//         }
//     });
//     h.each(["toggle", "show", "hide"], function(b, a) {
//         var e = h.fn[a];
//         h.fn[a] = function(b, c, h) {
//             return null == b || "boolean" === typeof b ? e.apply(this, arguments) : this.animate(ya(a, !0), b, c, h)
//         }
//     });
//     h.each({
//         slideDown: ya("show"),
//         slideUp: ya("hide"),
//         slideToggle: ya("toggle"),
//         fadeIn: {
//             opacity: "show"
//         },
//         fadeOut: {
//             opacity: "hide"
//         },
//         fadeToggle: {
//             opacity: "toggle"
//         }
//     }, function(b, a) {
//         h.fn[b] = function(b, e, c) {
//             return this.animate(a, b, e, c)
//         }
//     });
//     h.timers = [];
//     h.fx.tick = function() {
//         var b = 0
//           , a = h.timers;
//         for (na = Date.now(); b < a.length; b++) {
//             var c = a[b];
//             c() || a[b] !== c || a.splice(b--, 1)
//         }
//         a.length || h.fx.stop();
//         na = void 0
//     }
//     ;
//     h.fx.timer = function(b) {
//         h.timers.push(b);
//         h.fx.start()
//     }
//     ;
//     h.fx.interval = 13;
//     h.fx.start = function() {
//         Pa || (Pa = !0,
//         Ea())
//     }
//     ;
//     h.fx.stop = function() {
//         Pa = null
//     }
//     ;
//     h.fx.speeds = {
//         slow: 600,
//         fast: 200,
//         _default: 400
//     };
//     h.fn.delay = function(b, a) {
//         b = h.fx ? h.fx.speeds[b] || b : b;
//         return this.queue(a || "fx", function(a, e) {
//             var c = d.setTimeout(a, b);
//             e.stop = function() {
//                 d.clearTimeout(c)
//             }
//         })
//     }
//     ;
//     (function() {
//         var b = C.createElement("input")
//           , a = C.createElement("select").appendChild(C.createElement("option"));
//         b.type = "checkbox";
//         E.checkOn = "" !== b.value;
//         E.optSelected = a.selected;
//         b = C.createElement("input");
//         b.value = "t";
//         b.type = "radio";
//         E.radioValue = "t" === b.value
//     }
//     )();
//     var Aa = h.expr.attrHandle;
//     h.fn.extend({
//         attr: function(b, a) {
//             return fa(this, h.attr, b, a, 1 < arguments.length)
//         },
//         removeAttr: function(b) {
//             return this.each(function() {
//                 h.removeAttr(this, b)
//             })
//         }
//     });
//     h.extend({
//         attr: function(b, a, c) {
//             var e, d, g = b.nodeType;
//             if (3 !== g && 8 !== g && 2 !== g) {
//                 if ("undefined" === typeof b.getAttribute)
//                     return h.prop(b, a, c);
//                 1 === g && h.isXMLDoc(b) || (d = h.attrHooks[a.toLowerCase()] || (h.expr.match.bool.test(a) ? jc : void 0));
//                 if (void 0 !== c) {
//                     if (null === c) {
//                         h.removeAttr(b, a);
//                         return
//                     }
//                     if (d && "set"in d && void 0 !== (e = d.set(b, c, a)))
//                         return e;
//                     b.setAttribute(a, c + "");
//                     return c
//                 }
//                 if (d && "get"in d && null !== (e = d.get(b, a)))
//                     return e;
//                 e = h.find.attr(b, a);
//                 return null == e ? void 0 : e
//             }
//         },
//         attrHooks: {
//             type: {
//                 set: function(b, a) {
//                     if (!E.radioValue && "radio" === a && g(b, "input")) {
//                         var e = b.value;
//                         b.setAttribute("type", a);
//                         e && (b.value = e);
//                         return a
//                     }
//                 }
//             }
//         },
//         removeAttr: function(b, a) {
//             var e = 0
//               , c = a && a.match(Z);
//             if (c && 1 === b.nodeType)
//                 for (; a = c[e++]; )
//                     b.removeAttribute(a)
//         }
//     });
//     var jc = {
//         set: function(b, a, c) {
//             !1 === a ? h.removeAttr(b, c) : b.setAttribute(c, c);
//             return c
//         }
//     };
//     h.each(h.expr.match.bool.source.match(/\w+/g), function(b, a) {
//         var e = Aa[a] || h.find.attr;
//         Aa[a] = function(b, a, c) {
//             var h = a.toLowerCase();
//             if (!c) {
//                 var d = Aa[h];
//                 Aa[h] = g;
//                 var g = null != e(b, a, c) ? h : null;
//                 Aa[h] = d
//             }
//             return g
//         }
//     });
//     var kc = /^(?:input|select|textarea|button)$/i
//       , lc = /^(?:a|area)$/i;
//     h.fn.extend({
//         prop: function(b, a) {
//             return fa(this, h.prop, b, a, 1 < arguments.length)
//         },
//         removeProp: function(b) {
//             return this.each(function() {
//                 delete this[h.propFix[b] || b]
//             })
//         }
//     });
//     h.extend({
//         prop: function(b, a, c) {
//             var e, d = b.nodeType;
//             if (3 !== d && 8 !== d && 2 !== d) {
//                 if (1 !== d || !h.isXMLDoc(b)) {
//                     a = h.propFix[a] || a;
//                     var g = h.propHooks[a]
//                 }
//                 return void 0 !== c ? g && "set"in g && void 0 !== (e = g.set(b, c, a)) ? e : b[a] = c : g && "get"in g && null !== (e = g.get(b, a)) ? e : b[a]
//             }
//         },
//         propHooks: {
//             tabIndex: {
//                 get: function(b) {
//                     var a = h.find.attr(b, "tabindex");
//                     return a ? parseInt(a, 10) : kc.test(b.nodeName) || lc.test(b.nodeName) && b.href ? 0 : -1
//                 }
//             }
//         },
//         propFix: {
//             "for": "htmlFor",
//             "class": "className"
//         }
//     });
//     E.optSelected || (h.propHooks.selected = {
//         get: function(b) {
//             (b = b.parentNode) && b.parentNode && b.parentNode.selectedIndex;
//             return null
//         },
//         set: function(b) {
//             if (b = b.parentNode)
//                 b.selectedIndex,
//                 b.parentNode && b.parentNode.selectedIndex
//         }
//     });
//     h.each("tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable".split(" "), function() {
//         h.propFix[this.toLowerCase()] = this
//     });
//     h.fn.extend({
//         addClass: function(b) {
//             var a, c, d, g, f = 0;
//             if (x(b))
//                 return this.each(function(a) {
//                     h(this).addClass(b.call(this, a, pa(this)))
//                 });
//             var k = Ua(b);
//             if (k.length)
//                 for (; a = this[f++]; ) {
//                     var m = pa(a);
//                     if (c = 1 === a.nodeType && " " + oa(m) + " ") {
//                         for (g = 0; d = k[g++]; )
//                             0 > c.indexOf(" " + d + " ") && (c += d + " ");
//                         c = oa(c);
//                         m !== c && a.setAttribute("class", c)
//                     }
//                 }
//             return this
//         },
//         removeClass: function(b) {
//             var a, c, d, g, f = 0;
//             if (x(b))
//                 return this.each(function(a) {
//                     h(this).removeClass(b.call(this, a, pa(this)))
//                 });
//             if (!arguments.length)
//                 return this.attr("class", "");
//             var k = Ua(b);
//             if (k.length)
//                 for (; a = this[f++]; ) {
//                     var m = pa(a);
//                     if (c = 1 === a.nodeType && " " + oa(m) + " ") {
//                         for (g = 0; d = k[g++]; )
//                             for (; -1 < c.indexOf(" " + d + " "); )
//                                 c = c.replace(" " + d + " ", " ");
//                         c = oa(c);
//                         m !== c && a.setAttribute("class", c)
//                     }
//                 }
//             return this
//         },
//         toggleClass: function(b, a) {
//             var e = typeof b
//               , c = "string" === e || Array.isArray(b);
//             return "boolean" === typeof a && c ? a ? this.addClass(b) : this.removeClass(b) : x(b) ? this.each(function(e) {
//                 h(this).toggleClass(b.call(this, e, pa(this), a), a)
//             }) : this.each(function() {
//                 var a, d;
//                 if (c) {
//                     var g = 0;
//                     var f = h(this);
//                     for (d = Ua(b); a = d[g++]; )
//                         f.hasClass(a) ? f.removeClass(a) : f.addClass(a)
//                 } else if (void 0 === b || "boolean" === e)
//                     (a = pa(this)) && v.set(this, "__className__", a),
//                     this.setAttribute && this.setAttribute("class", a || !1 === b ? "" : v.get(this, "__className__") || "")
//             })
//         },
//         hasClass: function(b) {
//             var a, c = 0;
//             for (b = " " + b + " "; a = this[c++]; )
//                 if (1 === a.nodeType && -1 < (" " + oa(pa(a)) + " ").indexOf(b))
//                     return !0;
//             return !1
//         }
//     });
//     var mc = /\r/g;
//     h.fn.extend({
//         val: function(b) {
//             var a, c, d = this[0];
//             if (arguments.length) {
//                 var g = x(b);
//                 return this.each(function(e) {
//                     1 === this.nodeType && (e = g ? b.call(this, e, h(this).val()) : b,
//                     null == e ? e = "" : "number" === typeof e ? e += "" : Array.isArray(e) && (e = h.map(e, function(b) {
//                         return null == b ? "" : b + ""
//                     })),
//                     a = h.valHooks[this.type] || h.valHooks[this.nodeName.toLowerCase()],
//                     a && "set"in a && void 0 !== a.set(this, e, "value") || (this.value = e))
//                 })
//             }
//             if (d) {
//                 if ((a = h.valHooks[d.type] || h.valHooks[d.nodeName.toLowerCase()]) && "get"in a && void 0 !== (c = a.get(d, "value")))
//                     return c;
//                 c = d.value;
//                 return "string" === typeof c ? c.replace(mc, "") : null == c ? "" : c
//             }
//         }
//     });
//     h.extend({
//         valHooks: {
//             option: {
//                 get: function(b) {
//                     var a = h.find.attr(b, "value");
//                     return null != a ? a : oa(h.text(b))
//                 }
//             },
//             select: {
//                 get: function(b) {
//                     var a = b.options
//                       , c = b.selectedIndex
//                       , d = "select-one" === b.type
//                       , f = d ? null : []
//                       , k = d ? c + 1 : a.length;
//                     for (b = 0 > c ? k : d ? c : 0; b < k; b++) {
//                         var m = a[b];
//                         if (!(!m.selected && b !== c || m.disabled || m.parentNode.disabled && g(m.parentNode, "optgroup"))) {
//                             m = h(m).val();
//                             if (d)
//                                 return m;
//                             f.push(m)
//                         }
//                     }
//                     return f
//                 },
//                 set: function(b, a) {
//                     for (var e, c = b.options, d = h.makeArray(a), g = c.length; g--; )
//                         if (a = c[g],
//                         a.selected = -1 < h.inArray(h.valHooks.option.get(a), d))
//                             e = !0;
//                     e || (b.selectedIndex = -1);
//                     return d
//                 }
//             }
//         }
//     });
//     h.each(["radio", "checkbox"], function() {
//         h.valHooks[this] = {
//             set: function(b, a) {
//                 if (Array.isArray(a))
//                     return b.checked = -1 < h.inArray(h(b).val(), a)
//             }
//         };
//         E.checkOn || (h.valHooks[this].get = function(b) {
//             return null === b.getAttribute("value") ? "on" : b.value
//         }
//         )
//     });
//     E.focusin = "onfocusin"in d;
//     var yb = /^(?:focusinfocus|focusoutblur)$/
//       , zb = function(b) {
//         b.stopPropagation()
//     };
//     h.extend(h.event, {
//         trigger: function(b, a, c, g) {
//             var e, f, k, l = [c || C], m = Qa.call(b, "type") ? b.type : b;
//             var p = Qa.call(b, "namespace") ? b.namespace.split(".") : [];
//             var n = k = e = c = c || C;
//             if (3 !== c.nodeType && 8 !== c.nodeType && !yb.test(m + h.event.triggered)) {
//                 -1 < m.indexOf(".") && (p = m.split("."),
//                 m = p.shift(),
//                 p.sort());
//                 var r = 0 > m.indexOf(":") && "on" + m;
//                 b = b[h.expando] ? b : new h.Event(m,"object" === typeof b && b);
//                 b.isTrigger = g ? 2 : 3;
//                 b.namespace = p.join(".");
//                 b.rnamespace = b.namespace ? new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
//                 b.result = void 0;
//                 b.target || (b.target = c);
//                 a = null == a ? [b] : h.makeArray(a, [b]);
//                 p = h.event.special[m] || {};
//                 if (g || !p.trigger || !1 !== p.trigger.apply(c, a)) {
//                     if (!g && !p.noBubble && !ha(c)) {
//                         var q = p.delegateType || m;
//                         yb.test(q + m) || (n = n.parentNode);
//                         for (; n; n = n.parentNode)
//                             l.push(n),
//                             e = n;
//                         e === (c.ownerDocument || C) && l.push(e.defaultView || e.parentWindow || d)
//                     }
//                     for (e = 0; (n = l[e++]) && !b.isPropagationStopped(); )
//                         k = n,
//                         b.type = 1 < e ? q : p.bindType || m,
//                         (f = (v.get(n, "events") || {})[b.type] && v.get(n, "handle")) && f.apply(n, a),
//                         (f = r && n[r]) && f.apply && Ra(n) && (b.result = f.apply(n, a),
//                         !1 === b.result && b.preventDefault());
//                     b.type = m;
//                     g || b.isDefaultPrevented() || p._default && !1 !== p._default.apply(l.pop(), a) || !Ra(c) || !r || !x(c[m]) || ha(c) || ((e = c[r]) && (c[r] = null),
//                     h.event.triggered = m,
//                     b.isPropagationStopped() && k.addEventListener(m, zb),
//                     c[m](),
//                     b.isPropagationStopped() && k.removeEventListener(m, zb),
//                     h.event.triggered = void 0,
//                     e && (c[r] = e));
//                     return b.result
//                 }
//             }
//         },
//         simulate: function(b, a, c) {
//             b = h.extend(new h.Event, c, {
//                 type: b,
//                 isSimulated: !0
//             });
//             h.event.trigger(b, null, a)
//         }
//     });
//     h.fn.extend({
//         trigger: function(b, a) {
//             return this.each(function() {
//                 h.event.trigger(b, a, this)
//             })
//         },
//         triggerHandler: function(b, a) {
//             var e = this[0];
//             if (e)
//                 return h.event.trigger(b, a, e, !0)
//         }
//     });
//     E.focusin || h.each({
//         focus: "focusin",
//         blur: "focusout"
//     }, function(b, a) {
//         var e = function(b) {
//             h.event.simulate(a, b.target, h.event.fix(b))
//         };
//         h.event.special[a] = {
//             setup: function() {
//                 var c = this.ownerDocument || this
//                   , d = v.access(c, a);
//                 d || c.addEventListener(b, e, !0);
//                 v.access(c, a, (d || 0) + 1)
//             },
//             teardown: function() {
//                 var c = this.ownerDocument || this
//                   , d = v.access(c, a) - 1;
//                 d ? v.access(c, a, d) : (c.removeEventListener(b, e, !0),
//                 v.remove(c, a))
//             }
//         }
//     });
//     var Ga = d.location
//       , Ab = Date.now()
//       , ab = /\?/;
//     h.parseXML = function(b) {
//         if (!b || "string" !== typeof b)
//             return null;
//         try {
//             var a = (new d.DOMParser).parseFromString(b, "text/xml")
//         } catch (l) {
//             a = void 0
//         }
//         a && !a.getElementsByTagName("parsererror").length || h.error("Invalid XML: " + b);
//         return a
//     }
//     ;
//     var Rb = /\[\]$/
//       , Bb = /\r?\n/g
//       , nc = /^(?:submit|button|image|reset|file)$/i
//       , oc = /^(?:input|select|textarea|keygen)/i;
//     h.param = function(b, a) {
//         var e, c = [], d = function(b, a) {
//             a = x(a) ? a() : a;
//             c[c.length] = encodeURIComponent(b) + "\x3d" + encodeURIComponent(null == a ? "" : a)
//         };
//         if (null == b)
//             return "";
//         if (Array.isArray(b) || b.jquery && !h.isPlainObject(b))
//             h.each(b, function() {
//                 d(this.name, this.value)
//             });
//         else
//             for (e in b)
//                 Va(e, b[e], a, d);
//         return c.join("\x26")
//     }
//     ;
//     h.fn.extend({
//         serialize: function() {
//             return h.param(this.serializeArray())
//         },
//         serializeArray: function() {
//             return this.map(function() {
//                 var b = h.prop(this, "elements");
//                 return b ? h.makeArray(b) : this
//             }).filter(function() {
//                 var b = this.type;
//                 return this.name && !h(this).is(":disabled") && oc.test(this.nodeName) && !nc.test(b) && (this.checked || !va.test(b))
//             }).map(function(b, a) {
//                 b = h(this).val();
//                 return null == b ? null : Array.isArray(b) ? h.map(b, function(b) {
//                     return {
//                         name: a.name,
//                         value: b.replace(Bb, "\r\n")
//                     }
//                 }) : {
//                     name: a.name,
//                     value: b.replace(Bb, "\r\n")
//                 }
//             }).get()
//         }
//     });
//     var pc = /%20/g
//       , qc = /#.*$/
//       , rc = /([?&])_=[^&]*/
//       , sc = /^(.*?):[ \t]*([^\r\n]*)$/mg
//       , tc = /^(?:GET|HEAD)$/
//       , uc = /^\/\//
//       , Cb = {}
//       , Wa = {}
//       , Db = "*/".concat("*")
//       , bb = C.createElement("a");
//     bb.href = Ga.href;
//     h.extend({
//         active: 0,
//         lastModified: {},
//         etag: {},
//         ajaxSettings: {
//             url: Ga.href,
//             type: "GET",
//             isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Ga.protocol),
//             global: !0,
//             processData: !0,
//             async: !0,
//             contentType: "application/x-www-form-urlencoded; charset\x3dUTF-8",
//             accepts: {
//                 "*": Db,
//                 text: "text/plain",
//                 html: "text/html",
//                 xml: "application/xml, text/xml",
//                 json: "application/json, text/javascript"
//             },
//             contents: {
//                 xml: /\bxml\b/,
//                 html: /\bhtml/,
//                 json: /\bjson\b/
//             },
//             responseFields: {
//                 xml: "responseXML",
//                 text: "responseText",
//                 json: "responseJSON"
//             },
//             converters: {
//                 "* text": String,
//                 "text html": !0,
//                 "text json": JSON.parse,
//                 "text xml": h.parseXML
//             },
//             flatOptions: {
//                 url: !0,
//                 context: !0
//             }
//         },
//         ajaxSetup: function(b, a) {
//             return a ? Xa(Xa(b, h.ajaxSettings), a) : Xa(h.ajaxSettings, b)
//         },
//         ajaxPrefilter: mb(Cb),
//         ajaxTransport: mb(Wa),
//         ajax: function(b, a) {
//             function e(b, a, e, f) {
//                 var l = a;
//                 if (!K) {
//                     K = !0;
//                     k && d.clearTimeout(k);
//                     c = void 0;
//                     g = f || "";
//                     B.readyState = 0 < b ? 4 : 0;
//                     f = 200 <= b && 300 > b || 304 === b;
//                     if (e) {
//                         var p = n;
//                         for (var q = B, y, I, F, w, aa = p.contents, G = p.dataTypes; "*" === G[0]; )
//                             G.shift(),
//                             void 0 === y && (y = p.mimeType || q.getResponseHeader("Content-Type"));
//                         if (y)
//                             for (I in aa)
//                                 if (aa[I] && aa[I].test(y)) {
//                                     G.unshift(I);
//                                     break
//                                 }
//                         if (G[0]in e)
//                             F = G[0];
//                         else {
//                             for (I in e) {
//                                 if (!G[0] || p.converters[I + " " + G[0]]) {
//                                     F = I;
//                                     break
//                                 }
//                                 w || (w = I)
//                             }
//                             F = F || w
//                         }
//                         F ? (F !== G[0] && G.unshift(F),
//                         p = e[F]) : p = void 0
//                     }
//                     a: {
//                         e = n;
//                         y = p;
//                         I = B;
//                         F = f;
//                         var x;
//                         q = {};
//                         aa = e.dataTypes.slice();
//                         if (aa[1])
//                             for (Q in e.converters)
//                                 q[Q.toLowerCase()] = e.converters[Q];
//                         for (w = aa.shift(); w; ) {
//                             e.responseFields[w] && (I[e.responseFields[w]] = y);
//                             !D && F && e.dataFilter && (y = e.dataFilter(y, e.dataType));
//                             var D = w;
//                             if (w = aa.shift())
//                                 if ("*" === w)
//                                     w = D;
//                                 else if ("*" !== D && D !== w) {
//                                     var Q = q[D + " " + w] || q["* " + w];
//                                     if (!Q)
//                                         for (x in q)
//                                             if (p = x.split(" "),
//                                             p[1] === w && (Q = q[D + " " + p[0]] || q["* " + p[0]])) {
//                                                 !0 === Q ? Q = q[x] : !0 !== q[x] && (w = p[0],
//                                                 aa.unshift(p[1]));
//                                                 break
//                                             }
//                                     if (!0 !== Q)
//                                         if (Q && e.throws)
//                                             y = Q(y);
//                                         else
//                                             try {
//                                                 y = Q(y)
//                                             } catch (Vb) {
//                                                 p = {
//                                                     state: "parsererror",
//                                                     error: Q ? Vb : "No conversion from " + D + " to " + w
//                                                 };
//                                                 break a
//                                             }
//                                 }
//                         }
//                         p = {
//                             state: "success",
//                             data: y
//                         }
//                     }
//                     if (f)
//                         if (n.ifModified && ((l = B.getResponseHeader("Last-Modified")) && (h.lastModified[v] = l),
//                         (l = B.getResponseHeader("etag")) && (h.etag[v] = l)),
//                         204 === b || "HEAD" === n.type)
//                             l = "nocontent";
//                         else if (304 === b)
//                             l = "notmodified";
//                         else {
//                             l = p.state;
//                             var ca = p.data;
//                             var A = p.error;
//                             f = !A
//                         }
//                     else if (A = l,
//                     b || !l)
//                         l = "error",
//                         0 > b && (b = 0);
//                     B.status = b;
//                     B.statusText = (a || l) + "";
//                     f ? u.resolveWith(r, [ca, l, B]) : u.rejectWith(r, [B, l, A]);
//                     B.statusCode(V);
//                     V = void 0;
//                     m && t.trigger(f ? "ajaxSuccess" : "ajaxError", [B, n, f ? ca : A]);
//                     z.fireWith(r, [B, l]);
//                     m && (t.trigger("ajaxComplete", [B, n]),
//                     --h.active || h.event.trigger("ajaxStop"))
//                 }
//             }
//             "object" === typeof b && (a = b,
//             b = void 0);
//             a = a || {};
//             var c, g, f, k, m, p, n = h.ajaxSetup({}, a), r = n.context || n, t = n.context && (r.nodeType || r.jquery) ? h(r) : h.event, u = h.Deferred(), z = h.Callbacks("once memory"), V = n.statusCode || {}, y = {}, I = {}, F = "canceled", B = {
//                 readyState: 0,
//                 getResponseHeader: function(b) {
//                     var a;
//                     if (K) {
//                         if (!f)
//                             for (f = {}; a = sc.exec(g); )
//                                 f[a[1].toLowerCase() + " "] = (f[a[1].toLowerCase() + " "] || []).concat(a[2]);
//                         a = f[b.toLowerCase() + " "]
//                     }
//                     return null == a ? null : a.join(", ")
//                 },
//                 getAllResponseHeaders: function() {
//                     return K ? g : null
//                 },
//                 setRequestHeader: function(b, a) {
//                     null == K && (b = I[b.toLowerCase()] = I[b.toLowerCase()] || b,
//                     y[b] = a);
//                     return this
//                 },
//                 overrideMimeType: function(b) {
//                     null == K && (n.mimeType = b);
//                     return this
//                 },
//                 statusCode: function(b) {
//                     var a;
//                     if (b)
//                         if (K)
//                             B.always(b[B.status]);
//                         else
//                             for (a in b)
//                                 V[a] = [V[a], b[a]];
//                     return this
//                 },
//                 abort: function(b) {
//                     b = b || F;
//                     c && c.abort(b);
//                     e(0, b);
//                     return this
//                 }
//             };
//             u.promise(B);
//             n.url = ((b || n.url || Ga.href) + "").replace(uc, Ga.protocol + "//");
//             n.type = a.method || a.type || n.method || n.type;
//             n.dataTypes = (n.dataType || "*").toLowerCase().match(Z) || [""];
//             if (null == n.crossDomain) {
//                 b = C.createElement("a");
//                 try {
//                     b.href = n.url,
//                     b.href = b.href,
//                     n.crossDomain = bb.protocol + "//" + bb.host !== b.protocol + "//" + b.host
//                 } catch (Za) {
//                     n.crossDomain = !0
//                 }
//             }
//             n.data && n.processData && "string" !== typeof n.data && (n.data = h.param(n.data, n.traditional));
//             nb(Cb, n, a, B);
//             if (K)
//                 return B;
//             (m = h.event && n.global) && 0 === h.active++ && h.event.trigger("ajaxStart");
//             n.type = n.type.toUpperCase();
//             n.hasContent = !tc.test(n.type);
//             var v = n.url.replace(qc, "");
//             n.hasContent ? n.data && n.processData && 0 === (n.contentType || "").indexOf("application/x-www-form-urlencoded") && (n.data = n.data.replace(pc, "+")) : (b = n.url.slice(v.length),
//             n.data && (n.processData || "string" === typeof n.data) && (v += (ab.test(v) ? "\x26" : "?") + n.data,
//             delete n.data),
//             !1 === n.cache && (v = v.replace(rc, "$1"),
//             b = (ab.test(v) ? "\x26" : "?") + "_\x3d" + Ab++ + b),
//             n.url = v + b);
//             n.ifModified && (h.lastModified[v] && B.setRequestHeader("If-Modified-Since", h.lastModified[v]),
//             h.etag[v] && B.setRequestHeader("If-None-Match", h.etag[v]));
//             (n.data && n.hasContent && !1 !== n.contentType || a.contentType) && B.setRequestHeader("Content-Type", n.contentType);
//             B.setRequestHeader("Accept", n.dataTypes[0] && n.accepts[n.dataTypes[0]] ? n.accepts[n.dataTypes[0]] + ("*" !== n.dataTypes[0] ? ", " + Db + "; q\x3d0.01" : "") : n.accepts["*"]);
//             for (p in n.headers)
//                 B.setRequestHeader(p, n.headers[p]);
//             if (n.beforeSend && (!1 === n.beforeSend.call(r, B, n) || K))
//                 return B.abort();
//             F = "abort";
//             z.add(n.complete);
//             B.done(n.success);
//             B.fail(n.error);
//             if (c = nb(Wa, n, a, B)) {
//                 B.readyState = 1;
//                 m && t.trigger("ajaxSend", [B, n]);
//                 if (K)
//                     return B;
//                 n.async && 0 < n.timeout && (k = d.setTimeout(function() {
//                     B.abort("timeout")
//                 }, n.timeout));
//                 try {
//                     var K = !1;
//                     c.send(y, e)
//                 } catch (Za) {
//                     if (K)
//                         throw Za;
//                     e(-1, Za)
//                 }
//             } else
//                 e(-1, "No Transport");
//             return B
//         },
//         getJSON: function(b, a, c) {
//             return h.get(b, a, c, "json")
//         },
//         getScript: function(b, a) {
//             return h.get(b, void 0, a, "script")
//         }
//     });
//     h.each(["get", "post"], function(b, a) {
//         h[a] = function(b, e, c, d) {
//             x(e) && (d = d || c,
//             c = e,
//             e = void 0);
//             return h.ajax(h.extend({
//                 url: b,
//                 type: a,
//                 dataType: d,
//                 data: e,
//                 success: c
//             }, h.isPlainObject(b) && b))
//         }
//     });
//     h._evalUrl = function(b, a) {
//         return h.ajax({
//             url: b,
//             type: "GET",
//             dataType: "script",
//             cache: !0,
//             async: !1,
//             global: !1,
//             converters: {
//                 "text script": function() {}
//             },
//             dataFilter: function(b) {
//                 h.globalEval(b, a)
//             }
//         })
//     }
//     ;
//     h.fn.extend({
//         wrapAll: function(b) {
//             this[0] && (x(b) && (b = b.call(this[0])),
//             b = h(b, this[0].ownerDocument).eq(0).clone(!0),
//             this[0].parentNode && b.insertBefore(this[0]),
//             b.map(function() {
//                 for (var b = this; b.firstElementChild; )
//                     b = b.firstElementChild;
//                 return b
//             }).append(this));
//             return this
//         },
//         wrapInner: function(b) {
//             return x(b) ? this.each(function(a) {
//                 h(this).wrapInner(b.call(this, a))
//             }) : this.each(function() {
//                 var a = h(this)
//                   , c = a.contents();
//                 c.length ? c.wrapAll(b) : a.append(b)
//             })
//         },
//         wrap: function(b) {
//             var a = x(b);
//             return this.each(function(e) {
//                 h(this).wrapAll(a ? b.call(this, e) : b)
//             })
//         },
//         unwrap: function(b) {
//             this.parent(b).not("body").each(function() {
//                 h(this).replaceWith(this.childNodes)
//             });
//             return this
//         }
//     });
//     h.expr.pseudos.hidden = function(b) {
//         return !h.expr.pseudos.visible(b)
//     }
//     ;
//     h.expr.pseudos.visible = function(b) {
//         return !!(b.offsetWidth || b.offsetHeight || b.getClientRects().length)
//     }
//     ;
//     h.ajaxSettings.xhr = function() {
//         try {
//             return new d.XMLHttpRequest
//         } catch (b) {}
//     }
//     ;
//     var vc = {
//         0: 200,
//         1223: 204
//     }
//       , Ha = h.ajaxSettings.xhr();
//     E.cors = !!Ha && "withCredentials"in Ha;
//     E.ajax = Ha = !!Ha;
//     h.ajaxTransport(function(b) {
//         var a, c;
//         if (E.cors || Ha && !b.crossDomain)
//             return {
//                 send: function(e, h) {
//                     var g, f = b.xhr();
//                     f.open(b.type, b.url, b.async, b.username, b.password);
//                     if (b.xhrFields)
//                         for (g in b.xhrFields)
//                             f[g] = b.xhrFields[g];
//                     b.mimeType && f.overrideMimeType && f.overrideMimeType(b.mimeType);
//                     b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");
//                     for (g in e)
//                         f.setRequestHeader(g, e[g]);
//                     a = function(b) {
//                         return function() {
//                             a && (a = c = f.onload = f.onerror = f.onabort = f.ontimeout = f.onreadystatechange = null,
//                             "abort" === b ? f.abort() : "error" === b ? "number" !== typeof f.status ? h(0, "error") : h(f.status, f.statusText) : h(vc[f.status] || f.status, f.statusText, "text" !== (f.responseType || "text") || "string" !== typeof f.responseText ? {
//                                 binary: f.response
//                             } : {
//                                 text: f.responseText
//                             }, f.getAllResponseHeaders()))
//                         }
//                     }
//                     ;
//                     f.onload = a();
//                     c = f.onerror = f.ontimeout = a("error");
//                     void 0 !== f.onabort ? f.onabort = c : f.onreadystatechange = function() {
//                         4 === f.readyState && d.setTimeout(function() {
//                             a && c()
//                         })
//                     }
//                     ;
//                     a = a("abort");
//                     try {
//                         f.send(b.hasContent && b.data || null)
//                     } catch (Kb) {
//                         if (a)
//                             throw Kb;
//                     }
//                 },
//                 abort: function() {
//                     a && a()
//                 }
//             }
//     });
//     h.ajaxPrefilter(function(b) {
//         b.crossDomain && (b.contents.script = !1)
//     });
//     h.ajaxSetup({
//         accepts: {
//             script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
//         },
//         contents: {
//             script: /\b(?:java|ecma)script\b/
//         },
//         converters: {
//             "text script": function(b) {
//                 h.globalEval(b);
//                 return b
//             }
//         }
//     });
//     h.ajaxPrefilter("script", function(b) {
//         void 0 === b.cache && (b.cache = !1);
//         b.crossDomain && (b.type = "GET")
//     });
//     h.ajaxTransport("script", function(b) {
//         if (b.crossDomain || b.scriptAttrs) {
//             var a, c;
//             return {
//                 send: function(e, d) {
//                     a = h("\x3cscript\x3e").attr(b.scriptAttrs || {}).prop({
//                         charset: b.scriptCharset,
//                         src: b.url
//                     }).on("load error", c = function(b) {
//                         a.remove();
//                         c = null;
//                         b && d("error" === b.type ? 404 : 200, b.type)
//                     }
//                     );
//                     C.head.appendChild(a[0])
//                 },
//                 abort: function() {
//                     c && c()
//                 }
//             }
//         }
//     });
//     var Eb = []
//       , cb = /(=)\?(?=&|$)|\?\?/;
//     h.ajaxSetup({
//         jsonp: "callback",
//         jsonpCallback: function() {
//             var b = Eb.pop() || h.expando + "_" + Ab++;
//             this[b] = !0;
//             return b
//         }
//     });
//     h.ajaxPrefilter("json jsonp", function(b, a, c) {
//         var e, g = !1 !== b.jsonp && (cb.test(b.url) ? "url" : "string" === typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && cb.test(b.data) && "data");
//         if (g || "jsonp" === b.dataTypes[0]) {
//             var f = b.jsonpCallback = x(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback;
//             g ? b[g] = b[g].replace(cb, "$1" + f) : !1 !== b.jsonp && (b.url += (ab.test(b.url) ? "\x26" : "?") + b.jsonp + "\x3d" + f);
//             b.converters["script json"] = function() {
//                 e || h.error(f + " was not called");
//                 return e[0]
//             }
//             ;
//             b.dataTypes[0] = "json";
//             var k = d[f];
//             d[f] = function() {
//                 e = arguments
//             }
//             ;
//             c.always(function() {
//                 void 0 === k ? h(d).removeProp(f) : d[f] = k;
//                 b[f] && (b.jsonpCallback = a.jsonpCallback,
//                 Eb.push(f));
//                 e && x(k) && k(e[0]);
//                 e = k = void 0
//             });
//             return "script"
//         }
//     });
//     E.createHTMLDocument = function() {
//         var b = C.implementation.createHTMLDocument("").body;
//         b.innerHTML = "\x3cform\x3e\x3c/form\x3e\x3cform\x3e\x3c/form\x3e";
//         return 2 === b.childNodes.length
//     }();
//     h.parseHTML = function(b, a, c) {
//         if ("string" !== typeof b)
//             return [];
//         "boolean" === typeof a && (c = a,
//         a = !1);
//         if (!a)
//             if (E.createHTMLDocument) {
//                 a = C.implementation.createHTMLDocument("");
//                 var e = a.createElement("base");
//                 e.href = C.location.href;
//                 a.head.appendChild(e)
//             } else
//                 a = C;
//         e = sb.exec(b);
//         c = !c && [];
//         if (e)
//             return [a.createElement(e[1])];
//         e = M([b], a, c);
//         c && c.length && h(c).remove();
//         return h.merge([], e.childNodes)
//     }
//     ;
//     h.fn.load = function(b, a, c) {
//         var e, d, g = this, f = b.indexOf(" ");
//         if (-1 < f) {
//             var k = oa(b.slice(f));
//             b = b.slice(0, f)
//         }
//         x(a) ? (c = a,
//         a = void 0) : a && "object" === typeof a && (e = "POST");
//         0 < g.length && h.ajax({
//             url: b,
//             type: e || "GET",
//             dataType: "html",
//             data: a
//         }).done(function(b) {
//             d = arguments;
//             g.html(k ? h("\x3cdiv\x3e").append(h.parseHTML(b)).find(k) : b)
//         }).always(c && function(b, a) {
//             g.each(function() {
//                 c.apply(this, d || [b.responseText, a, b])
//             })
//         }
//         );
//         return this
//     }
//     ;
//     h.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(b, a) {
//         h.fn[a] = function(b) {
//             return this.on(a, b)
//         }
//     });
//     h.expr.pseudos.animated = function(b) {
//         return h.grep(h.timers, function(a) {
//             return b === a.elem
//         }).length
//     }
//     ;
//     h.offset = {
//         setOffset: function(b, a, c) {
//             var e = h.css(b, "position")
//               , d = h(b)
//               , g = {};
//             "static" === e && (b.style.position = "relative");
//             var f = d.offset();
//             var k = h.css(b, "top");
//             var m = h.css(b, "left");
//             ("absolute" === e || "fixed" === e) && -1 < (k + m).indexOf("auto") ? (m = d.position(),
//             k = m.top,
//             m = m.left) : (k = parseFloat(k) || 0,
//             m = parseFloat(m) || 0);
//             x(a) && (a = a.call(b, c, h.extend({}, f)));
//             null != a.top && (g.top = a.top - f.top + k);
//             null != a.left && (g.left = a.left - f.left + m);
//             "using"in a ? a.using.call(b, g) : d.css(g)
//         }
//     };
//     h.fn.extend({
//         offset: function(b) {
//             if (arguments.length)
//                 return void 0 === b ? this : this.each(function(a) {
//                     h.offset.setOffset(this, b, a)
//                 });
//             var a;
//             if (a = this[0]) {
//                 if (!a.getClientRects().length)
//                     return {
//                         top: 0,
//                         left: 0
//                     };
//                 var c = a.getBoundingClientRect();
//                 a = a.ownerDocument.defaultView;
//                 return {
//                     top: c.top + a.pageYOffset,
//                     left: c.left + a.pageXOffset
//                 }
//             }
//         },
//         position: function() {
//             if (this[0]) {
//                 var b, a = this[0], c = {
//                     top: 0,
//                     left: 0
//                 };
//                 if ("fixed" === h.css(a, "position"))
//                     var d = a.getBoundingClientRect();
//                 else {
//                     d = this.offset();
//                     var g = a.ownerDocument;
//                     for (b = a.offsetParent || g.documentElement; b && (b === g.body || b === g.documentElement) && "static" === h.css(b, "position"); )
//                         b = b.parentNode;
//                     b && b !== a && 1 === b.nodeType && (c = h(b).offset(),
//                     c.top += h.css(b, "borderTopWidth", !0),
//                     c.left += h.css(b, "borderLeftWidth", !0))
//                 }
//                 return {
//                     top: d.top - c.top - h.css(a, "marginTop", !0),
//                     left: d.left - c.left - h.css(a, "marginLeft", !0)
//                 }
//             }
//         },
//         offsetParent: function() {
//             return this.map(function() {
//                 for (var b = this.offsetParent; b && "static" === h.css(b, "position"); )
//                     b = b.offsetParent;
//                 return b || ja
//             })
//         }
//     });
//     h.each({
//         scrollLeft: "pageXOffset",
//         scrollTop: "pageYOffset"
//     }, function(b, a) {
//         var c = "pageYOffset" === a;
//         h.fn[b] = function(e) {
//             return fa(this, function(b, e, d) {
//                 if (ha(b))
//                     var h = b;
//                 else
//                     9 === b.nodeType && (h = b.defaultView);
//                 if (void 0 === d)
//                     return h ? h[a] : b[e];
//                 h ? h.scrollTo(c ? h.pageXOffset : d, c ? d : h.pageYOffset) : b[e] = d
//             }, b, e, arguments.length)
//         }
//     });
//     h.each(["top", "left"], function(b, a) {
//         h.cssHooks[a] = Na(E.pixelPosition, function(b, c) {
//             if (c)
//                 return c = ta(b, a),
//                 Ta.test(c) ? h(b).position()[a] + "px" : c
//         })
//     });
//     h.each({
//         Height: "height",
//         Width: "width"
//     }, function(b, a) {
//         h.each({
//             padding: "inner" + b,
//             content: a,
//             "": "outer" + b
//         }, function(c, e) {
//             h.fn[e] = function(d, g) {
//                 var f = arguments.length && (c || "boolean" !== typeof d)
//                   , k = c || (!0 === d || !0 === g ? "margin" : "border");
//                 return fa(this, function(a, c, d) {
//                     return ha(a) ? 0 === e.indexOf("outer") ? a["inner" + b] : a.document.documentElement["client" + b] : 9 === a.nodeType ? (c = a.documentElement,
//                     Math.max(a.body["scroll" + b], c["scroll" + b], a.body["offset" + b], c["offset" + b], c["client" + b])) : void 0 === d ? h.css(a, c, k) : h.style(a, c, d, k)
//                 }, a, f ? d : void 0, f)
//             }
//         })
//     });
//     h.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(b, a) {
//         h.fn[a] = function(b, c) {
//             return 0 < arguments.length ? this.on(a, null, b, c) : this.trigger(a)
//         }
//     });
//     h.fn.extend({
//         hover: function(b, a) {
//             return this.mouseenter(b).mouseleave(a || b)
//         }
//     });
//     h.fn.extend({
//         bind: function(b, a, c) {
//             return this.on(b, null, a, c)
//         },
//         unbind: function(b, a) {
//             return this.off(b, null, a)
//         },
//         delegate: function(b, a, c, d) {
//             return this.on(a, b, c, d)
//         },
//         undelegate: function(b, a, c) {
//             return 1 === arguments.length ? this.off(b, "**") : this.off(a, b || "**", c)
//         }
//     });
//     h.proxy = function(b, a) {
//         if ("string" === typeof a) {
//             var c = b[a];
//             a = b;
//             b = c
//         }
//         if (x(b)) {
//             var e = W.call(arguments, 2);
//             c = function() {
//                 return b.apply(a || this, e.concat(W.call(arguments)))
//             }
//             ;
//             c.guid = b.guid = b.guid || h.guid++;
//             return c
//         }
//     }
//     ;
//     h.holdReady = function(b) {
//         b ? h.readyWait++ : h.ready(!0)
//     }
//     ;
//     h.isArray = Array.isArray;
//     h.parseJSON = JSON.parse;
//     h.nodeName = g;
//     h.isFunction = x;
//     h.isWindow = ha;
//     h.camelCase = y;
//     h.type = a;
//     h.now = Date.now;
//     h.isNumeric = function(b) {
//         var a = h.type(b);
//         return ("number" === a || "string" === a) && !isNaN(b - parseFloat(b))
//     }
//     ;
//     "function" === typeof define && define.amd && define("jquery", [], function() {
//         return h
//     });
//     var wc = d.jQuery
//       , xc = d.$;
//     h.noConflict = function(b) {
//         d.$ === h && (d.$ = xc);
//         b && d.jQuery === h && (d.jQuery = wc);
//         return h
//     }
//     ;
//     k || (d.jQuery = d.$ = h);
//     return h
// });
// window.ContextHubJQ = window.jQuery.noConflict(!0);
// (function() {
//     Function.prototype.bind || (Function.prototype.bind = function(d) {
//         var k = this
//           , f = [].slice.call(arguments, 1)
//           , a = function() {
//             if (this instanceof a) {
//                 var c = function() {};
//                 c.prototype = k.prototype;
//                 c = new c;
//                 var g = k.apply(c, f.concat([].slice.call(arguments)));
//                 c = Object(g) === g ? g : c
//             } else
//                 c = k.apply(d, f.concat([].slice.call(arguments)));
//             return c
//         };
//         return a
//     }
//     )
// }
// )();
// (function(d) {
//     d.ContextHub = d.ContextHub || {};
//     var k = function(a, c) {
//         return (d.ContextHubKernelConfig.debug || c) && a ? Function.prototype.bind.call(a, d.console) : function() {}
//     }
//       , f = function(a) {
//         var c = d.console || {}
//           , g = function() {};
//         ContextHub.console = {
//             log: k(c.log),
//             warn: k(c.warn),
//             info: k(c.info),
//             error: k(c.error, !0),
//             debug: k(c.debug),
//             time: k(c.time),
//             timeEnd: k(c.timeEnd),
//             timeStamp: k(c.timeStamp)
//         };
//         a = a || "info";
//         "info" === a && (ContextHub.console.info = g,
//         ContextHub.console.debug = g);
//         "debug" === a && (ContextHub.console.log = g,
//         ContextHub.console.warn = g)
//     };
//     f();
//     ContextHub.debug = function(a, c) {
//         "undefined" !== typeof a && (d.ContextHubKernelConfig.debug = !0 === a,
//         f(c));
//         return !!d.ContextHubKernelConfig.debug
//     }
// }
// )(window);
// (function(d, k) {
//     k.ContextHub = k.ContextHub || {};
//     k.ContextHub.Utils = k.ContextHub.Utils || {};
//     k.ContextHub.Utils.JSON = k.ContextHub.Utils.JSON || {};
//     var f = function(a) {
//         return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
//     }
//       , a = function(a) {
//         var c = {
//             "\b": "\\b",
//             "\t": "\\t",
//             "\n": "\\n",
//             "\f": "\\f",
//             "\r": "\\r",
//             '"': '\\"',
//             "\\": "\\\\"
//         };
//         return '"' + a.replace(/["\\\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, function(a) {
//             var d = c[a];
//             return d ? d : f(a)
//         }) + '"'
//     }
//       , c = function(g) {
//         var f = d.type(g);
//         "object" === f && d.isArray(g) && (f = "array");
//         switch (f) {
//         case "null":
//         case "boolean":
//             return String(g);
//         case "undefined":
//             break;
//         case "array":
//             var k = [];
//             for (f = 0; f < g.length; f++)
//                 k.push(c(g[f]) || "null");
//             return "[" + k.join(",") + "]";
//         case "number":
//             return String(isFinite(g) ? g : "null");
//         case "string":
//             return a(g);
//         case "date":
//             k = g.getUTCFullYear();
//             f = ContextHub.Shared.pad(g.getUTCMonth() + 1);
//             var p = ContextHub.Shared.pad(g.getUTCDate())
//               , n = ContextHub.Shared.pad(g.getUTCHours())
//               , z = ContextHub.Shared.pad(g.getUTCMinutes())
//               , I = ContextHub.Shared.pad(g.getUTCSeconds());
//             g = ContextHub.Shared.pad(g.getUTCMilliseconds(), 3);
//             return '"' + k + "-" + f + "-" + p + "T" + n + ":" + z + ":" + I + "." + g + 'Z"';
//         case "regexp":
//             return "{}";
//         case "function":
//             break;
//         default:
//             f = [];
//             for (k in g)
//                 Object.prototype.hasOwnProperty.call(g, k) && (p = typeof k,
//                 "number" === p || "string" === p) && (n = g[k],
//                 p = typeof n,
//                 "function" !== p && "undefined" !== p && f.push(a(k) + ":" + c(n)));
//             return "{" + f.join(",") + "}"
//         }
//     }
//       , g = function(a) {
//         a = String(a).replace(/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, f);
//         var c = a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
//         return /^[\],:{}\s]*$/.test(c) ? eval("(" + a + ")") : {}
//     }
//       , p = k.JSON && JSON.stringify && JSON.parse;
//     ContextHub.Utils.JSON.stringify = p ? JSON.stringify : c;
//     ContextHub.Utils.JSON.parse = function(a) {
//         try {
//             var c = (p ? JSON.parse : g)(a)
//         } catch (t) {
//             c = {}
//         }
//         return c
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log("[loading] contexthub.constants - ContextHub.constants.js");
// (function(d) {
//     ContextHub.Constants = d.extend(!0, ContextHub.Constants, {
//         EVENT_NAMESPACE: "ch",
//         EVENT_ALL_STORES_READY: "all-stores-ready",
//         EVENT_STORES_PARTIALLY_READY: "stores-partially-ready",
//         EVENT_STORE_REGISTERED: "store-registered",
//         EVENT_STORE_READY: "store-ready",
//         EVENT_STORE_UPDATED: "store-updated",
//         PERSISTENCE_CONTAINER_NAME: "ContextHubPersistence",
//         SERVICE_RAW_RESPONSE_KEY: "/_/raw-response",
//         SERVICE_RESPONSE_TIME_KEY: "/_/response-time",
//         SERVICE_LAST_URL_KEY: "/_/url",
//         IS_CONTAINER_EXPANDED: "/_/container-expanded"
//     });
//     ContextHub.console.time("contexthub.js");
//     ContextHub.console.timeStamp("contexthub.start")
// }
// )(ContextHubJQ);
// ContextHub.console.log("[loading] contexthub.constants - ContextHub.constants.deprecated.js");
// (function(d) {
//     window.ContextHub = window.ContextHub || {};
//     ContextHub.Constants = d.extend(!0, ContextHub.Constants, {
//         EVENT_INITIALIZED: ContextHub.Constants.EVENT_ALL_STORES_READY,
//         EVENT_REGISTER: ContextHub.Constants.EVENT_STORE_REGISTERED,
//         EVENT_DATA_UPDATE: ContextHub.Constants.EVENT_STORE_UPDATED,
//         CONTAINER_VISIBLE: ContextHub.Constants.IS_CONTAINER_EXPANDED,
//         EVENT_CONFIG_LOADED: ""
//     })
// }
// )(ContextHubJQ);
// (function(d, k) {
//     k.ContextHub.Shared = k.ContextHub.Shared || {};
//     ContextHub.Shared.pad = function(a, c) {
//         a = String(a);
//         c = (c || 2) - a.length;
//         0 < c && (a = String(Math.pow(10, Math.min(c, 20))).slice(1) + a);
//         return a
//     }
//     ;
//     var f = {};
//     ContextHub.Shared.timers = {
//         start: function(a) {
//             a = a || "id" + Math.random();
//             f[a] = (new Date).getTime();
//             return a
//         },
//         finish: function(a) {
//             return (a = f[a]) ? (new Date).getTime() - a : 0
//         }
//     };
//     ContextHub.Shared.timestamp = function() {
//         var a = new Date
//           , c = a.getYear() + 1900
//           , d = ContextHub.Shared.pad(a.getMonth() + 1)
//           , f = ContextHub.Shared.pad(a.getDate())
//           , k = ContextHub.Shared.pad(a.getHours())
//           , m = ContextHub.Shared.pad(a.getMinutes())
//           , t = ContextHub.Shared.pad(a.getSeconds());
//         a = ContextHub.Shared.pad(a.getMilliseconds(), 3);
//         return c + "-" + d + "-" + f + " " + k + ":" + m + ":" + t + "." + a
//     }
//     ;
//     ContextHub.Shared.uuid = function() {
//         function a() {
//             return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
//         }
//         return a() + a() + "-" + a() + "-" + a() + "-" + a() + "-" + a() + a() + a()
//     }
//     ;
//     ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.shared - ContextHub.Shared.js")
// }
// )(ContextHubJQ, window);
// ContextHubJQ(function() {
//     ContextHub.console.log(ContextHub.Shared.timestamp(), "[event] DOM ready")
// });
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.shared - ContextHub.Shared.CookieContainer.js");
// (function(d, k) {
//     k.ContextHub.Shared = k.ContextHub.Shared || {};
//     k.ContextHub.Shared.CookieContainer = {};
//     var f = k.ContextHub.Shared.CookieContainer
//       , a = function(a) {
//         a = (ContextHub.Utils.Cookie.getItem(d.trim(a)) || "").split(/\|/);
//         var c = {};
//         d.each(a, function(a, d) {
//             (d = d.match(/(^.*?):=(.*)/)) && 3 === d.length && (d.shift(),
//             a = d.shift(),
//             d = d.shift(),
//             c[a] = decodeURIComponent(d))
//         });
//         return c
//     };
//     f.setItem = function(c, g, f) {
//         c = d.trim(c);
//         var k = a(c)
//           , m = [];
//         0 >= c.length || (null === f || "undefined" === typeof f ? delete k[g] : k[g] = f,
//         d.each(k, function(a, c) {
//             m.push(a + ":\x3d" + encodeURIComponent(c))
//         }),
//         ContextHub.Utils.Cookie.setItem(c, m.join("|")))
//     }
//     ;
//     f.getItem = function(c, d) {
//         return a(c)[d]
//     }
//     ;
//     f.removeItem = function(a, d) {
//         f.setItem(a, d, null)
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.utils - ContextHub.Utils.cookie.js");
// (function(d, k) {
//     k.ContextHub.Utils = k.ContextHub.Utils || {};
//     var f = {
//         path: "/",
//         expires: void 0,
//         domain: void 0,
//         secure: !1,
//         trimUndefined: !0
//     }
//       , a = function(c, g) {
//         var f = d.type(g);
//         "object" === f && d.isArray(g) && (f = "array");
//         switch (f) {
//         case "regexp":
//             return g.test(c);
//         case "string":
//             return c === g;
//         case "function":
//             return !0 === g(c);
//         case "array":
//             var k = !1;
//             d(g).each(function(d, g) {
//                 k = a(c, g);
//                 return !k
//             });
//             return k;
//         default:
//             return !1
//         }
//     }
//       , c = function(c) {
//         var g = "undefined" === typeof c
//           , f = k.document.cookie ? k.document.cookie.split(/;/) : []
//           , m = [];
//         d(f).each(function(f, k) {
//             f = decodeURIComponent(d.trim(k.split(/=/)[0]));
//             f.length && -1 === d.inArray(f, m) && (g || a(f, c)) && m.push(f)
//         });
//         return m.sort()
//     }
//       , g = function(a, c, g) {
//         if ("undefined" === typeof a)
//             return !1;
//         var m = d.type(c);
//         g = d.extend(!0, {}, f, g);
//         c = !g.trimUndefined || "undefined" !== m && "null" !== m ? c : "";
//         switch (d.type(g.expires)) {
//         case "date":
//             break;
//         case "number":
//             m = new Date;
//             m.setDate(m.getDate() + g.expires);
//             g.expires = m;
//             break;
//         default:
//             g.expires = void 0
//         }
//         a = [encodeURIComponent(a), "\x3d", encodeURIComponent(c), g.expires ? "; expires\x3d" + g.expires.toUTCString() : "", g.domain ? "; domain\x3d" + g.domain : "", g.path ? "; path\x3d" + g.path : "", g.secure ? "; secure" : ""].join("");
//         return k.document.cookie = a
//     }
//       , p = function(a) {
//         var c = k.document.cookie ? k.document.cookie.split(/;/) : []
//           , g = null;
//         d(c).each(function(c, f) {
//             c = decodeURIComponent(d.trim(f.split(/=/).slice(1).join("\x3d")));
//             decodeURIComponent(d.trim(f.split(/=/)[0])) === a && (g = c);
//             return null === g
//         });
//         return g
//     }
//       , n = function(a, c) {
//         g(a, "", d.extend({}, c, {
//             expires: -1
//         }))
//     };
//     ContextHub.Utils.Cookie = {
//         setItem: g,
//         getItem: p,
//         getAllItems: function(a) {
//             var g = {};
//             d(c(a)).each(function(a, c) {
//                 a = p(c);
//                 var f = d.type(a);
//                 "undefined" !== f && "null" !== f && (g[c] = a)
//             });
//             return g
//         },
//         getKeys: c,
//         exists: function(a) {
//             return null !== p(a)
//         },
//         removeItem: n,
//         vanish: function(a, g) {
//             d(c(a)).each(function(a, c) {
//                 n(c, g)
//             })
//         }
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.utils - ContextHub.Utils.json.js");
// (function(d, k) {
//     k.ContextHub.Utils = k.ContextHub.Utils || {};
//     var f = function(a) {
//         var c = null;
//         "string" === typeof a && (c = a.split(/(?:\s*\/+\s*)+/),
//         "" === c[0] && c.shift(),
//         c.length && "" === c[c.length - 1] && c.pop());
//         return c
//     }
//       , a = function(a, c) {
//         var d = null;
//         if (c = f(c))
//             for (d = a,
//             a = 0; a < c.length; a++)
//                 if (d = d[c[a]],
//                 null === d || "undefined" === typeof d) {
//                     d = null;
//                     break
//                 }
//         return d
//     }
//       , c = function(a, c, g) {
//         c = f(c);
//         g && (a = d.extend(!0, {}, a));
//         if (c) {
//             var k = {
//                 object: !0,
//                 array: !0
//             }
//               , p = a
//               , m = [a];
//             d.each(c.slice(0, -1), function(a, c) {
//                 p = p[c];
//                 m.push(p);
//                 return !0 === k[d.type(p)]
//             });
//             if (p)
//                 for (delete p[c.slice(-1)],
//                 c.pop(),
//                 m.pop(); m && c && 0 < m.length && 0 < c.length; ) {
//                     g = c.pop();
//                     p = m.pop();
//                     var n = p[g]
//                       , r = d.type(n);
//                     if ("object" !== r && "array" !== r || !d.isEmptyObject(n))
//                         break;
//                     else
//                         delete p[g]
//                 }
//         }
//         return a
//     }
//       , g = /^\[object (DIV|DOM|CSS|HTML|NamedNode|Node|Window)/
//       , p = function(a) {
//         return a && (a instanceof k.Node || a instanceof d || "function" === typeof a.css || "function" === typeof a.toString && g.test(a.toString())) ? !0 : !1
//     }
//       , n = function(a, c, g, f, k) {
//         c = c || "/";
//         k = k || 0;
//         var m = []
//           , r = d.type(a);
//         "object" === r && p(a) && (r = "invalid");
//         if ("object" === r || "array" === r) {
//             f && (a = ContextHub.Utils.JSON.tree.cleanup(a));
//             for (var u in a)
//                 if (a.hasOwnProperty(u)) {
//                     r = a[u];
//                     var t = c + u
//                       , z = d.type(r);
//                     m.push(t);
//                     "object" === z && p(r) && (z = "invalid");
//                     "object" !== z && "array" !== z || d.merge(m, n(r, t + "/", null, f, k + 1))
//                 }
//         }
//         return 0 === k ? "function" === typeof g ? m.sort(g) : m.sort() : m
//     };
//     d.extend(ContextHub.Utils.JSON, {
//         tree: {
//             sanitizeKey: f,
//             setItem: function(a, c, g, k) {
//                 c = f(c);
//                 k && (a = d.extend(!0, {}, a));
//                 if (c) {
//                     var p = a
//                       , m = {};
//                     d.each(c, function(a, c) {
//                         m = p;
//                         a = d.type(p[c]);
//                         "object" !== a && "array" !== a && (p[c] = {});
//                         p = p[c]
//                     });
//                     m[c.slice(-1)] = g
//                 }
//                 return a
//             },
//             getItem: a,
//             removeItem: c,
//             getKeys: n,
//             cleanup: function(g, f) {
//                 f && (g = d.extend(!0, {}, g));
//                 f = n(g, null, function(a, c) {
//                     var d = a.split(/\//).length
//                       , g = c.split(/\//).length;
//                     return d !== g ? d > g ? -1 : 1 : a === c ? 0 : a > c ? 1 : -1
//                 });
//                 d.each(f, function(f, k) {
//                     f = a(g, k);
//                     var p = d.type(f);
//                     "object" !== p && "array" !== p || !d.isEmptyObject(f) || (g = c(g, k))
//                 });
//                 return g
//             },
//             addAllItems: function(a, c) {
//                 return d.extend(!0, {}, a, c)
//             }
//         }
//     })
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.utils - ContextHub.Utils.eventing.js");
// (function(d, k) {
//     k.ContextHub.Utils = k.ContextHub.Utils || {};
//     var f = function() {
//         var a = d.grep([k.requestAnimationFrame, k.msRequestAnimationFrame, k.mozRequestAnimationFrame, k.webkitRequestAnimationFrame, k.oRequestAnimationFrame], d.isFunction).shift();
//         if (!a) {
//             var c = 0;
//             a = function(a) {
//                 var d = (new Date).getTime()
//                   , g = Math.max(0, 16 - (d - c))
//                   , f = k.setTimeout(function() {
//                     a(d + g)
//                 }, g);
//                 c = d + g;
//                 return f
//             }
//         }
//         return a
//     }();
//     (function() {
//         var a = d.grep([k.cancelAnimationFrame, k.cancelRequestAnimationFrame, k.msCancelRequestAnimationFrame, k.mozCancelRequestAnimationFrame, k.webkitCancelRequestAnimationFrame, k.oCancelRequestAnimationFrame], d.isFunction).shift();
//         a || (a = function(a) {
//             k.clearTimeout(a)
//         }
//         );
//         return a
//     }
//     )();
//     var a = {}
//       , c = {}
//       , g = function(a, c, g) {
//         a = (a || "").replace(/^ *| *$/g, "");
//         if (a.length) {
//             g = g || {};
//             g.hasOwnProperty("defer") || (g.defer = this.config.defer);
//             var f = g.defer;
//             g = g._ || {};
//             a = "/" + this.config.namespace + "/" + a;
//             var k = ContextHub.Utils.JSON.tree.getItem(this.queue, a) || {};
//             k.hasOwnProperty("executeAt") || (k.executeAt = null);
//             k.hasOwnProperty("data") || (k.data = []);
//             for (var p in g)
//                 g.hasOwnProperty(p) && "undefined" === typeof k[p] && (k[p] = g[p]);
//             p = (new Date).getTime() + f;
//             if (!k.executeAt || 0 === f || k.executeAt > p)
//                 k.executeAt = p;
//             d.isEmptyObject(c) || k.data.push(c);
//             this.queue = ContextHub.Utils.JSON.tree.setItem(this.queue, a, k);
//             this.eventingCounter = f ? this.eventingCounter : 0;
//             c = !0 === this.queueIsEmpty;
//             this.queueIsEmpty = !1;
//             c && this.eventingMonitor()
//         }
//     }
//       , p = function() {
//         return this.queue
//     }
//       , n = function(a, c) {
//         a.list.push(c.key);
//         a.hash[c.key] = c
//     }
//       , m = function(a) {
//         for (var c = d.extend(!0, {}, a, {
//             data: []
//         }), g = {}, f = function(a, c, f) {
//             var k = a.key || "temp" + Math.random()
//               , p = g[k]
//               , m = (p || {}).old || null;
//             g[k] = d.extend(!0, {}, a);
//             g[k]._idx = parseFloat(c + "." + (f || 0));
//             p && (g[k].old = m)
//         }, k = 0; k < a.data.length; k++) {
//             var p = a.data[k]
//               , m = ContextHub.Utils.JSON.tree.getKeys(p.old)
//               , r = ContextHub.Utils.JSON.tree.getKeys(p.value);
//             if (m.length || r.length) {
//                 var u = "/" === p.key ? "" : p.key, t = 1, z;
//                 for (z = 0; z < m.length; z++,
//                 t++) {
//                     var y = m[z];
//                     f({
//                         key: u + y,
//                         value: null,
//                         old: ContextHub.Utils.JSON.tree.getItem(p.old, y),
//                         action: "remove"
//                     }, k, t)
//                 }
//                 for (z = 0; z < r.length; z++,
//                 t++)
//                     y = r[z],
//                     f({
//                         key: u + y,
//                         value: ContextHub.Utils.JSON.tree.getItem(p.value, y),
//                         old: ContextHub.Utils.JSON.tree.getItem(p.old || {}, y),
//                         action: "set"
//                     }, k, t)
//             } else
//                 m = !(!p.key || !p.action) && !/^\/_\//.test(p.key),
//                 r = g[p.key] || {},
//                 m && r.old === p.value ? delete g[p.key] : f(p, k)
//         }
//         g = d.map(g, function(a) {
//             return a
//         }).sort(function(a, c) {
//             return a._idx - c._idx
//         });
//         a = {
//             set: {
//                 list: [],
//                 hash: {}
//             },
//             removed: {
//                 list: [],
//                 hash: {}
//             },
//             all: {
//                 list: [],
//                 hash: {}
//             }
//         };
//         d.each(g, function(a, c) {
//             delete c._idx;
//             c.key && c.action && (n(this.keys.all, c),
//             "set" === c.action && n(this.keys.set, c),
//             "remove" === c.action && n(this.keys.removed, c))
//         }
//         .bind({
//             keys: a
//         }));
//         c.data = g;
//         c.keys = a;
//         return c
//     }
//       , t = function(c) {
//         0 !== c.indexOf(this.config.namespace + "-") && (c = this.config.namespace + "-" + c);
//         -1 !== c.indexOf(".") && (c = c.split(/\./).shift());
//         return !0 === a[c]
//     }
//       , r = function() {
//         this.running && !this.queueIsEmpty && (0 === this.eventingCounter++ % this.periodicity && d.each(this.queue[this.config.namespace] || {}, function(c, g) {
//             if (!g.paused && (new Date).getTime() > g.executeAt) {
//                 var f = this.config.namespace + "-" + c
//                   , p = g.duration ? "(" + g.duration + ") " : ""
//                   , n = ContextHub.debug()
//                   , r = d(this.config.broadcast);
//                 if (!this.windowBroadcast.initialized) {
//                     var u = k;
//                     var t = k.parent;
//                     try {
//                         for (; u.location.origin === t.location.origin && (u = t,
//                         t = t.parent,
//                         u !== k.top); )
//                             ;
//                     } catch (ma) {}
//                     try {
//                         this.windowBroadcast.top = this.config.broadcast === u ? null : u
//                     } catch (ma) {}
//                     this.windowBroadcast.initialized = !0
//                 }
//                 u = this.windowBroadcast.top;
//                 g = m(g);
//                 g.event = f;
//                 g.overlay && (g = d.extend(!0, g, g.overlay));
//                 delete (this.queue[this.config.namespace] || {})[c];
//                 this.queueIsEmpty = d.isEmptyObject(this.queue[this.config.namespace]);
//                 if (!g.muteWhenNoData || g.muteWhenNoData && 0 < g.data.length) {
//                     t = f.split(/:/);
//                     c = c.split(/:/);
//                     for (var z = t.length; 0 < z; z--) {
//                         g.channel = c.slice(0, z).join(":");
//                         var y = t.slice(0, z).join(":");
//                         r.trigger(y, g);
//                         if (u && u.document) {
//                             var F = u.document.createEvent("Event");
//                             F.initEvent(y, !0, !0);
//                             F.data = g;
//                             u.dispatchEvent(F)
//                         }
//                         n && ContextHub.console.debug(ContextHub.Shared.timestamp(), y, "-", g);
//                         a[y] = !0
//                     }
//                     ContextHub.console.log(ContextHub.Shared.timestamp(), "[event]", f, p + "-", g)
//                 }
//             }
//         }
//         .bind(this)),
//         f(this.eventingMonitor))
//     }
//       , u = function() {
//         this.running = !0;
//         this.eventingMonitor()
//     }
//       , z = function() {
//         this.running = !1
//     }
//       , I = function() {
//         return this.running
//     }
//       , y = function() {
//         this.queue = {}
//     }
//       , F = function(a, c, g) {
//         this.queue = ContextHub.Utils.JSON.tree.setItem(this.queue, "/" + this.config.namespace + "/" + a + "/" + c, g)
//     }
//       , T = function(a) {
//         F.call(this, a, "executeAt", 0)
//     }
//       , ia = function(a) {
//         F.call(this, a, "paused", !0)
//     }
//       , G = function(a) {
//         F.call(this, a, "paused", void 0)
//     }
//       , D = function(a) {
//         return !0 === ContextHub.Utils.JSON.tree.getItem(this.queue, "/" + this.config.namespace + "/" + a + "/paused")
//     }
//       , ba = function(a, c, g) {
//         g = g ? "." + g : "";
//         a = "string" === typeof a ? a.split(/ /) : a;
//         for (var d = 0; d < a.length; d++) {
//             var f = a[d];
//             0 !== f.indexOf(c + "-") && (a[d] = c + "-" + f + g)
//         }
//         return a.join(" ")
//     }
//       , M = function(a, g, f, k) {
//         a = ba(a, this.config.namespace, f);
//         d(this.config.broadcast).on(a, g);
//         c[a] = !0;
//         if (k) {
//             var p = !1
//               , m = this;
//             d.each(a.split(/ /), function(a, c) {
//                 p = t.call(m, c);
//                 return !0 !== p
//             });
//             p && g()
//         }
//     }
//       , A = function(a, g, f, k) {
//         var p = !1;
//         a = ba(a, this.config.namespace, f);
//         if (k) {
//             var m = this;
//             d.each(a.split(/ /), function(a, c) {
//                 p = t.call(m, c);
//                 return !0 !== p
//             })
//         }
//         p ? g() : (d(this.config.broadcast).one(a, g),
//         c[a] = !0)
//     }
//       , L = function(a, g) {
//         a = ba(a, this.config.namespace, g);
//         d(this.config.broadcast).off(a);
//         delete c[a]
//     }
//       , Sa = function() {
//         for (var a in c)
//             c.hasOwnProperty(a) && ContextHub.eventing.off(a);
//         c = {}
//     };
//     ContextHub.Utils.Eventing = function(a) {
//         this.config = d.extend(!0, {}, ContextHub.Utils.Eventing.defaultConfig, a);
//         this.eventingCounter = 0;
//         this.periodicity = Math.floor(Math.max(16, this.config.periodicity) / 16);
//         this.eventingMonitor = r.bind(this);
//         this.windowBroadcast = {
//             top: null,
//             initialized: !1
//         };
//         this.queue = {};
//         this.config.autoStart ? u.call(this) : this.running = !1;
//         return {
//             log: this.log,
//             trigger: g.bind(this),
//             getQueue: p.bind(this),
//             isRunning: I.bind(this),
//             enableEventing: u.bind(this),
//             disableEventing: z.bind(this),
//             alreadyTriggered: t.bind(this),
//             clearQueue: y.bind(this),
//             flush: T.bind(this),
//             pause: ia.bind(this),
//             resume: G.bind(this),
//             isPaused: D.bind(this),
//             once: A.bind(this),
//             on: M.bind(this),
//             off: L.bind(this),
//             unbindAllHandlers: Sa.bind(this),
//             namespace: this.config.namespace,
//             broadcast: this.config.broadcast,
//             handledEvents: c
//         }
//     }
//     ;
//     ContextHub.Utils.Eventing.defaultConfig = {
//         autoStart: !0,
//         defer: 100,
//         periodicity: 192,
//         namespace: ContextHub.Constants.EVENT_NAMESPACE,
//         broadcast: k
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.utils - ContextHub.Utils.persistence.js");
// (function(d, k) {
//     function f(a, c, g) {
//         this.cachedTree = null;
//         return d.extend(!0, {}, {
//             name: a,
//             isSupported: g || function() {
//                 return !0
//             }
//             ,
//             getInterface: function(g) {
//                 g = c.call(this, g);
//                 return {
//                     name: a,
//                     getItem: g.getItem,
//                     setItem: g.setItem,
//                     removeItem: g.removeItem,
//                     getKeys: g.getKeys,
//                     getTree: g.getTree
//                 }
//             },
//             _self: this
//         })
//     }
//     k.ContextHub.Utils = k.ContextHub.Utils || {};
//     var a = /^\/*store($|\/)/
//       , c = /^\/*store\/(emulators|surferinfo|segmentation)($|\/)/;
//     f.prototype.setItem = function(g, d, f, k) {
//         if ((f || "").match(a) && !(f || "").match(c) && ContextHub.isOptedOut())
//             return !1;
//         d = this.cachedTree || d();
//         d = ContextHub.Utils.JSON.tree.setItem(d, f, k);
//         g(d);
//         this.cachedTree = d;
//         return !0
//     }
//     ;
//     f.prototype.getItem = function(a, c) {
//         this.cachedTree = a = this.cachedTree || a();
//         return ContextHub.Utils.JSON.tree.getItem(a, c)
//     }
//     ;
//     f.prototype.removeItem = function(g, d, f) {
//         if ((f || "").match(a) && !(f || "").match(c) && ContextHub.isOptedOut())
//             return !1;
//         d = this.cachedTree || d();
//         d = ContextHub.Utils.JSON.tree.removeItem(d, f);
//         g(d);
//         this.cachedTree = null;
//         return !0
//     }
//     ;
//     var g = new f("null",function() {
//         return {
//             setItem: function() {
//                 return !1
//             },
//             getItem: function() {
//                 return {}
//             },
//             removeItem: function() {},
//             getKeys: function() {
//                 return []
//             },
//             getTree: function() {
//                 return {}
//             }
//         }
//     }
//     )
//       , p = function() {
//         var a = !1;
//         d(d.merge([this.config.mode], this.config.fallback || [])).each(function(c, g) {
//             g && g.isSupported() && (a = !0,
//             this.config.mode = g);
//             return !a
//         }
//         .bind(this));
//         a || (this.config.mode = g);
//         return a
//     };
//     ContextHub.Utils.Persistence = function(a) {
//         this.config = d.extend(!0, {}, ContextHub.Utils.Persistence.defaultConfig, a);
//         a = this.config.mode;
//         a = {
//             initialized: p.call(this),
//             usingFallback: this.config.mode !== a,
//             window: this.config.window,
//             container: this.config.container
//         };
//         d.extend(a, this.config.mode.getInterface.call(this.config.mode._self, this.config));
//         return a
//     }
//     ;
//     ContextHub.Utils.Persistence.prototype.PersistenceMode = f;
//     ContextHub.Utils.Persistence.Modes = {};
//     var n = function(a, c) {
//         var g = f.prototype.setItem.bind(this, a, c)
//           , d = f.prototype.getItem.bind(this, c);
//         a = f.prototype.removeItem.bind(this, a, c);
//         return {
//             setItem: g,
//             getItem: d,
//             removeItem: a,
//             getKeys: function() {
//                 var a = c();
//                 return ContextHub.Utils.JSON.tree.getKeys(a)
//             },
//             getTree: c
//         }
//     };
//     ContextHub.Utils.Persistence.Modes.LOCAL = new f("local",function(a) {
//         var c = a.container
//           , g = a.window.localStorage;
//         return n.call(this, function(a) {
//             a = ContextHub.Utils.JSON.stringify(a);
//             g.setItem(c, a)
//         }, function() {
//             var a = null;
//             try {
//                 a = g.getItem(c)
//             } catch (z) {
//                 a = null
//             }
//             a = ContextHub.Utils.JSON.parse(a);
//             return "object" === d.type(a) ? a : {}
//         })
//     }
//     ,function() {
//         var a = "contexthub.test." + this.name;
//         try {
//             var c = k.localStorage;
//             c.setItem(a, a);
//             var g = c.getItem(a) === a;
//             c.removeItem(a)
//         } catch (u) {
//             g = !1
//         }
//         return g
//     }
//     );
//     ContextHub.Utils.Persistence.Modes.SESSION = new f("session",function(a) {
//         var c = a.container
//           , g = a.window.sessionStorage;
//         return n.call(this, function(a) {
//             a = ContextHub.Utils.JSON.stringify(a);
//             g.setItem(c, a)
//         }, function() {
//             var a = g.getItem(c);
//             a = ContextHub.Utils.JSON.parse(a);
//             return "object" === d.type(a) ? a : {}
//         })
//     }
//     ,function() {
//         var a = "contexthub.test." + this.name;
//         try {
//             var c = k.sessionStorage;
//             c.setItem(a, a);
//             var g = c.getItem(a) === a;
//             c.removeItem(a)
//         } catch (u) {
//             g = !1
//         }
//         return g
//     }
//     );
//     ContextHub.Utils.Persistence.Modes.COOKIE = new f("cookie",function(a) {
//         var c = a.container
//           , g = ContextHub.Utils.Cookie;
//         return n.call(this, function(a) {
//             a = ContextHub.Utils.JSON.stringify(a);
//             g.setItem(c, a)
//         }, function() {
//             var a = g.getItem(c);
//             a = ContextHub.Utils.JSON.parse(a);
//             return "object" === d.type(a) ? a : {}
//         })
//     }
//     ,function() {
//         var a = "contexthub.test." + this.name;
//         k.document.cookie = a + "\x3d1";
//         var c = -1 !== k.document.cookie.indexOf(a);
//         k.document.cookie = a + "\x3d; expires\x3dThu, 01-Jan-1970 00:00:01 GMT";
//         return c
//     }
//     );
//     ContextHub.Utils.Persistence.Modes.WINDOW = new f("window",function(a) {
//         var c = a.container
//           , g = a.window;
//         return n.call(this, function(a) {
//             var d = ContextHub.Utils.JSON.parse(g.name);
//             d[c] = a;
//             g.name = ContextHub.Utils.JSON.stringify(d)
//         }, function() {
//             var a = ContextHub.Utils.JSON.parse(g.name)[c];
//             return "object" === d.type(a) ? a : {}
//         })
//     }
//     );
//     ContextHub.Utils.Persistence.defaultConfig = {
//         container: ContextHub.Constants.PERSISTENCE_CONTAINER_NAME,
//         window: k,
//         mode: ContextHub.Utils.Persistence.Modes.LOCAL,
//         fallback: [ContextHub.Utils.Persistence.Modes.SESSION, ContextHub.Utils.Persistence.Modes.WINDOW]
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.utils - ContextHub.Utils.storeCandidates.js");
// (function(d, k) {
//     k.ContextHub.Utils = k.ContextHub.Utils || {};
//     var f = {}
//       , a = function() {
//         return !0
//     };
//     ContextHub.Utils.storeCandidates = {
//         registerStoreCandidate: function(c, g, d, k) {
//             c = {
//                 store: c,
//                 priority: d,
//                 applies: k || a
//             };
//             f[g] = f[g] || [];
//             g = f[g];
//             g.push(c);
//             g.sort(function(a, c) {
//                 return c.priority - a.priority
//             })
//         },
//         getStoreFromCandidates: function(a) {
//             var c = f[a.type] || [], d;
//             for (d = 0; d < c.length; d++) {
//                 var k = c[d];
//                 if (k.applies(k.store, k.priority))
//                     return k.store
//             }
//             !0 === a.required && ContextHub.console.error('No suitable store implementation found for type: "' + a.type + '".')
//         },
//         getRegisteredCandidates: function(a) {
//             var c = f;
//             a && (c = c[a] || []);
//             return c
//         },
//         getSupportedStoreTypes: function() {
//             var a = [];
//             d.each(f, function(c) {
//                 a.push(c)
//             });
//             return a.sort()
//         }
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.utils - ContextHub.Utils.inheritance.js");
// (function(d) {
//     d.ContextHub.Utils = d.ContextHub.Utils || {};
//     ContextHub.Utils.inheritance = {
//         inherit: function(d, f) {
//             d.prototype = new f;
//             d.prototype.constructor = f;
//             var a = {}, c;
//             d.prototype.uber = function(g) {
//                 a[g] = a[g] || 0;
//                 var d, k, m;
//                 if (d = a[g]) {
//                     for (m = f.prototype; d; )
//                         m = m.constructor.prototype,
//                         d--;
//                     m && m[g] === c && (m = m.constructor.prototype || {});
//                     d = m[g]
//                 } else {
//                     for (m = this; m && !m.hasOwnProperty(g); )
//                         m = m.__proto__ || m.constructor.prototype;
//                     d = m[g];
//                     d === this[g] && (d = (m.__proto__ || m.constructor.prototype)[g])
//                 }
//                 a[g]++;
//                 c = d;
//                 "function" === typeof d && (k = d.apply(this, Array.prototype.slice.apply(arguments, [1])));
//                 c = null;
//                 a[g]--;
//                 return k
//             }
//             ;
//             return d
//         },
//         newInstance: function(d, f) {
//             return new (d.bind.apply(d, [null].concat([].slice.call(f))))
//         }
//     }
// }
// )(window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.kernel - ContextHub.js");
// (function(d, k) {
//     "undefined" === typeof k.ContextHubKernelConfig && ContextHub.console.error("[-] ContextHub configuration is not set!");
//     k.ContextHub = d.extend({
//         version: "0.4.23-20191025-1539"
//     }, k.ContextHub);
//     var f = {}
//       , a = []
//       , c = []
//       , g = new ContextHub.Utils.Persistence
//       , p = new ContextHub.Utils.Eventing(k.ContextHubKernelConfig.eventing)
//       , n = null
//       , m = function(a) {
//         var c = ContextHub.persistence
//           , g = ContextHub.Utils.JSON.tree.sanitizeKey(a);
//         if (g) {
//             var d = g.shift();
//             "store" === d && (d = g.shift());
//             if (d = ContextHub.getStore(d))
//                 c = d,
//                 a = "/" + g.join("/")
//         }
//         return {
//             storage: c,
//             storeProperty: a
//         }
//     }
//       , t = function(a) {
//         var c = {}
//           , g = 0
//           , f = [];
//         d.each(a, function(a, d) {
//             d && (a = ContextHub.Utils.JSON.tree.sanitizeKey(d),
//             "store" === a[0] ? d = "/" + a.slice(1).join("/") : a.unshift("store"),
//             a = "/" + a.join("/"),
//             a = ContextHub.getItem(a),
//             null !== a && (g++,
//             c = ContextHub.Utils.JSON.tree.setItem(c, d, a),
//             f.push(d)))
//         });
//         c._length = g;
//         c._keys = f;
//         return c
//     };
//     d.extend(ContextHub, {
//         persistence: g,
//         eventing: p,
//         registerStore: function(a, c) {
//             if ("object" === d.type(c) && (f = f || {},
//             !f[a])) {
//                 f[a] = c;
//                 ContextHub.console.timeStamp('registering "' + a + '"');
//                 var g = c.getKeys()
//                   , k = {
//                     keys: {
//                         all: {
//                             hash: {},
//                             list: g
//                         }
//                     }
//                 };
//                 d.each(g, function(a, c) {
//                     k.keys.all.hash[c] = !0
//                 });
//                 this.eventing.trigger(ContextHub.Constants.EVENT_STORE_REGISTERED + ":" + a, {}, {
//                     defer: 0,
//                     _: {
//                         action: "store-registered",
//                         store: a,
//                         registeredAt: (new Date).getTime(),
//                         overlay: k
//                     }
//                 });
//                 c.queryService || c.announceReadiness()
//             }
//         },
//         getAllStores: function() {
//             return f
//         },
//         getStore: function(a) {
//             return "string" === d.type(a) && a.length ? ContextHub.Utils.JSON.tree.getItem(f, a) : null
//         },
//         set: function(a, c) {
//             this.setItem("/store/" + a, c)
//         },
//         get: function(a) {
//             return this.getItem("/store/" + a)
//         },
//         getItem: function(a) {
//             a = m(a);
//             return a.storage.getItem(a.storeProperty)
//         },
//         setItem: function(a, c) {
//             a = m(a);
//             a.storage.setItem(a.storeProperty, c)
//         },
//         removeItem: function(a) {
//             a = m(a);
//             a.storage.removeItem(a.storeProperty)
//         },
//         cleanAllStores: function() {
//             var a = p.isPaused();
//             this.eventing.pause();
//             d.each(f, function(a, c) {
//                 c.clean()
//             });
//             a || this.eventing.resume()
//         },
//         resetAllStores: function(a) {
//             var c = p.isPaused();
//             ContextHub.isOptedOut(!0);
//             ContextHub.eventing.pause();
//             d.each(f, function(c, g) {
//                 g.reset(a)
//             });
//             c || ContextHub.eventing.resume()
//         },
//         sync: function(c, g, f, p) {
//             "string" === d.type(c) && (c = [c]);
//             var n = [];
//             d.each(c, function(a, c) {
//                 a = "/" + ContextHub.Utils.JSON.tree.sanitizeKey(c).join("/");
//                 n.push(a)
//             });
//             c = n;
//             g = g || function() {}
//             ;
//             f = f || function() {}
//             ;
//             var m = t(c);
//             if (m._length === c.length)
//                 g(m);
//             else {
//                 var r = 0
//                   , u = !1;
//                 m = function(a) {
//                     if (u)
//                         return !0;
//                     var p = t(c)
//                       , n = null;
//                     "undefined" === d.type(a) && (n = f);
//                     p._length === c.length && (n = g,
//                     k.clearTimeout(r));
//                     n && (u = !0,
//                     n(p));
//                     return u
//                 }
//                 ;
//                 r = k.setTimeout(m, p);
//                 a.push(m)
//             }
//         },
//         bind: function(a, g, f, p) {
//             "string" === d.type(a) && (a = [a]);
//             var n = [];
//             d.each(a, function(a, c) {
//                 a = "/" + ContextHub.Utils.JSON.tree.sanitizeKey(c).join("/");
//                 n.push(a)
//             });
//             a = n;
//             g = g || function() {}
//             ;
//             f = f || function() {}
//             ;
//             var m = t(a)
//               , r = !0;
//             m._length === a.length && (r = !1,
//             g(m));
//             var u = 0;
//             m = function(c, p) {
//                 if (p) {
//                     var n = {};
//                     c = !0;
//                     d.each(p, function(a) {
//                         n = ContextHub.Utils.JSON.tree.setItem(n, a, !0)
//                     });
//                     for (p = 0; p < a.length; p++)
//                         if (ContextHub.Utils.JSON.tree.getItem(n, a[p])) {
//                             c = !1;
//                             break
//                         }
//                     if (c)
//                         return
//                 }
//                 p = t(a);
//                 c = f;
//                 p._length === a.length && (c = g,
//                 k.clearTimeout(u));
//                 c(p)
//             }
//             ;
//             r && (u = k.setTimeout(m, p));
//             c.push(m)
//         },
//         isOptedOut: function(a) {
//             a && (n = null);
//             null === n && (n = null !== ContextHub.Utils.Cookie.getItem("cq-opt-out"));
//             return n
//         }
//     });
//     ContextHub.eventing.on(ContextHub.Constants.EVENT_STORE_UPDATED, function(g, f) {
//         d.each(a || [], function(c, g) {
//             g && g(c) && (delete a[c],
//             a = d.grep(a, d.isFunction))
//         });
//         if ((c || []).length) {
//             var k = {};
//             f.keys && d.each(f.keys.all.list, function(a, c) {
//                 k["/" + f.store + c] = !0
//             });
//             d.each(c || [], function(a, c) {
//                 c && c(a, k)
//             })
//         }
//     }, "sync-bind")
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.kernel - task.stores-initialization-watcher.js");
// (function(d, k) {
//     var f = {}
//       , a = k.setTimeout(function() {
//         var a = {};
//         d.each(k.ContextHubKernelConfig.stores, function(c) {
//             f[c] || (a[c] = !0)
//         });
//         ContextHub.eventing.trigger(ContextHub.Constants.EVENT_STORES_PARTIALLY_READY, {}, {
//             defer: 0,
//             _: {
//                 wasReadyAt: (new Date).getTime(),
//                 storesReady: f,
//                 storesNotReady: a
//             }
//         });
//         ContextHub.eventing.off(ContextHub.Constants.EVENT_STORE_READY, "initialization-watcher")
//     }, k.ContextHubKernelConfig.initializationTimeout);
//     ContextHub.eventing.on(ContextHub.Constants.EVENT_STORE_READY, function(c, g) {
//         var p = f[g.store] = !0;
//         d.each(k.ContextHubKernelConfig.stores, function(a, c) {
//             !f[a] && c.required && (p = !1)
//         });
//         p && (k.clearTimeout(a),
//         ContextHub.console.timeStamp("contexthub initialized"),
//         ContextHub.eventing.off(c.type, "initialization-watcher"),
//         ContextHub.eventing.trigger(ContextHub.Constants.EVENT_ALL_STORES_READY, {}, {
//             defer: 0,
//             _: {
//                 wasReadyAt: (new Date).getTime(),
//                 stores: f
//             }
//         }))
//     }, "initialization-watcher")
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.generic-stores - ContextHub.Store.Core.js");
// (function(d, k) {
//     k.ContextHub.Store = k.ContextHub.Store || {};
//     var f = new ContextHub.Utils.Persistence.prototype.PersistenceMode("memory",function(a) {
//         var c = a.container
//           , g = a.storage
//           , f = function() {
//             var a = ("object" === d.type(g) ? g : {})[c];
//             return "object" === d.type(a) ? a : {}
//         };
//         a = function(a) {
//             g = "object" === d.type(g) ? g : {};
//             g[c] = a
//         }
//         ;
//         var k = ContextHub.Utils.Persistence.prototype.PersistenceMode.prototype;
//         return {
//             setItem: k.setItem.bind(this, a, f),
//             getItem: k.getItem.bind(this, f),
//             removeItem: k.removeItem.bind(this, a, f),
//             getKeys: function() {
//                 return ContextHub.Utils.JSON.tree.getKeys(f())
//             },
//             getTree: f
//         }
//     }
//     );
//     ContextHub.Store.Core = function() {}
//     ;
//     ContextHub.Store.Core.prototype.init = function(a, c) {
//         this.config = d.extend(!0, {}, ContextHub.Store.Core.defaultConfig, c);
//         this.name = a;
//         this.eventChannel = ContextHub.Constants.EVENT_STORE_UPDATED + ":" + this.name;
//         this.storeDataKey = "/store/" + this.name;
//         this.data = {};
//         this.references = {};
//         this.config.persistence || (this.config.persistence = new ContextHub.Utils.Persistence({
//             container: "data",
//             mode: f,
//             storage: this.data
//         }));
//         this.config.eventing || (a = function() {}
//         ,
//         this.config.eventing = {
//             trigger: a,
//             isPaused: a,
//             pause: a,
//             resume: a
//         });
//         this.persistence = this.config.persistence;
//         this.eventing = this.config.eventing;
//         a = this.isEventingPaused();
//         this.pauseEventing();
//         d.each(this.config.initialValues || {}, function(a, c) {
//             this.getItem(a) || this.setItem(a, c)
//         }
//         .bind(this));
//         a || this.resumeEventing()
//     }
//     ;
//     ContextHub.Store.Core.defaultConfig = {
//         eventDeferring: 32,
//         eventing: ContextHub.eventing,
//         persistence: ContextHub.persistence
//     };
//     ContextHub.Store.Core.prototype.clean = function() {
//         this.removeItem("/")
//     }
//     ;
//     ContextHub.Store.Core.prototype.reset = function(a) {
//         var c = this.isEventingPaused();
//         this.pauseEventing();
//         a || this.clean();
//         this.addAllItems(this.config.initialValues || {});
//         c || this.resumeEventing()
//     }
//     ;
//     ContextHub.Store.Core.prototype.setItem = function(a, c, g) {
//         a = this.resolveReference(a);
//         var f = this.getItem(a)
//           , k = !0
//           , m = typeof c;
//         typeof f === m && ("string" === m || "number" === m || "boolean" === m ? k = f !== c : (k = ContextHub.Utils.JSON.stringify(f),
//         m = ContextHub.Utils.JSON.stringify(c),
//         k = k.length !== m.length || k !== m));
//         k && this.persistence.setItem(this.storeDataKey + "/" + a, c) && !(g || {}).silent && this.eventing.trigger(this.eventChannel, {
//             key: a,
//             value: c,
//             old: f,
//             action: "set"
//         }, d.extend(!0, {
//             defer: this.config.eventDeferring,
//             _: {
//                 store: this.name,
//                 muteWhenNoData: !0
//             }
//         }, g));
//         return k
//     }
//     ;
//     ContextHub.Store.Core.prototype.getItem = function(a) {
//         a = this.resolveReference(a);
//         return this.persistence.getItem(this.storeDataKey + "/" + a)
//     }
//     ;
//     ContextHub.Store.Core.prototype.removeItem = function(a, c) {
//         a = this.resolveReference(a);
//         var g = !1
//           , f = this.getItem(a);
//         null !== f && (g = !0,
//         this.persistence.removeItem(this.storeDataKey + "/" + a) && !(c || {}).silent && this.eventing.trigger(this.eventChannel, {
//             key: a,
//             value: null,
//             old: f,
//             store: this.name,
//             action: "remove"
//         }, d.extend(!0, {
//             defer: this.config.eventDeferring,
//             _: {
//                 store: this.name,
//                 muteWhenNoData: !0
//             }
//         }, c)));
//         return g
//     }
//     ;
//     ContextHub.Store.Core.prototype.getKeys = function(a) {
//         var c = this.persistence.getTree();
//         c = ContextHub.Utils.JSON.tree.getItem(c, this.storeDataKey) || {};
//         a || delete c._;
//         return ContextHub.Utils.JSON.tree.getKeys(c)
//     }
//     ;
//     ContextHub.Store.Core.prototype.getTree = function(a) {
//         var c = this.persistence.getItem(this.storeDataKey) || {};
//         a || delete c._;
//         return c
//     }
//     ;
//     ContextHub.Store.Core.prototype.addAllItems = function(a, c) {
//         var g = d.type(a)
//           , f = this
//           , k = !1;
//         "object" !== g && "array" !== g || d.each(a, function(a, g) {
//             a = f.setItem(a, g, c);
//             k = k || a
//         });
//         return k
//     }
//     ;
//     ContextHub.Store.Core.prototype.addReference = function(a, c) {
//         a = ContextHub.Utils.JSON.tree.sanitizeKey(a);
//         var g = ContextHub.Utils.JSON.tree.sanitizeKey(c);
//         c = !1;
//         a && g && (a = "/" + a.join("/"),
//         g = "/" + g.join("/"),
//         a !== g && (c = !0,
//         this.references[a] = g));
//         return c
//     }
//     ;
//     ContextHub.Store.Core.prototype.removeReference = function(a) {
//         var c = ContextHub.Utils.JSON.tree.sanitizeKey(a);
//         a = !1;
//         c && (a = !0,
//         c = "/" + c.join("/"),
//         delete this.references[c]);
//         return a
//     }
//     ;
//     ContextHub.Store.Core.prototype.getReferences = function() {
//         return this.references
//     }
//     ;
//     ContextHub.Store.Core.prototype.resolveReference = function(a, c) {
//         var g = "/" + ContextHub.Utils.JSON.tree.sanitizeKey(a).join("/");
//         if (!d.isEmptyObject(this.references) && a) {
//             a = c || 5;
//             for (var f = g; 0 < a && f; ) {
//                 a--;
//                 f = ContextHub.Utils.JSON.tree.sanitizeKey(g);
//                 var k = "";
//                 c = f.slice(0);
//                 for (var m = 0; m < f.length && !this.references[k]; m++)
//                     k += "/" + f[m],
//                     c.shift();
//                 if (f = this.references[k])
//                     f = f + "/" + c.join("/"),
//                     f = "/" + ContextHub.Utils.JSON.tree.sanitizeKey(f).join("/");
//                 g = f || g
//             }
//         }
//         return g
//     }
//     ;
//     ContextHub.Store.Core.prototype.pauseEventing = function() {
//         this.eventing && this.eventing.pause(this.eventChannel)
//     }
//     ;
//     ContextHub.Store.Core.prototype.resumeEventing = function() {
//         this.eventing && this.eventing.resume(this.eventChannel)
//     }
//     ;
//     ContextHub.Store.Core.prototype.isEventingPaused = function() {
//         return this.eventing && this.eventing.isPaused(this.eventChannel)
//     }
//     ;
//     ContextHub.Store.Core.prototype.announceReadiness = function() {
//         var a = this.name
//           , c = null;
//         ContextHub.console.timeStamp('"' + a + '" ready');
//         if (this instanceof ContextHub.Store.JSONPStore) {
//             var g = this.getKeys();
//             c = {
//                 keys: {
//                     all: {
//                         hash: {},
//                         list: g
//                     }
//                 }
//             };
//             d.each(g, function(a, g) {
//                 c.keys.all.hash[g] = !0
//             })
//         }
//         this.eventing.trigger(ContextHub.Constants.EVENT_STORE_READY + ":" + a, {}, {
//             defer: 0,
//             _: {
//                 action: "ready",
//                 store: a,
//                 wasReadyAt: (new Date).getTime(),
//                 duration: this.duration || 0,
//                 overlay: c
//             }
//         })
//     }
//     ;
//     ContextHub.Store.Core.prototype.onUpdate = function(a, c) {
//         var g = this.eventChannel;
//         if ("function" === typeof c)
//             ContextHub.eventing.on(g, c.bind(this), a);
//         else
//             ContextHub.eventing.off(g, a)
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.generic-stores - ContextHub.Store.SessionStore.js");
// (function(d, k) {
//     k.ContextHub.Store = k.ContextHub.Store || {};
//     ContextHub.Store.SessionStore = function() {}
//     ;
//     ContextHub.Store.SessionStore.defaultConfig = {
//         eventDeferring: 32,
//         persistence: null,
//         eventing: ContextHub.eventing
//     };
//     ContextHub.Utils.inheritance.inherit(ContextHub.Store.SessionStore, ContextHub.Store.Core);
//     ContextHub.Store.SessionStore.prototype.init = function(f, a) {
//         this.config = d.extend(!0, {}, this.config, ContextHub.Store.SessionStore.defaultConfig, a);
//         this.uber("init", f, this.config)
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.generic-stores - ContextHub.Store.PersistedStore.js");
// (function(d, k) {
//     k.ContextHub.Store = k.ContextHub.Store || {};
//     ContextHub.Store.PersistedStore = function() {}
//     ;
//     ContextHub.Store.PersistedStore.defaultConfig = {
//         eventDeferring: 32,
//         persistence: ContextHub.persistence
//     };
//     ContextHub.Utils.inheritance.inherit(ContextHub.Store.PersistedStore, ContextHub.Store.Core);
//     ContextHub.Store.PersistedStore.prototype.init = function(f, a) {
//         this.config = d.extend(!0, {}, this.config, ContextHub.Store.PersistedStore.defaultConfig, a);
//         this.uber("init", f, this.config)
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.generic-stores - ContextHub.Store.JSONPStore.js");
// (function(d, k) {
//     k.ContextHub.Store = k.ContextHub.Store || {};
//     ContextHub.Store.JSONPStore = function() {}
//     ;
//     ContextHub.Utils.inheritance.inherit(ContextHub.Store.JSONPStore, ContextHub.Store.Core);
//     ContextHub.Store.JSONPStore.prototype.init = function(f, a) {
//         this.config = d.extend(!0, {}, this.config, ContextHub.Store.JSONPStore.defaultConfig, a);
//         a = (f || "").replace(/[^a-zA-Z0-9]/g, "");
//         if (0 === a.length || a !== f) {
//             a = "x" + a;
//             for (var c = 0, g = 0; g < f.length; g++)
//                 c = ~~((c << 5) - c + f.charCodeAt(g));
//             c = 1E4 * Math.sin(c);
//             a += (c - Math.floor(c)).toString(36).substr(2, 5)
//         }
//         this.callbackName = a;
//         this.uber("init", f, this.config);
//         this.setUpdateInterval()
//     }
//     ;
//     ContextHub.Store.JSONPStore.defaultConfig = {
//         eventDeferring: 32,
//         persistence: null,
//         eventing: ContextHub.eventing,
//         service: null
//     };
//     ContextHub.Store.JSONPStore.prototype.getServiceDetails = function() {
//         return this.config.service
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.configureService = function(f, a) {
//         this.config.service = a ? f : d.extend(!0, {}, this.config.service, f)
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.resolveParameter = function(f) {
//         var a = "boolean" === d.type(f) ? String(f) : f
//           , c = a || "";
//         f = ["ContextHub.Paths."];
//         "string" === d.type(a) && (a = c.match(/\$\{(contexthub|variable):[^}]+}/g)) && d.each(a, function(a, f) {
//             a = f.slice(2, -1).split(/:/);
//             var g = a.shift()
//               , p = a.shift()
//               , t = null;
//             "contexthub" === g && (t = ContextHub.persistence.getItem(p));
//             "variable" === g && p && d.each(this.allowedPrefix, function(a, c) {
//                 (a = 0 === p.indexOf(c)) && (t = ContextHub.Utils.JSON.tree.getItem(k, p.replace(/\./g, "/")));
//                 return !a
//             });
//             c = c.replace(f, t || "")
//         }
//         .bind({
//             allowedPrefix: f
//         }));
//         return c
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.getServiceURL = function(f) {
//         var a = this.getServiceDetails()
//           , c = []
//           , g = [];
//         if ("object" !== d.type(a))
//             return null;
//         if (a.jsonp) {
//             var p = !0 === a.jsonp ? "callback" : ("" + a.jsonp).replace(/[^a-zA-Z0-9_$]/g, "");
//             a.params = a.params || {};
//             a.params[p] = "ContextHub.Callbacks." + this.callbackName
//         }
//         a.port = a.port && 80 === a.port ? "" : a.port;
//         a.host ? ("undefined" === typeof a.secure || "auto" === a.secure ? c.push("//") : c.push(a.secure ? "https://" : "http://"),
//         c.push(a.host),
//         c.push(a.port ? ":" + a.port : "")) : c.push(k.location.protocol + "//" + k.location.host);
//         a.path = a.path || "/";
//         p = "" + (f ? this.resolveParameter(a.path) : a.path);
//         c.push(p);
//         d.each(a.params || {}, function(a, c) {
//             g.push(encodeURIComponent(a) + "\x3d" + encodeURIComponent(f ? this.resolveParameter(c) : c))
//         }
//         .bind(this));
//         g.length && (c.push(-1 === p.indexOf("?") ? "?" : "\x26"),
//         c.push(g.join("\x26")));
//         return c.join("")
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.queryService = function(f) {
//         var a = this.getServiceURL(!0);
//         if (a) {
//             var c = this.config.service.jsonp || this.config.service.script
//               , g = this.isEventingPaused()
//               , p = this;
//             f && this.removeItem("_", {
//                 silent: !0
//             });
//             f = this.getItem(ContextHub.Constants.SERVICE_RESPONSE_TIME_KEY) || 0;
//             var n = this.getItem(ContextHub.Constants.SERVICE_LAST_URL_KEY);
//             f + this.config.service.ttl > (new Date).getTime() && n === a ? (this.duration = "cached",
//             this.announceReadiness()) : (this.setItem(ContextHub.Constants.SERVICE_LAST_URL_KEY, a),
//             k.ContextHub.Callbacks = k.ContextHub.Callbacks || {},
//             ContextHub.Callbacks[this.callbackName] = this.callbackFunction.bind(this),
//             a = {
//                 url: a,
//                 timeout: this.config.service.timeout,
//                 async: this.config.service.synchronous ? !1 : !0,
//                 method: this.config.service.method || "GET"
//             },
//             c && d.extend(a, {
//                 dataType: "script",
//                 cache: !0
//             }),
//             this.pauseEventing(),
//             this.duration = 0,
//             ContextHub.Shared.timers.start(this.name),
//             a = d.ajax(a),
//             c || a.done(function(a, c, g) {
//                 a = ContextHub.Utils.JSON.parse(g.responseText);
//                 ContextHub.Callbacks[p.callbackName](a)
//             }),
//             a.fail(function(a) {
//                 p.failureHandler(a)
//             }),
//             a.always(function() {
//                 g || p.resumeEventing();
//                 p.announceReadiness()
//             }))
//         }
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.successHandler = function(d) {
//         return d
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.failureHandler = function(d) {
//         ContextHub.console.log('There was an error while accessing JSONP service in the store "' + this.name + '", configuration: ', (this.config || {}).service, ", error: ", d)
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.callbackFunction = function(f) {
//         this.duration = ContextHub.Shared.timers.finish(this.name) + "ms";
//         this.setItem(ContextHub.Constants.SERVICE_RESPONSE_TIME_KEY, (new Date).getTime());
//         f = this.successHandler(f);
//         f = d.extend(!0, f instanceof Array ? [] : {}, f);
//         this.setItem(ContextHub.Constants.SERVICE_RAW_RESPONSE_KEY, f)
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.getRawResponse = function() {
//         return this.getItem(ContextHub.Constants.SERVICE_RAW_RESPONSE_KEY) || {}
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.reset = function(d) {
//         this.uber("reset", d);
//         this.queryService(!1)
//     }
//     ;
//     ContextHub.Store.JSONPStore.prototype.setUpdateInterval = function(d) {
//         d = isNaN(d) ? this.config.pollInterval : d;
//         this.intervalHandler && (k.clearInterval(this.intervalHandler),
//         this.intervalHandler = null);
//         if (0 < d) {
//             var a = this;
//             this.intervalHandler = k.setInterval(function() {
//                 a.queryService(!0)
//             }, d)
//         }
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.generic-stores - ContextHub.Store.PersistedJSONPStore.js");
// (function(d, k) {
//     k.ContextHub.Store = k.ContextHub.Store || {};
//     ContextHub.Store.PersistedJSONPStore = function() {}
//     ;
//     ContextHub.Store.PersistedJSONPStore.defaultConfig = {
//         eventDeferring: 32,
//         persistence: ContextHub.persistence
//     };
//     ContextHub.Utils.inheritance.inherit(ContextHub.Store.PersistedJSONPStore, ContextHub.Store.JSONPStore);
//     ContextHub.Store.PersistedJSONPStore.prototype.init = function(f, a) {
//         this.config = d.extend(!0, {}, this.config, ContextHub.Store.PersistedJSONPStore.defaultConfig, a);
//         this.uber("init", f, this.config)
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.Constants.js");
// (function(d) {
//     d.extend(!0, ContextHub.Constants, {
//         EVENT_SEGMENT_REGISTERED: "segment-engine:segment-registered",
//         EVENT_SEGMENT_UNREGISTERED: "segment-engine:segment-unregistered",
//         EVENT_SEGMENT_UPDATED: "segment-engine:segment-updated",
//         EVENT_SCRIPT_REGISTERED: "segment-engine:script-registered",
//         EVENT_SCRIPT_UNREGISTERED: "segment-engine:script-unregistered",
//         EVENT_SCRIPT_UPDATED: "segment-engine:script-updated",
//         EVENT_TEASER_REGISTERED: "segment-engine:teaser-registered",
//         EVENT_TEASER_UNREGISTERED: "segment-engine:teaser-unregistered",
//         EVENT_TEASER_LOADED: "segment-engine:teaser-loaded"
//     })
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = {
//         version: "1.1.12-20190304-1523"
//     };
//     ContextHub.SegmentEngine.getResolvedSegments = function(d) {
//         return ContextHub.SegmentEngine.SegmentManager.getResolvedSegments(d)
//     }
//     ;
//     ContextHub.SegmentEngine.getSegment = function(d) {
//         return ContextHub.SegmentEngine.SegmentManager.getSegment(d)
//     }
//     ;
//     ContextHub.SegmentEngine.getComparisonOperators = function() {
//         return ContextHub.SegmentEngine.OperatorManager.getAllOperators()
//     }
//     ;
//     ContextHub.SegmentEngine.getObjectValue = function(d) {
//         return null === d || void 0 === d ? null : d instanceof ContextHub.SegmentEngine.Operator ? d.isResolved() : d instanceof ContextHub.SegmentEngine.Property ? d.getValue() : d instanceof ContextHub.SegmentEngine.ScriptReference ? d.execute() : d instanceof ContextHub.SegmentEngine.SegmentReference ? d.isResolved() : d
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.Property.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     ContextHub.SegmentEngine.Property = function(d) {
//         var a = ContextHub.SegmentEngine.Property;
//         if (!(this instanceof a))
//             return ContextHub.Utils.inheritance.newInstance(a, arguments);
//         d = ContextHub.Utils.JSON.tree.sanitizeKey(d);
//         this.key = "/" + d.join("/");
//         this.storeName = d.shift();
//         this.itemName = d.join("/")
//     }
//     ;
//     ContextHub.SegmentEngine.Property.prototype.info = {
//         className: "Property",
//         updateEvent: ContextHub.Constants.EVENT_STORE_UPDATED
//     };
//     ContextHub.SegmentEngine.Property.prototype.getKey = function() {
//         return this.key
//     }
//     ;
//     ContextHub.SegmentEngine.Property.prototype.getStoreName = function() {
//         return this.storeName
//     }
//     ;
//     ContextHub.SegmentEngine.Property.prototype.getItemName = function() {
//         return this.itemName
//     }
//     ;
//     ContextHub.SegmentEngine.Property.prototype.getValue = function() {
//         return ContextHub.get(this.key)
//     }
//     ;
//     ContextHub.SegmentEngine.Property.prototype.toString = function() {
//         return this.info.className + '("' + this.getKey() + '") -\x3e ' + this.getValue()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.Operator.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     ContextHub.SegmentEngine.Operator = function(d, a) {
//         var c = ContextHub.SegmentEngine.Operator;
//         if (!(this instanceof c))
//             return ContextHub.Utils.inheritance.newInstance(c, arguments);
//         a = [].slice.call(arguments, 1);
//         this.operatorName = d;
//         this.operatorArguments = a
//     }
//     ;
//     ContextHub.SegmentEngine.Operator.prototype.getOperatorName = function() {
//         return this.operatorName
//     }
//     ;
//     ContextHub.SegmentEngine.Operator.prototype.getOperatorArguments = function() {
//         return this.operatorArguments
//     }
//     ;
//     ContextHub.SegmentEngine.Operator.prototype.isResolved = function() {
//         var f = !1
//           , a = !0
//           , c = this.getOperatorName()
//           , g = /^and(\.|$)/.test(c)
//           , k = /^or(\.|$)/.test(c)
//           , n = this.getOperatorArguments();
//         if ((g || k) && 2 > n.length) {
//             var m = n.length;
//             0 === m && (n.push(null),
//             n.push(null));
//             1 === m && n.push(g ? !0 : null)
//         }
//         m = ContextHub.SegmentEngine.getObjectValue(n[0]);
//         var t = d.type(m);
//         t = ContextHub.SegmentEngine.OperatorManager.getOperator(c, t);
//         var r = function(c) {
//             g && !1 === c && (a = f = !1);
//             k && !0 === c && (f = !0,
//             a = !1)
//         };
//         r(m);
//         var u = n.length ? n.slice(1) : [null];
//         if (t && a) {
//             var z = g || k ? n.length : 2;
//             c = t.operatorName;
//             u = [];
//             for (var I = 1; I < z && a; I++) {
//                 var y = ContextHub.SegmentEngine.getObjectValue(n[I]);
//                 u.push(y);
//                 r(y)
//             }
//             a && (n = [m].concat([].slice.call(u)),
//             f = t.handler.apply(this, n))
//         }
//         ContextHub.console.debug("    comparing:", m, c, u.length ? u.join(" " + c + " ") : u + "", "\x3d", f);
//         this._resolution = [c, f, [].concat.call([m], u)];
//         return f
//     }
//     ;
//     ContextHub.SegmentEngine.Operator.prototype.traverse = function(f, a) {
//         var c = []
//           , g = function(d) {
//             if (!d || "function" === typeof d.isResolved)
//                 if ("undefined" === typeof a || "function" === typeof a && a(d))
//                     c.push(d),
//                     "function" === typeof f && f(d)
//         };
//         g(this);
//         ContextHub.SegmentEngine.OperatorManager.getOperator(this.operatorName) && d.each(this.getOperatorArguments(), function(k, n) {
//             n instanceof ContextHub.SegmentEngine.Operator ? d.merge(c, n.traverse(f, a)) : g(n)
//         });
//         return c
//     }
//     ;
//     ContextHub.SegmentEngine.Operator.prototype.toString = function() {
//         var f = 'Operator("' + this.getOperatorName() + '"';
//         d.each(this.getOperatorArguments(), function(a, c) {
//             f += ", " + c
//         });
//         return f += ") -\x3e " + this.isResolved()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.OperatorManager.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     var f = {};
//     ContextHub.SegmentEngine.OperatorManager = {};
//     ContextHub.SegmentEngine.OperatorManager.register = function(a, c) {
//         "string" === typeof a && a.length && !/\.$/.test(a) && (f[a] = {
//             operatorName: a,
//             handler: c
//         })
//     }
//     ;
//     ContextHub.SegmentEngine.OperatorManager.unregister = function(a) {
//         delete f[a]
//     }
//     ;
//     ContextHub.SegmentEngine.OperatorManager.unregisterAllOperators = function() {
//         f = {}
//     }
//     ;
//     ContextHub.SegmentEngine.OperatorManager.getAllOperators = function() {
//         return f
//     }
//     ;
//     ContextHub.SegmentEngine.OperatorManager.getOperator = function(a, c) {
//         var d = (a || "").split(".", 2);
//         a = d.shift();
//         d = d.shift() || "";
//         return f[a + "." + d] || f[a + "." + c] || f[a] || null
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.Segment.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     ContextHub.SegmentEngine.Segment = function(a, c) {
//         var g = ContextHub.SegmentEngine.Segment;
//         if (!(this instanceof g))
//             return ContextHub.Utils.inheritance.newInstance(g, arguments);
//         g = a || {};
//         "string" === typeof g ? g = {
//             path: a
//         } : g.length && (g = {
//             name: g.shift(),
//             path: g.shift(),
//             boost: g.shift()
//         });
//         var f = d.trim(g.name)
//           , k = d.trim(g.path)
//           , m = parseInt(d.trim(g.boost), 10) || 0;
//         0 === f.length && (f = k.split("/").pop());
//         f = f.replace(/ /g, "-").replace(/[^a-z0-9\-]/ig, "").toLowerCase();
//         this.title = g.name;
//         this.name = f;
//         this.path = k;
//         this.boost = m;
//         this.register(c)
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.info = {
//         className: "Segment",
//         updateEvent: ContextHub.Constants.EVENT_SEGMENT_UPDATED
//     };
//     ContextHub.SegmentEngine.Segment.prototype.register = function(a) {
//         0 !== this.getPath().length && !this.isRegistered() && a instanceof ContextHub.SegmentEngine.Operator && (this.cachedResult = null,
//         this.condition = a,
//         this.registered = this.enabled = !1,
//         ContextHub.SegmentEngine.Dependency.findAllDependencies.call(this, this.getCondition()),
//         ContextHub.SegmentEngine.SegmentManager.register(this))
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.unregister = function() {
//         this.enabled = this.registered = !1;
//         this.condition = null;
//         this.isResolved();
//         ContextHub.SegmentEngine.SegmentManager.unregister(this.getPath())
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.isResolved = function() {
//         var a = !1;
//         if (null !== this.cachedResult)
//             return ContextHub.console.debug('[+] Segment "' + this.getPath() + '" resolution (cached):', this.cachedResult),
//             this.cachedResult;
//         ContextHub.console.debug('[+] Segment "' + this.getPath() + '" resolution:');
//         this.isEnabled() && this.isRegistered() && (a = this.condition.isResolved());
//         a !== this.cachedResult && (this.cachedResult = a,
//         ContextHub.eventing.trigger(this.info.updateEvent, {
//             resolved: a,
//             key: this.getPath(),
//             action: "set",
//             value: a
//         }, {
//             defer: 0,
//             _: {
//                 resolved: a,
//                 path: this.getPath()
//             }
//         }));
//         return a
//     }
//     ;
//     var f = function(a, c) {
//         var g = a._resolution;
//         c = c || [];
//         if (g) {
//             var k = g.shift()
//               , n = g.shift();
//             g = g.shift();
//             var m = k + " (" + n + ")";
//             k = {};
//             k[m] = g;
//             if (c instanceof Array)
//                 c.push(k);
//             else
//                 return k
//         }
//         d.each(a.operatorArguments, function(a, d) {
//             if (d instanceof ContextHub.SegmentEngine.Operator) {
//                 var g = (c instanceof Array ? c[c.length - 1] : c)[m];
//                 g[a] = f(d, "boolean" === typeof g[a] ? {} : [])
//             }
//         });
//         return c
//     };
//     ContextHub.SegmentEngine.Segment.prototype.debug = function() {
//         var a = this.getCondition();
//         if (a) {
//             var c = this.isResolved();
//             a = f(a);
//             ContextHub.console.debug("[todo] debug: ", c, a)
//         } else
//             ContextHub.console.debug('[-] [SegmentEngine] Segment "' + this.getPath() + '" is invalid.')
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.isRegistered = function() {
//         return !0 === this.registered
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.isEnabled = function() {
//         return !0 === this.enabled
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.enable = function() {
//         this.condition instanceof ContextHub.SegmentEngine.Operator && (this.enabled = !0)
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.disable = function() {
//         this.enabled = !1
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.getName = function() {
//         return this.name
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.getTitle = function() {
//         return this.title
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.getPath = function() {
//         return this.path
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.getBoost = function() {
//         return this.boost
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.getCondition = function() {
//         return this.condition
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.getDependencies = function() {
//         return this.dependencyList || ContextHub.SegmentEngine.Dependency.getEmptyDependencyList()
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.onUpdate = function(a, c) {
//         var d = this.info.updateEvent;
//         if ("function" === typeof c)
//             ContextHub.eventing.on(d, function(a, c) {
//                 c && c.keys.all.hash[this.segment] && this.handler()
//             }
//             .bind({
//                 segment: this.getPath(),
//                 handler: c
//             }), a);
//         else
//             ContextHub.eventing.off(d, a)
//     }
//     ;
//     ContextHub.SegmentEngine.Segment.prototype.toString = function() {
//         var a = '("' + this.getPath() + '", ' + this.getBoost() + ", " + this.getCondition() + ")";
//         return this.info.className + a + " -\x3e " + this.isResolved()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.SegmentReference.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     ContextHub.SegmentEngine.SegmentReference = function(f) {
//         var a = ContextHub.SegmentEngine.SegmentReference;
//         if (!(this instanceof a))
//             return ContextHub.Utils.inheritance.newInstance(a, arguments);
//         this.segmentPath = d.trim(f)
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentReference.prototype.info = {
//         className: "SegmentReference",
//         updateEvent: ContextHub.Constants.EVENT_SEGMENT_UPDATED
//     };
//     ContextHub.SegmentEngine.SegmentReference.prototype.getSegmentPath = function() {
//         return this.segmentPath
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentReference.prototype.isResolved = function() {
//         var d = !1
//           , a = ContextHub.SegmentEngine.SegmentManager.getSegment(this.getSegmentPath());
//         a && (d = a.isResolved());
//         return d
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentReference.prototype.toString = function() {
//         return this.info.className + '("' + this.getSegmentPath() + '") -\x3e ' + this.isResolved()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.SegmentManager.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     var f = {};
//     ContextHub.SegmentEngine.SegmentManager = {};
//     ContextHub.SegmentEngine.SegmentManager.info = {
//         registerEvent: ContextHub.Constants.EVENT_SEGMENT_REGISTERED,
//         unregisterEvent: ContextHub.Constants.EVENT_SEGMENT_UNREGISTERED
//     };
//     ContextHub.SegmentEngine.SegmentManager.register = function(a) {
//         if (!(a instanceof ContextHub.SegmentEngine.Segment && a.getCondition()))
//             return !1;
//         f[a.getPath()] = a;
//         a.enabled = !0;
//         a.registered = !0;
//         ContextHub.eventing.trigger(ContextHub.SegmentEngine.SegmentManager.info.registerEvent, {
//             key: a.getPath(),
//             action: "set",
//             value: "registered"
//         }, {
//             defer: 0
//         });
//         ContextHub.SegmentEngine.Dependency.dependencyMonitor(a, !0);
//         a.isResolved();
//         return !0
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.unregister = function(a) {
//         if (a = a instanceof ContextHub.SegmentEngine.Segment ? a : this.getSegment(a))
//             a.registered = !1,
//             a.disable(),
//             delete f[a.getPath()],
//             ContextHub.SegmentEngine.Dependency.dependencyMonitor(a, !1),
//             a.cachedResult = null,
//             a.dependencyList = ContextHub.SegmentEngine.Dependency.getEmptyDependencyList(),
//             a.isResolved(),
//             ContextHub.eventing.trigger(ContextHub.SegmentEngine.SegmentManager.info.unregisterEvent, {
//                 segment: a,
//                 key: a.getPath(),
//                 action: "remove",
//                 value: "unregistered"
//             }, {
//                 defer: 0
//             })
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.unregisterAllSegments = function() {
//         d.each(f, function(a, c) {
//             c.unregister()
//         })
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.getAllSegments = function() {
//         return f
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.getSegment = function(a) {
//         return f[a] || null
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.getResolvedSegments = function(a) {
//         var c = !0 === (a || {}).returnLookup
//           , g = c ? {} : [];
//         a = ContextHub.Shared.timers.start();
//         d.each(f, function(a, d) {
//             d.isResolved() && (c ? g[d.getPath()] = d : g.push(d))
//         });
//         ContextHub.console.log(ContextHub.Shared.timestamp(), "[+] checking resolved segments (" + ContextHub.Shared.timers.finish(a) + "ms)");
//         return g
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.getUnresolvedSegments = function(a) {
//         var c = !0 === (a || {}).returnLookup
//           , g = c ? {} : [];
//         a = ContextHub.Shared.timers.start();
//         d.each(f, function(a, d) {
//             d.isResolved() || (c ? g[d.getPath()] = d : g.push(d))
//         });
//         ContextHub.console.log(ContextHub.Shared.timestamp(), "[+] checking unresolved segments (" + ContextHub.Shared.timers.finish(a) + "ms)");
//         return g
//     }
//     ;
//     ContextHub.SegmentEngine.SegmentManager.invalidateCache = function() {
//         for (var a in f)
//             f.hasOwnProperty(a) && (f[a].cachedResult = null);
//         return ContextHub.SegmentEngine.SegmentManager.getResolvedSegments()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.ScriptReference.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     ContextHub.SegmentEngine.ScriptReference = function(f, a) {
//         var c = ContextHub.SegmentEngine.ScriptReference;
//         if (!(this instanceof c))
//             return ContextHub.Utils.inheritance.newInstance(c, arguments);
//         a = [].slice.call(arguments, 1);
//         this.scriptName = d.trim(f);
//         this.scriptArguments = a;
//         this.cachedResult = null;
//         this.dependencyList = ContextHub.SegmentEngine.Dependency.getEmptyDependencyList();
//         for (c = 0; c < this.scriptArguments.length; c++)
//             this.dependOn(this.scriptArguments[c]);
//         ContextHub.SegmentEngine.Dependency.dependencyMonitor(this, !0)
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.info = {
//         className: "ScriptReference",
//         updateEvent: ContextHub.Constants.EVENT_SCRIPT_UPDATED
//     };
//     ContextHub.SegmentEngine.ScriptReference.prototype.dependOn = function(d) {
//         ContextHub.SegmentEngine.Dependency.addDependency.call(this, d)
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.getScriptName = function() {
//         return this.scriptName
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.getScriptHandler = function() {
//         return ContextHub.SegmentEngine.ScriptManager.getScript(this.getScriptName())
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.getScriptArguments = function() {
//         return this.scriptArguments
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.getDependencies = function() {
//         return this.dependencyList || ContextHub.SegmentEngine.Dependency.getEmptyDependencyList()
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.execute = function() {
//         var f = null
//           , a = this.getScriptHandler();
//         if (null !== this.cachedResult)
//             return this.cachedResult;
//         if ("function" === typeof a) {
//             var c = this.getScriptArguments()
//               , g = [];
//             d.each(c, function(a, c) {
//                 a = ContextHub.SegmentEngine.getObjectValue(c);
//                 g.push(a)
//             });
//             try {
//                 f = a.apply(this, g)
//             } catch (p) {
//                 ContextHub.console.error('[-] [SegmentEngine] User script "' + this.getScriptName() + '" failed:', p),
//                 f = null
//             }
//         }
//         this.cachedResult !== f && (this.cachedResult = f,
//         ContextHub.eventing.trigger(this.info.updateEvent + ":" + this.getScriptName(), {
//             script: this,
//             key: this.getScriptName(),
//             action: "set",
//             resolved: f,
//             value: f
//         }, {
//             defer: 0,
//             _: {
//                 result: f,
//                 scriptName: this.getScriptName()
//             }
//         }));
//         return f
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.isResolved = function() {
//         return this.execute()
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptReference.prototype.toString = function() {
//         var f = this.info.className + '("' + this.getScriptName() + '"';
//         d.each(this.getScriptArguments(), function(a, c) {
//             "string" === typeof c && (c = '"' + c + '"');
//             f += ", " + c
//         });
//         return f += ") -\x3e " + this.execute()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.ScriptManager.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     var f = {};
//     ContextHub.SegmentEngine.ScriptManager = {};
//     ContextHub.SegmentEngine.ScriptManager.register = function(a, d) {
//         "string" === typeof a && a.length && "function" === typeof d && (f[a] = d,
//         ContextHub.eventing.trigger(ContextHub.Constants.EVENT_SCRIPT_REGISTERED, {
//             key: a,
//             action: "set",
//             value: "registered"
//         }, {
//             defer: 0
//         }))
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptManager.unregister = function(a) {
//         this.isRegistered(a) && ContextHub.eventing.trigger(ContextHub.Constants.EVENT_SCRIPT_UNREGISTERED, {
//             key: a,
//             action: "remove",
//             value: "unregistered"
//         }, {
//             defer: 0
//         });
//         delete f[a]
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptManager.unregisterAllScripts = function() {
//         d.each(this.getAllScripts(), function(a) {
//             this.unregister(a)
//         }
//         .bind(this))
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptManager.getAllScripts = function() {
//         return f
//     }
//     ;
//     var a = function(a) {
//         ContextHub.console.error('[-] [SegmentEngine] User script "' + a + '" not found.');
//         return function() {
//             return null
//         }
//     };
//     ContextHub.SegmentEngine.ScriptManager.getScript = function(c) {
//         return f[c] || a(c)
//     }
//     ;
//     ContextHub.SegmentEngine.ScriptManager.isRegistered = function(a) {
//         return !!f[a]
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine - ContextHub.SegmentEngine.Dependency.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine = k.ContextHub.SegmentEngine || {};
//     ContextHub.SegmentEngine.Dependency = {};
//     ContextHub.SegmentEngine.Dependency.allowedDependencies = [ContextHub.SegmentEngine.SegmentReference, ContextHub.SegmentEngine.ScriptReference, ContextHub.SegmentEngine.Property];
//     ContextHub.SegmentEngine.Dependency.getEmptyDependencyList = function() {
//         var a = {};
//         d.each(ContextHub.SegmentEngine.Dependency.allowedDependencies, function(c, d) {
//             a[d.prototype.info.className] = {
//                 keys: [],
//                 updateEvent: null
//             }
//         });
//         return a
//     }
//     ;
//     ContextHub.SegmentEngine.Dependency.addDependency = function(a) {
//         if (a) {
//             this.dependencyList = this.dependencyList || ContextHub.SegmentEngine.Dependency.getEmptyDependencyList();
//             var c = null;
//             if (a instanceof ContextHub.SegmentEngine.Property) {
//                 var d = a.getKey();
//                 c = d.replace(/(^\/|\/$)/g, "").split(/\//).shift() || null
//             } else
//                 d = a instanceof ContextHub.SegmentEngine.ScriptReference ? a.getScriptName() : a instanceof ContextHub.SegmentEngine.SegmentReference ? a.getSegmentPath() : null;
//             if (d) {
//                 var f = this.dependencyList[a.info.className];
//                 f[d] || (f[d] = !0,
//                 f.keys.push(d));
//                 f.variant = a.info.className;
//                 f.updateEvent = a.info.updateEvent;
//                 c && (f.stores = f.stores || {},
//                 f.stores[c] = !0)
//             }
//         }
//     }
//     ;
//     ContextHub.SegmentEngine.Dependency.findAllDependencies = function(a) {
//         var c = (a || {}).operatorArguments;
//         if (c) {
//             a = Math.min(c.length, /^(and|or)(\.|$)/.test(a.operatorName) ? Number.MAX_VALUE : 2);
//             var d;
//             for (d = 0; d < a; d++) {
//                 var f = c[d];
//                 f instanceof ContextHub.SegmentEngine.Operator ? ContextHub.SegmentEngine.Dependency.findAllDependencies.call(this, f) : ContextHub.SegmentEngine.Dependency.addDependency.call(this, f)
//             }
//         }
//     }
//     ;
//     var f = function(a, c) {
//         a = this.getDependencies();
//         var d = null;
//         c.channel === ContextHub.SegmentEngine.SegmentReference.prototype.info.updateEvent ? d = a.SegmentReference : c.channel === ContextHub.SegmentEngine.ScriptReference.prototype.info.updateEvent ? d = a.ScriptReference : c.channel === ContextHub.SegmentEngine.Property.prototype.info.updateEvent ? d = a.Property : ContextHub.console.error("[-] [SegmentEngine] Unsupported event type:", c.channel);
//         d && ContextHub.SegmentEngine.Dependency.isMatching(c, d) && (this.cachedResult = null,
//         this.isResolved())
//     };
//     ContextHub.SegmentEngine.Dependency.dependencyMonitor = function(a, c) {
//         if (a instanceof ContextHub.SegmentEngine.Segment || a instanceof ContextHub.SegmentEngine.ScriptReference) {
//             var d = (a.getPath || a.getScriptName).call(a).replace(/[^a-z]/ig, ""), k = a.getDependencies(), n = [], m;
//             for (m in k)
//                 if (k.hasOwnProperty(m)) {
//                     var t = k[m];
//                     t.keys.length && n.push(t.updateEvent)
//                 }
//             if (n.length)
//                 if (n = n.join(" "),
//                 c)
//                     ContextHub.eventing.on(n, f.bind(a), d);
//                 else
//                     ContextHub.eventing.off(n, d)
//         }
//     }
//     ;
//     ContextHub.SegmentEngine.Dependency.isMatching = function(a, c) {
//         var d = ContextHub.SegmentEngine.Dependency[(c || {}).variant + "Handler"];
//         return "function" === typeof d ? d.call(this, a, c) : !1
//     }
//     ;
//     ContextHub.SegmentEngine.Dependency.SegmentReferenceHandler = function(a, c) {
//         for (var d = 0; d < c.keys.length; d++)
//             if (a.keys.all.hash[c.keys[d]])
//                 return !0;
//         return !1
//     }
//     ;
//     ContextHub.SegmentEngine.Dependency.ScriptReferenceHandler = function(a, c) {
//         for (var d = 0; d < c.keys.length; d++)
//             if (a.keys.all.hash[c.keys[d]])
//                 return !0;
//         return !1
//     }
//     ;
//     ContextHub.SegmentEngine.Dependency.PropertyHandler = function(a, c) {
//         if (c.stores[a.store])
//             for (var d = 0; d < c.keys.length; d++) {
//                 var f = c.keys[d];
//                 f = f.substr(f.indexOf("/", 1));
//                 if (a.keys.all.hash[f])
//                     return !0
//             }
//         return !1
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.and.js");
// (function() {
//     ContextHub.SegmentEngine.OperatorManager.register("and", function(d, k) {
//         return !(!d || !k)
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.or.js");
// (function() {
//     ContextHub.SegmentEngine.OperatorManager.register("or", function(d, k) {
//         return !(!d && !k)
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.equal.js");
// (function(d) {
//     var k = function(f) {
//         "boolean" !== typeof f && (f = /^true$/i.test(d.trim(String(f))));
//         return f
//     };
//     ContextHub.SegmentEngine.OperatorManager.register("equal", function(d, a) {
//         return d === a
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("equal.string", function(d, a) {
//         d = String(d);
//         a = String(a);
//         return d === a
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("equal.number", function(d, a) {
//         d = Number(String(d) || void 0);
//         a = Number(String(a) || void 0);
//         return d === a
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("equal.boolean", function(d, a) {
//         d = k(d);
//         a = k(a);
//         return d === a
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("equal.date", function(d, a) {
//         d = new Date(d || void 0);
//         a = new Date(a || void 0);
//         return Number(d) === Number(a)
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("equal.regexp", function(d, a) {
//         var c = !1;
//         "string" === typeof d && a && (a instanceof RegExp || (a = new RegExp(a)),
//         c = a.test(d));
//         return c
//     })
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.not-equal.js");
// (function(d) {
//     var k = function(d) {
//         return function() {
//             return !d.apply(this, arguments)
//         }
//     };
//     d.each(ContextHub.SegmentEngine.OperatorManager.getAllOperators(), function(d, a) {
//         /^equal(\.|$)/.test(d) && ContextHub.SegmentEngine.OperatorManager.register("not-" + d, k(a.handler))
//     })
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.less-than.js");
// (function() {
//     ContextHub.SegmentEngine.OperatorManager.register("less-than", function(d, k) {
//         return d < k
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("less-than.string", function(d, k) {
//         d = String(d);
//         k = String(k);
//         return d < k
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("less-than.number", function(d, k) {
//         d = Number(String(d) || void 0);
//         k = Number(String(k) || void 0);
//         return d < k
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("less-than.date", function(d, k) {
//         d = new Date(d || void 0);
//         k = new Date(k || void 0);
//         return Number(d) < Number(k)
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.less-than-or-equal.js");
// (function(d) {
//     var k = function(a, d) {
//         ContextHub.console.error("[-] [SegmentEngine] Comparison operator not found:", a + (d ? "." + d : ""));
//         return function() {
//             return !1
//         }
//     }
//       , f = function(a, d) {
//         return (ContextHub.SegmentEngine.OperatorManager.getOperator(a, d) || {}).handler || k(a, d)
//     }
//       , a = function(a) {
//         var c = f("less-than", a)
//           , d = f("equal", a);
//         return function() {
//             return c.apply(this, arguments) || d.apply(this, arguments)
//         }
//     };
//     d.each(ContextHub.SegmentEngine.OperatorManager.getAllOperators(), function(c) {
//         if (/^less-than(\.|$)/.test(c)) {
//             var d = c.split(".", 2);
//             c = d.shift();
//             d = d.shift();
//             c = c.replace("less-than", "less-than-or-equal");
//             d && (c += "." + d);
//             ContextHub.SegmentEngine.OperatorManager.register(c, a(d))
//         }
//     })
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.greater-than.js");
// (function() {
//     ContextHub.SegmentEngine.OperatorManager.register("greater-than", function(d, k) {
//         return d > k
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("greater-than.string", function(d, k) {
//         d = String(d);
//         k = String(k);
//         return d > k
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("greater-than.number", function(d, k) {
//         d = Number(String(d) || void 0);
//         k = Number(String(k) || void 0);
//         return d > k
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("greater-than.date", function(d, k) {
//         d = new Date(d || void 0);
//         k = new Date(k || void 0);
//         return Number(d) > Number(k)
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators - Operator.greater-than-or-equal.js");
// (function(d) {
//     var k = function(a, d) {
//         ContextHub.console.error("[-] [SegmentEngine] Comparison operator not found:", a + (d ? "." + d : ""));
//         return function() {
//             return !1
//         }
//     }
//       , f = function(a, d) {
//         return (ContextHub.SegmentEngine.OperatorManager.getOperator(a, d) || {}).handler || k(a, d)
//     }
//       , a = function(a) {
//         var c = f("greater-than", a)
//           , d = f("equal", a);
//         return function() {
//             return c.apply(this, arguments) || d.apply(this, arguments)
//         }
//     };
//     d.each(ContextHub.SegmentEngine.OperatorManager.getAllOperators(), function(c) {
//         if (/^greater-than(\.|$)/.test(c)) {
//             var d = c.split(".", 2);
//             c = d.shift();
//             d = d.shift();
//             c = c.replace("greater-than", "greater-than-or-equal");
//             d && (c += "." + d);
//             ContextHub.SegmentEngine.OperatorManager.register(c, a(d))
//         }
//     })
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators.bbva - Operator.contains.js");
// (function() {
//     Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
//         value: function(d, k) {
//             if (null == this)
//                 throw TypeError('"this" is null or not defined');
//             var f = Object(this)
//               , a = f.length >>> 0;
//             if ("function" !== typeof d)
//                 throw TypeError("predicate must be a function");
//             for (var c = 0; c < a; ) {
//                 var g = f[c];
//                 if (d.call(k, g, c, f))
//                     return g;
//                 c++
//             }
//         },
//         configurable: !0,
//         writable: !0
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("contains", function(d, k) {
//         return d && "string" === typeof d ? d.split("|").find(function(d) {
//             return d === k
//         }) : !1
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.operators.bbva - Operator.contains.js");
// (function() {
//     Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
//         value: function(d, k) {
//             if (null == this)
//                 throw TypeError('"this" is null or not defined');
//             var f = Object(this)
//               , a = f.length >>> 0;
//             if ("function" !== typeof d)
//                 throw TypeError("predicate must be a function");
//             for (var c = 0; c < a; ) {
//                 var g = f[c];
//                 if (d.call(k, g, c, f))
//                     return g;
//                 c++
//             }
//         },
//         configurable: !0,
//         writable: !0
//     });
//     ContextHub.SegmentEngine.OperatorManager.register("contains", function(d, k) {
//         return d && "string" === typeof d ? d.split("|").find(function(d) {
//             return d === k
//         }) : !1
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     ContextHub.SegmentEngine.PageInteraction = {};
//     ContextHub.SegmentEngine.PageInteraction.info = {
//         propertyHolder: "data-contexthub-property",
//         processorHolder: "data-processor",
//         defaultHolder: "data-default-value"
//     };
//     ContextHub.SegmentEngine.PageInteraction.getPropertyPlaceholders = function(f) {
//         var a = "[" + ContextHub.SegmentEngine.PageInteraction.info.propertyHolder + (f ? '^\x3d"%1"]' : "]");
//         f = d([a.replace(/%1/, "/" + f), a.replace(/%1/, f)].join(", "));
//         var c = [];
//         d.each(f, function(a, d) {
//             a = ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder(d);
//             a.isValid() && c.push(a)
//         });
//         return c
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.PropertyPlaceholder.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     var f = function() {
//         var a = this.element.attr(ContextHub.SegmentEngine.PageInteraction.info.propertyHolder);
//         this.element && a ? (a = ContextHub.Utils.JSON.tree.sanitizeKey(a),
//         this.storeName = a.shift(),
//         this.propertyName = "/" + a.join("/"),
//         this.keyName = "/" + this.storeName + this.propertyName,
//         this.defaultValue = d.trim(this.element.attr(ContextHub.SegmentEngine.PageInteraction.info.defaultHolder) || ""),
//         this.processors = [],
//         d.each((this.element.attr(ContextHub.SegmentEngine.PageInteraction.info.processorHolder) || "").split(/,/), function(a, g) {
//             a = d.trim(g);
//             a.length && this.processors.push(a)
//         }
//         .bind(this))) : (this.defaultValue = this.propertyName = this.keyName = this.storeName = null,
//         this.processors = [])
//     };
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder = function(a) {
//         var c = ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder;
//         if (!(this instanceof c))
//             return ContextHub.Utils.inheritance.newInstance(c, arguments);
//         this.element = d(a);
//         f.call(this)
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder.prototype.update = function(a) {
//         f.call(this);
//         var c = this.getValueProcessors();
//         a || (a = ContextHub.get(this.getKey()));
//         a && "" !== a || (a = this.getDefaultValue());
//         for (var g = 0; g < c.length; g++) {
//             var k = ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.getProcessor(c[g]);
//             a = d.trim(k.handler.call(this, a))
//         }
//         this.element.val() !== a && this.element.text(a)
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder.prototype.getPropertyName = function() {
//         f.call(this);
//         return this.propertyName || ""
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder.prototype.getKey = function() {
//         f.call(this);
//         return this.keyName || ""
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder.prototype.getDefaultValue = function() {
//         f.call(this);
//         return this.defaultValue || ""
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder.prototype.getValueProcessors = function() {
//         return this.processors || []
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder.prototype.isValid = function() {
//         return !!this.propertyName
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.PropertyProcessor.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     var f = {};
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor = {};
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.register = function(a, d) {
//         "string" === typeof a && a.length && (f[a] = {
//             processorName: a,
//             handler: d
//         })
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.unregister = function(a) {
//         delete f[a]
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.unregisterAllProcessors = function() {
//         f = {}
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.getAllProcessors = function() {
//         return f
//     }
//     ;
//     var a = {
//         processorName: "default",
//         handler: function(a) {
//             return a
//         }
//     };
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.getProcessor = function(c) {
//         return f[c] || a
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.Teaser.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     var f = {
//         analytics: 1,
//         design: 1,
//         disabled: 1,
//         preview: 1,
//         read_only: 1
//     }
//       , a = function(a) {
//         var c = a;
//         if ("ui" === ContextHub.Constants.MODE) {
//             var d = /[?&]wcmmode=([^&#]*)/.exec(k.location.href);
//             d = d && 1 < d.length ? (d[1] || "").toLowerCase() : ContextHub.Utils.Cookie.getItem("wcmmode");
//             f[d] && (c += (-1 === a.indexOf("?") ? "?" : "\x26") + "wcmmode\x3d" + d)
//         }
//         return c
//     };
//     ContextHub.SegmentEngine.PageInteraction.Teaser = function(a) {
//         var c = ContextHub.SegmentEngine.PageInteraction.Teaser;
//         if (!(this instanceof c))
//             return ContextHub.Utils.inheritance.newInstance(c, arguments);
//         a = a || {};
//         this.details = {
//             locationId: d.trim(a.locationId),
//             variants: a.variants || [],
//             strategy: d.trim(a.strategy),
//             trackingURL: d.trim(a.trackingURL)
//         };
//         this.register()
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.info = {
//         className: "Teaser",
//         loadEvent: ContextHub.Constants.EVENT_TEASER_LOADED
//     };
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.register = function() {
//         this.details.locationId.length && this.details.variants.length && !this.isRegistered() && (this.registered = ContextHub.SegmentEngine.PageInteraction.TeaserManager.register(this))
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.unregister = function() {
//         this.registered = !1;
//         ContextHub.SegmentEngine.PageInteraction.TeaserManager.unregister(this)
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.updatePlaceholder = function() {
//         var c = this.getBestCandidate()
//           , g = null;
//         if (c) {
//             var f = this.currentlyLoaded || {};
//             g = a(c.url);
//             if (f.path === c.path && f.url === g)
//                 return
//         }
//         c ? (this.currentlyLoaded = d.extend(!0, {}, c, {
//             url: g
//         }),
//         this.getVariantContent(g, function(a) {
//             d("#" + this.details.locationId).html(a);
//             ContextHub.eventing.trigger(ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.info.loadEvent, {
//                 teaser: this,
//                 variant: c,
//                 key: this.details.locationId,
//                 action: "set",
//                 value: "loaded"
//             }, {
//                 defer: 0
//             })
//         }
//         .bind(this))) : delete this.currentlyLoaded
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.getVariantContent = function(a, g, f) {
//         var c = ContextHub.SegmentEngine.PageInteraction.Cache.get(a);
//         c ? g.call(this, c.content, c.status, c.xhr) : (c = d.ajax({
//             url: a,
//             async: !0
//         }),
//         c.done(function(c, d, f) {
//             ContextHub.SegmentEngine.PageInteraction.Cache.set(a, {
//                 content: c,
//                 status: d,
//                 xhr: f,
//                 url: a
//             });
//             g.call(this, c, d, f)
//         }),
//         "function" === typeof f && c.fail(function(a) {
//             f.call(this, a)
//         }))
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.getBestCandidate = function() {
//         for (var a = null, d = [], f = [], k = ContextHub.SegmentEngine.SegmentManager.getResolvedSegments({
//             returnLookup: !0
//         }), m = this.details.variants, t = 0; t < m.length; t++) {
//             var r = m[t]
//               , u = r.segments || []
//               , z = !1
//               , I = !1;
//             r.boost = 0;
//             if (0 === u.length)
//                 I = z = !0;
//             else
//                 for (var y = 0; y < u.length; y++) {
//                     var F = k[u[y]];
//                     "undefined" !== typeof F && (z = !0,
//                     r.boost = Math.max(r.boost, F.boost || 0))
//                 }
//             z && (I ? f : d).push(r)
//         }
//         if (0 === d.length || "random" === this.details.strategy)
//             d = [].concat.call(d, f);
//         d.length && (d.sort(function(a, c) {
//             return c.boost - a.boost
//         }),
//         a = ContextHub.SegmentEngine.PageInteraction.StrategyManager.chooseCandidate(d, this.details.strategy));
//         return a
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.getCurrentlyLoaded = function() {
//         return this.currentlyLoaded || null
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.isRegistered = function() {
//         return !0 === this.registered
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.getTeaserId = function() {
//         return this.details.locationId
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Teaser.prototype.toString = function() {
//         var a = [];
//         d.each(a, function(c, d) {
//             a.push(c + ': "' + d + '"')
//         });
//         return this.info.className + "(" + a.join(", ") + ")"
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.TeaserManager.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     var f = {};
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager = {};
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.info = {
//         registerEvent: ContextHub.Constants.EVENT_TEASER_REGISTERED,
//         unregisterEvent: ContextHub.Constants.EVENT_TEASER_UNREGISTERED
//     };
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.register = function(a) {
//         if (!(a instanceof ContextHub.SegmentEngine.PageInteraction.Teaser))
//             return !1;
//         f[a.getTeaserId()] = a;
//         ContextHub.eventing.trigger(ContextHub.SegmentEngine.PageInteraction.TeaserManager.info.registerEvent, {
//             teaser: a,
//             key: a.getTeaserId(),
//             action: "set",
//             value: "registered"
//         }, {
//             defer: 0
//         });
//         return !0
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.unregister = function(a) {
//         if (a = a instanceof ContextHub.SegmentEngine.PageInteraction.Teaser ? a : this.getTeaser(a))
//             a.registered = !1,
//             delete f[a.getTeaserId()],
//             ContextHub.eventing.trigger(ContextHub.SegmentEngine.PageInteraction.TeaserManager.info.unregisterEvent, {
//                 teaser: a,
//                 key: a.getTeaserId(),
//                 action: "remove",
//                 value: "unregistered"
//             }, {
//                 defer: 0
//             })
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.unregisterAllTeasers = function() {
//         d.each(f, function(a, c) {
//             c.unregister()
//         })
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.getAllTeasers = function() {
//         return f
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.getTeaser = function(a) {
//         return f[a] || null
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.TeaserManager.refreshAllTeasers = function(a) {
//         a && ContextHub.SegmentEngine.SegmentManager.invalidateCache();
//         for (var c in f)
//             f.hasOwnProperty(c) && f[c].updatePlaceholder()
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.StrategyManager.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     var f = {};
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager = {};
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.register = function(a, d, k) {
//         "string" === typeof a && a.length && (f[a] = {
//             strategyName: a,
//             displayName: d,
//             handler: k
//         })
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.unregister = function(a) {
//         delete f[a]
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.unregisterAllStrategies = function() {
//         f = {}
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.getAllStrategies = function() {
//         return f
//     }
//     ;
//     var a = {
//         strategyName: "default",
//         displayName: "Default (first teaser candidate)",
//         handler: function(a) {
//             return (a || [])[0] || null
//         }
//     };
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.getStrategy = function(c) {
//         return f[c] || a
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.chooseCandidate = function(a, d) {
//         return ContextHub.SegmentEngine.PageInteraction.StrategyManager.getStrategy(d).handler.call(this, a)
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - PageInteraction.Cache.js");
// (function(d, k) {
//     k.ContextHub.SegmentEngine.PageInteraction = k.ContextHub.SegmentEngine.PageInteraction || {};
//     var f = {};
//     ContextHub.SegmentEngine.PageInteraction.Cache = {};
//     ContextHub.SegmentEngine.PageInteraction.Cache.set = function(a, c) {
//         f[a] = c
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Cache.get = function(a) {
//         return f[a] || null
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Cache.getAllItems = function() {
//         return f || {}
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Cache.clear = function(a) {
//         delete f[a]
//     }
//     ;
//     ContextHub.SegmentEngine.PageInteraction.Cache.clearAllItems = function() {
//         f = {}
//     }
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - util.case-manipulation.js");
// (function() {
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.register("lower-case", function(d) {
//         return String(d).toLowerCase()
//     });
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.register("upper-case", function(d) {
//         return String(d).toUpperCase()
//     });
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.register("title-case", function(d) {
//         return String(d).toLowerCase().replace(/(^| )+(.)/g, function(d) {
//             return d.toUpperCase()
//         })
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - util.number-formatting.js");
// (function() {
//     ContextHub.SegmentEngine.PageInteraction.PropertyProcessor.register("timestamp-to-date", function(d) {
//         var k = function(d) {
//             return (9 >= d ? "0" : "") + d
//         };
//         d = new Date(1E3 * d);
//         d = isNaN(d.getMilliseconds()) ? new Date : d;
//         return [[d.getFullYear(), k(d.getMonth() + 1), k(d.getDay())].join("-"), [k(d.getHours()), k(d.getMinutes()), k(d.getSeconds())].join(":")].join(" ")
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - task.page-update-watcher.js");
// (function(d, k) {
//     var f = k.MutationObserver || k.WebKitMutationObserver;
//     if (f) {
//         var a = {
//             childList: !0,
//             attributes: !0,
//             characterData: !0,
//             subtree: !0,
//             attributeOldValue: !0,
//             characterDataOldValue: !0,
//             attributeFilter: [ContextHub.SegmentEngine.PageInteraction.info.propertyHolder, ContextHub.SegmentEngine.PageInteraction.info.defaultHolder, ContextHub.SegmentEngine.PageInteraction.info.processorHolder]
//         };
//         d(function() {
//             (new f(function(a) {
//                 for (var c = "[" + ContextHub.SegmentEngine.PageInteraction.info.propertyHolder + "]", f = [], k = 0; k < a.length; k++) {
//                     var m = a[k];
//                     d.merge(f, d(m.addedNodes).filter(c));
//                     m.attributeName && m.target && f.push(m.target)
//                 }
//                 d.each(d.unique(f), function(a, c) {
//                     a = ContextHub.SegmentEngine.PageInteraction.PropertyPlaceholder(c);
//                     a.isValid() && a.update()
//                 })
//             }
//             )).observe(k.document.body, a)
//         })
//     }
//     d(function() {
//         var a = ContextHub.SegmentEngine.PageInteraction.getPropertyPlaceholders();
//         d.each(a, function(a, c) {
//             c.isValid() && c.update()
//         })
//     })
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - task.data-update-watcher.js");
// (function(d) {
//     ContextHub.eventing.on(ContextHub.Constants.EVENT_STORE_UPDATED, function(k, f) {
//         k = ContextHub.SegmentEngine.PageInteraction.getPropertyPlaceholders((f || {}).store);
//         d.each(k, function(a, c) {
//             var d = c.getPropertyName();
//             a = this.eventData.keys.set.hash[d];
//             d = this.eventData.keys.removed.hash[d];
//             var f = a ? a.value : void 0;
//             (a || d) && c.update(f)
//         }
//         .bind({
//             eventData: f
//         }))
//     }, "page-interaction", !0)
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - task.teaser-update.js");
// (function(d) {
//     var k = 0
//       , f = function() {
//         var a = ContextHub.SegmentEngine.PageInteraction.TeaserManager.getAllTeasers();
//         d.each(a, function(a, c) {
//             c.isRegistered() && c.updatePlaceholder()
//         })
//     }
//       , a = function() {
//         80 <= (new Date).getTime() - k ? (f(),
//         k = 0) : window.requestAnimationFrame(a)
//     };
//     ContextHub.eventing.once([ContextHub.Constants.EVENT_ALL_STORES_READY, ContextHub.Constants.EVENT_STORES_PARTIALLY_READY], function() {
//         var c = [ContextHub.Constants.EVENT_SEGMENT_UPDATED, ContextHub.Constants.EVENT_STORE_UPDATED + ":campaign", ContextHub.Constants.EVENT_TEASER_REGISTERED];
//         ContextHub.eventing.off(c, "teaser-updater");
//         ContextHub.eventing.on(c, function() {
//             var c = 0 === k;
//             k = (new Date).getTime() + 80;
//             c && a()
//         }, "teaser-updater", !0)
//     }, "teaser-initialization", !0)
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - strategy.first.js");
// (function() {
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.register("first", "First candidate", function(d) {
//         return (d || [])[0] || null
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - strategy.last.js");
// (function() {
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.register("last", "Last candidate", function(d) {
//         var k;
//         d && (k = d[d.length - 1]);
//         return k || null
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.segment-engine.page-interaction - strategy.random.js");
// (function() {
//     ContextHub.SegmentEngine.PageInteraction.StrategyManager.register("random", "Random", function(d) {
//         var k;
//         d && (k = d[Math.floor(Math.random() * d.length)]);
//         return k || null
//     })
// }
// )();
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.aem.segmentation - store.segmentation.js");
// (function(d) {
//     var k = {
//         service: {
//             script: !0,
//             timeout: 3E3,
//             path: window.ContextHub.Paths.SEGMENTATION_PATH + ".seg.js"
//         }
//     }
//       , f = function(a, g) {
//         this.config = d.extend(!0, {}, k, g);
//         this.init(a, this.config);
//         this.refreshData();
//         ContextHub.eventing.on(ContextHub.Constants.EVENT_SEGMENT_UPDATED, function() {
//             requestAnimationFrame(this.refreshData.bind(this))
//         }
//         .bind(this));
//         ContextHub.isOptedOut() ? this.announceReadiness() : this.reloadSegments()
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.PersistedJSONPStore);
//     f.prototype.reset = function(a) {
//         ContextHub.SegmentEngine.SegmentManager.unregisterAllSegments();
//         this.uber("reset", a)
//     }
//     ;
//     f.prototype.queryService = function(a) {
//         ContextHub.isOptedOut() || this.uber("queryService", a)
//     }
//     ;
//     f.prototype.reloadSegments = function() {
//         this.reset()
//     }
//     ;
//     var a = function(a) {
//         a = parseInt(a, 10) || 0;
//         if (0 >= a)
//             a = "No segment";
//         else if (5 >= a)
//             a = a + " segment" + (1 < a ? "s" : "");
//         else {
//             var c = 5 * Math.floor(a / 5);
//             a = (a === c ? "" : "More than ") + c + " segments"
//         }
//         return a
//     };
//     f.prototype.refreshData = function() {
//         var c = [];
//         d.each(ContextHub.SegmentEngine.getResolvedSegments(), function(a, d) {
//             if (a = d.getPath()) {
//                 var g = a + ".html";
//                 d = {
//                     label: d.getTitle() || d.getName() || a,
//                     link: g,
//                     path: a
//                 };
//                 c.push(d)
//             }
//         });
//         var g = c.length;
//         this.setItem("segments", c);
//         this.setItem("summary", a(g));
//         return c
//     }
//     ;
//     f.prototype.getResolvedSegments = function() {
//         return ContextHub.SegmentEngine.SegmentManager.getResolvedSegments()
//     }
//     ;
//     f.prototype.getUnresolvedSegments = function() {
//         return ContextHub.SegmentEngine.SegmentManager.getUnresolvedSegments()
//     }
//     ;
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "aem.segmentation", 0, function() {
//         return !!ContextHub.SegmentEngine
//     })
// }
// )(ContextHubJQ);
// (function(d, k) {
//     d.Granite = d.Granite || {};
//     d.Granite.author = d.Granite.author || {};
//     var f = function(a) {
//         this.document = a;
//         this._getRules()
//     };
//     f.getNativeDevice = function() {
//         var a = d.innerWidth || document.documentElement.clientWidth
//           , c = d.innerHeight || document.documentElement.clientHeight
//           , g = d.screen.width
//           , f = d.screen.height;
//         var k = document.body;
//         var m = document.createElement("div");
//         k.appendChild(m);
//         m.style.width = "1in";
//         var t = document.defaultView.getComputedStyle(m, null).getPropertyValue("width");
//         k.removeChild(m);
//         k = parseFloat(t);
//         a = {
//             type: "screen",
//             width: a,
//             height: c,
//             "device-width": g,
//             "device-height": f,
//             "device-pixel-ratio": 1,
//             resolution: k,
//             scan: "progressive",
//             grid: !1,
//             color: d.screen.colorDepth,
//             "color-index": d.screen.pixelDepth,
//             monochrome: 0
//         };
//         a["aspect-ratio"] = a.width / a.height;
//         a.orientation = a.width > a.height ? "landscape" : "portrait";
//         a["device-aspect-ratio"] = a["device-width"] / a["device-height"];
//         return a
//     }
//     ;
//     f.prototype = {};
//     Object.defineProperty(f.prototype, "appliedStyleSheet", {
//         get: function() {
//             for (var a = !0, c = this._appliedStyleSheet; c && (c = c.parentNode); )
//                 if (c === this.document) {
//                     a = !1;
//                     break
//                 }
//             if (!this._appliedStyleSheet || a)
//                 a = this.document,
//                 c = a.createElement("style"),
//                 c.appendChild(a.createTextNode("")),
//                 a.head.appendChild(c),
//                 this._appliedStyleSheet = c;
//             return this._appliedStyleSheet
//         }
//     });
//     f.prototype._getRules = function() {
//         var a = [], c = f.parser.getMediaRules(this.document), d, k;
//         for (d = 0; d < c.length; d++) {
//             var n = [];
//             var m = f.parser.parseMediaRule(c[d].media.mediaText);
//             for (k = 0; k < c[d].cssRules.length; k++)
//                 n.push(c[d].cssRules[k].cssText);
//             a.push({
//                 mediaText: c[d].media.mediaText,
//                 cssRules: n,
//                 parsed: m,
//                 mediaRule: c[d]
//             })
//         }
//         this.rules = a
//     }
//     ;
//     f.prototype.removeMediaRules = function() {
//         for (var a = 0; a < this.rules.length; a++)
//             for (; this.rules[a].mediaRule.cssRules[0]; )
//                 this.rules[a].mediaRule.deleteRule(0)
//     }
//     ;
//     f.prototype.clear = function() {
//         document.head.removeChild(this.appliedStyleSheet);
//         this.appliedStyleSheet = null
//     }
//     ;
//     f.prototype.restore = function() {
//         var a, c;
//         document.head.removeChild(this.appliedStyleSheet);
//         this.appliedStyleSheet = null;
//         for (a = 0; a < this.rules.length; a++)
//             try {
//                 var d = this.rules[a];
//                 for (c = 0; c < d.cssRules.length; c++)
//                     d.mediaRule.insertRule(d.cssRules[c], d.mediaRule.cssRules.length)
//             } catch (p) {}
//     }
//     ;
//     f.prototype.applyDevice = function(a) {
//         var c, d;
//         this.clear();
//         this.removeMediaRules();
//         this.appliedStyleSheet.sheet.insertRule("html, body { width: " + a.width + "px; }", 0);
//         for (c = 0; c < this.rules.length; c++)
//             try {
//                 var k = this.rules[c];
//                 if (f.parser.matchDevice(k.parsed, a))
//                     for (d = 0; d < k.cssRules.length; d++)
//                         this.appliedStyleSheet.sheet.insertRule(k.cssRules[d], this.appliedStyleSheet.sheet.cssRules.length)
//             } catch (n) {}
//     }
//     ;
//     f.prototype.prepareDevice = function(a) {
//         var c = {
//             type: a.type || "screen",
//             "device-pixel-ratio": a["device-pixel-ratio"] || 1,
//             resolution: a.resolution || 96,
//             scan: a.scan || "progressive",
//             grid: !!a.grid,
//             color: a.color || 8,
//             "color-index": a["color-index"] || 0,
//             monochrome: a.monochrome || 0
//         };
//         c.width = Math.floor(a.width / c["device-pixel-ratio"]);
//         c.height = Math.floor(a.height / c["device-pixel-ratio"]);
//         c["device-width"] = a["device-width"] || c.width;
//         c["device-height"] = a["device-height"] || c.height;
//         c["aspect-ratio"] = a["aspect-ratio"] || a.width / a.height;
//         c.orientation = a.orientation || (a.width > a.height ? "landscape" : "portrait");
//         c["device-aspect-ratio"] = a["device-aspect-ratio"] || a["device-width"] / a["device-height"];
//         return c
//     }
//     ;
//     d.Granite.author.MediaEmulator = f
// }
// )(this);
// (function(d, k) {
//     function f(a) {
//         var c = Number(a);
//         c || (a = a.match(/^(\d+)\s*\/\s*(\d+)$/),
//         c = a[1] / a[2]);
//         return c
//     }
//     function a(a) {
//         var c = parseFloat(a);
//         switch (String(a).match(t)[1]) {
//         case "dpcm":
//             return c / 2.54;
//         case "dppx":
//             return 96 * c;
//         default:
//             return c
//         }
//     }
//     function c(a) {
//         var c = parseFloat(a);
//         switch (String(a).match(m)[1]) {
//         case "em":
//             return 16 * c;
//         case "rem":
//             return 16 * c;
//         case "cm":
//             return 96 * c / 2.54;
//         case "mm":
//             return 96 * c / 2.54 / 10;
//         case "in":
//             return 96 * c;
//         case "pt":
//             return 72 * c;
//         case "pc":
//             return 72 * c / 12;
//         default:
//             return c
//         }
//     }
//     var g = /^(?:(only|not)?\s*([_a-z][_a-z0-9-]*)|(\([^\)]+\)))(?:\s*and\s*(.*))?$/i
//       , p = /^\(\s*([_a-z-][_a-z0-9-]*)\s*(?::\s*([^\)]+))?\s*\)$/
//       , n = /^(?:(min|max)-)?(.+)/
//       , m = /(em|rem|px|cm|mm|in|pt|pc)?\s*$/
//       , t = /(dpi|dpcm|dppx)?\s*$/;
//     Granite.author.MediaEmulator.parser = {
//         getMediaRules: function(a) {
//             a = a.styleSheets;
//             var c = [];
//             for (var d = 0; d < a.length; d++)
//                 try {
//                     var f = a[d];
//                     var g = f.cssRules;
//                     for (var k = 0; k < (g ? g.length : 0); k++) {
//                         var p = g[k];
//                         p.type === CSSRule.MEDIA_RULE && c.push(p)
//                     }
//                 } catch (ia) {}
//             return c
//         },
//         parseMediaRule: function(a) {
//             return a.split(",").map(function(a) {
//                 a = a.trim().match(g);
//                 var c = ((a[3] || "") + (a[4] || "")).trim().match(/\([^\)]+\)/g)
//                   , d = {};
//                 d.not = !!a[1] && "not" === a[1].toLowerCase();
//                 d.type = a[2] ? a[2].toLowerCase() : "all";
//                 d.expressions = c ? c.map(function(a) {
//                     a = a.match(p);
//                     var c = a[1].toLowerCase().match(n);
//                     return {
//                         modifier: c[1],
//                         feature: c[2],
//                         value: a[2]
//                     }
//                 }) : [];
//                 return d
//             })
//         },
//         matchDevice: function(d, g) {
//             for (var k, p, m = 0; m < d.length; m++)
//                 if (k = d[m],
//                 p = "all" === k.type || g.type === k.type,
//                 !(p && k.not || !p && !k.not) && ((p = k.expressions.every(function(d) {
//                     var k = d.feature
//                       , p = d.modifier;
//                     d = d.value;
//                     var m = g[k];
//                     if (!m)
//                         return !1;
//                     switch (k) {
//                     case "orientation":
//                     case "scan":
//                         return m.toLowerCase() === d.toLowerCase();
//                     case "width":
//                     case "height":
//                     case "device-width":
//                     case "device-height":
//                         d = c(d);
//                         m = c(m);
//                         break;
//                     case "resolution":
//                         d = a(d);
//                         m = a(m);
//                         break;
//                     case "aspect-ratio":
//                     case "device-aspect-ratio":
//                     case "device-pixel-ratio":
//                         d = f(d);
//                         m = f(m);
//                         break;
//                     case "grid":
//                     case "color":
//                     case "color-index":
//                     case "monochrome":
//                         d = parseInt(d, 10) || 1,
//                         m = parseInt(m, 10) || 0
//                     }
//                     switch (p) {
//                     case "min":
//                         return m >= d;
//                     case "max":
//                         return m <= d;
//                     default:
//                         return m === d
//                     }
//                 })) && !k.not || !p && k.not))
//                     return !0
//         }
//     }
// }
// )(this);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.granite.emulators - store.emulators.js");
// (function(d) {
//     var k = {
//         defaultEmulators: [{
//             id: "ipad",
//             title: "iPad",
//             type: "tablet",
//             platform: "iOS",
//             platformVersion: "5.1.1",
//             width: 768,
//             height: 1024,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 1
//         }, {
//             id: "ipad-2",
//             title: "iPad 2",
//             type: "tablet",
//             platform: "iOS",
//             platformVersion: "8.1.3",
//             width: 768,
//             height: 1024,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 1
//         }, {
//             id: "ipad-3",
//             title: "iPad 3 / 4 / Air",
//             type: "tablet",
//             platform: "iOS",
//             platformVersion: "8.1.3",
//             width: 1536,
//             height: 2048,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 2
//         }, {
//             id: "iphone-4",
//             title: "iPhone 4",
//             type: "mobile",
//             platform: "iOS",
//             platformVersion: "7.1.2",
//             width: 640,
//             height: 960,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 2
//         }, {
//             id: "iphone-5",
//             title: "iPhone 5",
//             type: "mobile",
//             platform: "iOS",
//             platformVersion: "8.1.3",
//             width: 640,
//             height: 1136,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 2
//         }, {
//             id: "iphone-6",
//             title: "iPhone 6",
//             type: "mobile",
//             platform: "iOS",
//             platformVersion: "8.1.3",
//             width: 750,
//             height: 1334,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 2
//         }, {
//             id: "iphone-6-plus",
//             title: "iPhone 6 Plus",
//             type: "mobile",
//             platform: "iOS",
//             platformVersion: "8.1.3",
//             width: 1080,
//             height: 1920,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 3
//         }, {
//             id: "galaxy-s4",
//             title: "Samsung Galaxy S4",
//             type: "mobile",
//             platform: "Android",
//             platformVersion: "4.4.2 KitKat",
//             width: 1080,
//             height: 1920,
//             canRotate: !0,
//             orientation: "Portrait",
//             "device-pixel-ratio": 3
//         }]
//     }
//       , f = function(a, c) {
//         this.config = d.extend(!0, {}, k, c);
//         c = this.getSupportedEmulators();
//         d.extend(!0, this.config, {
//             initialValues: {
//                 devices: c,
//                 currentDeviceId: c[0].id,
//                 orientations: [{
//                     id: "landscape",
//                     title: "Landscape"
//                 }, {
//                     id: "portrait",
//                     title: "Portrait"
//                 }]
//             }
//         });
//         this.init(a, this.config);
//         this.mediaEmulator = null;
//         window.Granite && Granite.author && Granite.author.MediaEmulator && (this.mediaEmulator = new Granite.author.MediaEmulator(window.document));
//         this.emulateDevice(this.getItem("currentDeviceId") || "native")
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.PersistedStore);
//     f.prototype.detectNativeDevice = function() {
//         var a = window.innerWidth || document.documentElement.clientWidth
//           , c = window.innerHeight || document.documentElement.clientHeight
//           , d = a > c ? "Landscape" : "Portrait"
//           , f = ContextHub.get("surferinfo/os/name") || ""
//           , k = ContextHub.get("surferinfo/os/version") || "";
//         return {
//             id: "native",
//             title: "Native",
//             type: "screen",
//             width: a,
//             height: c,
//             orientation: d,
//             platform: f,
//             platformVersion: k,
//             canRotate: !/mac os x|windows/i.test(f)
//         }
//     }
//     ;
//     f.prototype.getSupportedEmulators = function() {
//         return d.merge([this.detectNativeDevice()], this.config.defaultEmulators)
//     }
//     ;
//     f.prototype.emulateDevice = function(a) {
//         var c = a ? this.getDeviceById(a) : ContextHub.get("emulators/currentDevice");
//         c && this.mediaEmulator && (this.setItem("currentDeviceId", c.id),
//         this.setItem("currentDevice", c),
//         "native" === a ? this.mediaEmulator.restore() : this.mediaEmulator.applyDevice(c),
//         this.eventing.trigger("emulating-device:" + c.id, {
//             device: c
//         }));
//         return c
//     }
//     ;
//     f.prototype.getDeviceById = function(a) {
//         var c = null
//           , f = this.getItem("devices") || [];
//         d.each(f, function(d, f) {
//             f.id === a && (c = f);
//             return null === c
//         });
//         return c
//     }
//     ;
//     f.prototype.reset = function() {
//         this.uber("reset");
//         var a = this.getItem("currentDeviceId");
//         this.emulateDevice(a)
//     }
//     ;
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "granite.emulators", 0)
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.contexthub.surferinfo - store.surferinfo.js");
// (function(d, k) {
//     function f(a, c) {
//         this.init(a, c);
//         this.config = d.extend({}, this.config, c);
//         this.readData()
//     }
//     var a, c = function(c, f) {
//         var g = {};
//         g[c] = f;
//         a = d.extend(!0, a, g);
//         return g
//     }, g = function() {
//         var a, c = "Opera Chromium Chrome Safari Edge Trident MSIE Firefox AppleWebKit".split(" "), f = k.navigator.userAgent;
//         (a = f.match(new RegExp("( |^)(" + c.join("|") + ")(/| )[0-9.]*","ig"))) ? (a = d.map(a, function(a) {
//             a = d.trim(a).split(/[\/ ]/);
//             return {
//                 version: a.pop(),
//                 family: a.pop()
//             }
//         }),
//         a = a.sort(function(a, f) {
//             return a.family === f.family ? a.version < f.version ? -1 : 1 : d.inArray(a.family, c) < d.inArray(f.family, c) ? -1 : 1
//         }),
//         a = a.shift(),
//         "Trident" === a.family && (a.family = "MSIE",
//         a.version = {
//             "7.0": "11",
//             "6.0": "10",
//             "5.0": "9",
//             "4.0": "8"
//         }[a.version])) : a = {
//             version: "Unresolved",
//             family: "Unresolved"
//         };
//         return d.extend(a, {
//             userAgent: f
//         })
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.PersistedStore);
//     f.prototype.readData = function() {
//         a = {};
//         var f = this.getItem("display")
//           , n = k.devicePixelRatio || 1;
//         if (!f) {
//             f = k.screen.colorDepth;
//             var m = {
//                 width: k.screen.width * n,
//                 height: k.screen.height * n
//             }
//               , t = Math.pow(2, f)
//               , r = d("\x3cdiv\x3e").css({
//                 width: "1in",
//                 visibility: "hidden",
//                 position: "absolute",
//                 top: 0,
//                 left: 0
//             });
//             r.appendTo(d("body"));
//             var u = r.innerWidth();
//             r.detach();
//             var z = k.orientation;
//             "undefined" === typeof z ? (r = k.screen.width > k.screen.height ? "landscape" : "portrait",
//             z = "normal") : -90 === z || 90 === z ? (r = "landscape",
//             z = 90 === z ? "left" : "right") : (r = "portrait",
//             z = 0 === z ? "normal" : "upside-down");
//             f = c("display", {
//                 resolution: m,
//                 devicePixelRatio: n,
//                 colorDepth: f,
//                 nrOfColors: t,
//                 pixelsPerInch: u,
//                 orientation: {
//                     mode: r,
//                     direction: z
//                 }
//             }).display.resolution
//         }
//         this.getItem("window") || (n = c("window", {
//             dimension: {
//                 width: d(k).innerWidth() * n,
//                 height: d(k).innerHeight() * n
//             }
//         }).window.dimension,
//         c("window", {
//             percentageUsage: Math.floor(n.width * n.height / (f.width * f.height) * 100) / 100
//         }));
//         this.getItem("browser") || c("browser", g());
//         n = null;
//         f = k.navigator.userAgent;
//         u = f.match(/mobile|touch/i);
//         r = f.match(/tablet/i);
//         z = f.match(/iphone/i);
//         var I = f.match(/ipod/i)
//           , y = f.match(/ipad/i)
//           , F = f.match(/htc/i)
//           , T = f.match(/(BlackBerry)([^/]*)\/([0-9.]*)/i)
//           , ia = f.match(/GT-([^ ]*)/)
//           , G = f.match(/ipad|ipod|iphone/i);
//         m = f.match(/android/i);
//         var D = f.match(/windows/i)
//           , ba = f.match(/(mobile|tablet);/i) && f.match(/; rv:/i);
//         t = "Desktop";
//         z || I || m && u || D && u || T && u || ba && u ? t = "Mobile" : (y || m && r || D && r || T && r || ba && r) && (t = "Tablet");
//         if (G) {
//             n = "iOS";
//             var M = G.shift();
//             var A = (f.match("OS ([0-9_]*)") || [""]).pop().replace(/_/g, ".")
//         }
//         !n && D && (n = "windows");
//         !n && F && (n = "Android",
//         M = F.shift(),
//         A = (f.match("HTC[_ /]([^ _;-]*)") || [""]).pop());
//         !n && T && 4 === T.length && (n = "Blackberry",
//         M = T.slice(1, 3).join(" "),
//         A = T.pop());
//         !n && ia && (A = ia.pop(),
//         n = "Android",
//         M = "Samsung " + ({
//             I90: "Galaxy S",
//             I91: "Galaxy S II",
//             I93: "Galaxy S III",
//             I95: "Galaxy S IV",
//             N70: "Note",
//             N71: "Note II",
//             P31: "Tab",
//             P51: "Tab II"
//         }[A.slice(0, 3)] || "GT-" + A),
//         A = (f.match("Android ([0-9.]*)") || [A]).pop());
//         !n && m && (n = "Android",
//         M = "Unresolved",
//         A = (f.match("Android ([0-9.]*)") || [""]).pop());
//         n || (n = "Desktop",
//         M = "PC",
//         A = "");
//         M = {
//             category: t,
//             type: n,
//             model: M,
//             version: A
//         };
//         this.getItem("device") || c("device", M);
//         this.getItem("isMobile") || c("isMobile", "desktop" !== M.type);
//         if (!this.getItem("os")) {
//             M = null;
//             A = k.navigator.userAgent;
//             if (A.match(/Mac OS X|Macintosh/)) {
//                 M = "Mac OS X";
//                 var L = (A.match(/(Mac OS X|CPU OS) ([0-9_]*)/) || [""]).pop().replace(/_/g, ".");
//                 L = (A.match(/iPod|iPad|iPhone/) ? "iOS " : "") + L
//             }
//             M || -1 === A.indexOf("Windows") || (M = "Windows",
//             L = {
//                 "NT 10.0": "10",
//                 "NT 6.3": "8.1",
//                 "NT 6.2": "8",
//                 "NT 6.1": "7",
//                 "NT 6.0": "Vista",
//                 "NT 5.2": "XP x64",
//                 "NT 5.1": "XP",
//                 "NT 5.01": "2000 SP1",
//                 "NT 5.0": "2000",
//                 "NT 4.0": "NT 4.0",
//                 98: "98",
//                 "NT 95": "95",
//                 "NT CE": "CE"
//             }[A.match(/Windows (.+?);/).pop()],
//             "98" === L && -1 !== A.indexOf("Win 9x 4.90") && (L = "ME"));
//             !M && A.match(/Linux/) && (M = "Linux",
//             L = null);
//             !M && A.match(/Android/) && (M = "Android",
//             L = (A.match("Android ([0-9.]*)") || [""]).pop());
//             c("os", {
//                 name: M || "Unresolved",
//                 version: L || "Unresolved"
//             })
//         }
//         L = new Date;
//         a.year = L.getFullYear();
//         a.month = L.getMonth() + 1;
//         a.day = L.getDate();
//         a.hour = L.getHours();
//         a.minutes = L.getMinutes();
//         this.addAllItems(a, {
//             defer: 0
//         })
//     }
//     ;
//     f.prototype.reset = function(a) {
//         this.uber("reset", a);
//         this.readData()
//     }
//     ;
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "contexthub.surferinfo", 0)
// }
// )(ContextHubJQ, this);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.aem.pagedata - store.pagedata.js");
// (function(d) {
//     var k = {
//         forceExperienceCookie: "cq-forceexperience",
//         service: {
//             jsonp: !1,
//             timeout: 1E3,
//             path: "${variable:ContextHub.Paths.RESOURCE_PATH}.pagedata.json"
//         }
//     }
//       , f = function(a, c) {
//         this.config = d.extend(!0, {}, k, c);
//         this.init(a, this.config);
//         this.queryService(!0)
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.PersistedJSONPStore);
//     f.prototype.successHandler = function(a) {
//         this.setItem("/", a || {})
//     }
//     ;
//     f.prototype.setExperience = function(a) {
//         ContextHub.Utils.Cookie.setItem(this.config.forceExperienceCookie, a, {
//             path: "/"
//         })
//     }
//     ;
//     f.prototype.getExperience = function() {
//         return ContextHub.Utils.Cookie.getItem(this.config.forceExperienceCookie)
//     }
//     ;
//     f.prototype.clearExperience = function() {
//         ContextHub.Utils.Cookie.removeItem(this.config.forceExperienceCookie)
//     }
//     ;
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "aem.pagedata", 0)
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.aem.analyticsdata - store.analyticsdata.js");
// (function(d) {
//     var k = {}
//       , f = function(a, c) {
//         this.init(a, this.config);
//         this.config = d.extend(!0, {}, k, c)
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.SessionStore);
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "aem.analyticsdata", 0)
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.bbva.personalisationstore - bbva.personalisationstore.js");
// (function(d) {
//     var k = {}
//       , f = function(a, c) {
//         this.config = d.extend(!0, {}, k, c);
//         this.init(a, this.config);
//         a = this.config;
//         if (window.personalisation && a.windowItems)
//             for (var f in a.windowItems)
//                 this.setItem(a.windowItems[f], window.personalisation[f]);
//         for (var p in a)
//             f = a[p],
//             "windowItems" !== p && ("string" === typeof f || "object" === typeof f && f.evalFunction) && ("string" === typeof f ? (f = ContextHub.Utils.Cookie.getItem(f) || "",
//             this.setItem(p, f)) : (f.evalFunction && !f.parameter || this[f.evalFunction]) && this.setItem(p, this[f.evalFunction](f.parameter)))
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.PersistedStore);
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "bbva.personalisationstore", 0);
//     f.prototype.existsCookie = function(a) {
//         return ContextHub.Utils.Cookie.exists(a)
//     }
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.store.bbva.personalisationstore - bbva.personalisationstore.js");
// (function(d) {
//     var k = {}
//       , f = function(a, c) {
//         this.config = d.extend(!0, {}, k, c);
//         this.init(a, this.config);
//         a = this.config;
//         if (window.personalisation && a.windowItems)
//             for (var f in a.windowItems)
//                 this.setItem(a.windowItems[f], window.personalisation[f]);
//         for (var p in a)
//             f = a[p],
//             "windowItems" !== p && ("string" === typeof f || "object" === typeof f && f.evalFunction) && ("string" === typeof f ? (f = ContextHub.Utils.Cookie.getItem(f) || "",
//             this.setItem(p, f)) : (f.evalFunction && !f.parameter || this[f.evalFunction]) && this.setItem(p, this[f.evalFunction](f.parameter)))
//     };
//     ContextHub.Utils.inheritance.inherit(f, ContextHub.Store.PersistedStore);
//     ContextHub.Utils.storeCandidates.registerStoreCandidate(f, "bbva.personalisationstore", 0);
//     f.prototype.existsCookie = function(a) {
//         return ContextHub.Utils.Cookie.exists(a)
//     }
// }
// )(ContextHubJQ);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.finalize - ContextHub.store-initialization.js");
// (function(d, k) {
//     var f = ContextHub;
//     k = k.ContextHubKernelConfig || {};
//     var a = f.Shared.timers.start();
//     f.console.log(f.Shared.timestamp(), "[+] starting registration and initialization of the stores");
//     d.each(k.stores || {}, function(a, d) {
//         var c = f.Utils.storeCandidates.getStoreFromCandidates(d);
//         if (c)
//             try {
//                 var g = f.Shared.timers.start()
//                   , k = f.Shared.timestamp();
//                 f.registerStore(a, new c(a,d.config));
//                 f.console.log(k, '[+] initializing "' + a + '" store (' + f.Shared.timers.finish(g) + "ms)")
//             } catch (t) {
//                 f.console.error('Store "' + d.type + '" (', c, ") could not be initialized:", t)
//             }
//     });
//     f.console.log(f.Shared.timestamp(), "[+] all stores initialized (" + f.Shared.timers.finish(a) + "ms)")
// }
// )(ContextHubJQ, window);
// ContextHub.console.log(ContextHub.Shared.timestamp(), "[loading] contexthub.finalize - ContextHub.finalization.js");
// var unloadEverything = function() {
//     if (window.ContextHub) {
//         ContextHub.eventing.disableEventing();
//         ContextHub.eventing.unbindAllHandlers();
//         ContextHub.SegmentEngine && (ContextHub.SegmentEngine.SegmentManager.unregisterAllSegments(),
//         ContextHub.SegmentEngine.ScriptManager.unregisterAllScripts());
//         var d = ContextHub.UIFrame && ContextHub.UIFrame[0].contentWindow;
//         d && d.ContextHubJQ && (d.ContextHubJQ("*").off(),
//         d.ContextHubJQ("html").remove());
//         d && (delete d.$,
//         delete d.ContextHubJQ);
//         delete window.ContextHubJQ;
//         delete top.window.ContextHubJQ;
//         delete top.window.ContextHub
//     }
// };
// window.onbeforeunload = unloadEverything;
// window.top !== window && (window.top.onbeforeunload = unloadEverything);
// ContextHub.eventing.on("ui-initialized", function() {
//     var d = ContextHub.UIFrame && ContextHub.UIFrame[0];
//     d && (d.contentWindow.onbeforeunload = unloadEverything)
// }, "unload-handler", !0);
// ContextHub.console.timeStamp("contexthub.stop");
// ContextHub.console.timeEnd("contexthub.js");
